[
  {
    "title": "2014-07-24Android开发常用工具汇总",
    "ctime": "2019-12-16 14:15:11",
    "type": "1",
    "label": "1",
    "content": "\r\n    <h2><strong>一、数据库小工具Sqlite Developer&nbsp;</strong></h2>\r\n    <p>&nbsp; &nbsp;\r\n        &nbsp;SQLite，是一款轻型的数据库，是遵守ACID的关系型数据库管理系统，它的设计目标是嵌入式的，而且目前已经在很多嵌入式产品中使用了它，它占用资源非常的低，在嵌入式设备中，可能只需要几百K的内存就够了。它能够支持Windows/Linux/Unix等等主流的操作系统，同时能够跟很多程序语言相结合，比如\r\n        Tcl、C#、PHP、Java等，还有ODBC接口，同样比起Mysql、PostgreSQL这两款开源世界著名的数据库管理系统来讲，它的处理速度比他们都快。SQLite第一个Alpha版本诞生于2000年5月。\r\n        至今已经有14个年头，SQLite也迎来了一个版本 SQLite 3已经发布。</p>\r\n    <p>功能特点</p>\r\n    <p>&nbsp;&nbsp; 表结构设计，数据维护，ddl生成，加密数据库支持，sqlite2,3支持 ；收费，有试用期</p>\r\n    <p>下载地址：</p>\r\n    <p><a href=\"http://www.sqlitedeveloper.com/\">http://www.sqlitedeveloper.com</a>/</p>\r\n    <p>&nbsp;</p>\r\n    <p>当前流行的破解方法：</p>\r\n    <p>1、运行里输入regedit,打开注册表</p>\r\n    <p><a href=\"http://static.oschina.net/uploads/space/2013/0513/103759_Rq2U_577601.jpg\" target=\"_blank\"><img\r\n                src=\"http://static.oschina.net/uploads/space/2013/0513/103759_Rq2U_577601.jpg\" alt=\"\"></a></p>\r\n    <p>2、编辑-&gt;查找，输入sqlite</p>\r\n    <p><a href=\"http://static.oschina.net/uploads/space/2013/0513/103949_t9h0_577601.jpg\" target=\"_blank\"><img\r\n                src=\"http://static.oschina.net/uploads/space/2013/0513/103949_t9h0_577601.jpg\" alt=\"\"></a></p>\r\n    <p>查找结果如下</p>\r\n    <p><a href=\"http://static.oschina.net/uploads/space/2013/0513/104108_iMiX_577601.jpg\" target=\"_blank\"><img\r\n                src=\"http://static.oschina.net/uploads/space/2013/0513/104108_iMiX_577601.jpg\" alt=\"\"></a></p>\r\n    <p>3、直接删除SqliteDev节点就可以了，重新打开Sqlite Developer就可以用了，当然还是试用的，下次试用期过了再这样操作下就完了</p>\r\n    <div id=\"pname\">\r\n        <h2><strong>二、Eclipse下Subversion（svn工具）</strong></h2>\r\n        <p><strong>&nbsp; &nbsp;&nbsp;</strong></p>\r\n        <h3>&nbsp; &nbsp; subversion资源</h3>\r\n        <ul>\r\n            <li>subversion官方网站：<a title=\"http://subversion.tigris.org/\"\r\n                    href=\"http://subversion.tigris.org/\">http://subversion.tigris.org/</a></li>\r\n            <li>subclipse官方网站：<a href=\"http://subclipse.tigris.org/\">http://subclipse.tigris.org/</a></li>\r\n            <li>tortoiseSVN官方网站：<a href=\"http://tortoisesvn.tigris.org/\">http://tortoisesvn.tigris.org/</a>&nbsp;</li>\r\n        </ul>\r\n        <p>&nbsp; &nbsp; &nbsp;安装方法网上介绍很多可以度娘。</p>\r\n        <h2><strong>三、<strong>Android未使用的资源文件查找工具</strong><br></strong></h2>\r\n        <p>在开发以及版本更新的过程中，经常会在项目中产生很多未使用或者冗余的资源文件，推荐一个小工具可以在发布时检测多余的资源文件，进而精简APK文件大小。</p>\r\n        <p>http://code.google.com/p/android-unused-resources/</p>\r\n        <p>将AndroidUnusedResources1.6.2.jar文件放入工程的根目录，在命令行运行命令”java -jar AndroidUnusedResources.jar”, 就可以多余的资源文件列出。</p>\r\n        <h2><strong>四、onekey-decompile-apk&nbsp;一步到位反编译apk的工具<br></strong></h2>\r\n        <h2>详细介绍</h2>\r\n        <h2>&nbsp; &nbsp;&nbsp;<a\r\n                href=\"https://code.google.com/p/onekey-decompile-apk/\">https://code.google.com/p/onekey-decompile-apk/</a>&nbsp;\r\n        </h2>\r\n        <h2>功能</h2>\r\n        <ol>\r\n            <li>集成apktool/dex2jar/jd-gui</li>\r\n            <li>只需执行一步即可反编译出apk所有文件(资源文件和jar等等)</li>\r\n            <li>打开jd-gui反编译jar文件</li>\r\n\r\n        </ol>\r\n        <h2><a name=\"使用方法\"></a>使用用方法</h2>\r\n        <ol>\r\n            <ol>\r\n                <li>在Downloads中下载onekey-decompile-apk.zip, 解压缩到类似D:\\downloads\\onekey-decompile-apk</li>\r\n                <li>将apk文件放到onekey-decompile-apk目录下</li>\r\n                <li>将apk文件拖拽到<tt>_onekey-decompile-apk.bat</tt>上</li>\r\n                <li>执行完成后</li>\r\n                <ul>\r\n                    <li>会在onekey-decompile-apk目录下生成和apk同名的目录(放置了apktools反编译出来的东西)</li>\r\n                    <li>会在onekey-decompile-apk目录下生成和apk同名的jar文件(dex2jar反编译出来的class)</li>\r\n\r\n                </ul>\r\n    </div>\r\n\r\n"
  },
  {
    "title": "2014-07-25Android SDK及ADT更新访问问题的解决办法",
    "ctime": "2019-12-16 14:15:11",
    "type": "1",
    "label": "1",
    "content": "\r\n\r\n        <div id=\"cnblogs_post_body\" class=\"blogpost-body\"><p><span style=\"font-size: 18pt;\"><strong>一、访问问题</strong></span><br>Eclipse使用SDK Manager更新时总是出现问题</p>\r\n            <p><span style=\"color: #ff0000;\">Failed to fetch URL https://dl-ssl.google.com/android/repository/repository-6.xml, </span></p>\r\n            <p><span style=\"color: #ff0000;\">reason: Connection to https://dl-ssl.google.com refused</span></p>\r\n            <p><span style=\"color: #ff0000;\">Failed to fetch URL http://dl-ssl.google.com/android/repository/addons_list-1.xml,</span></p>\r\n            <p><span style=\"color: #ff0000;\"> reason: Connection to http://dl-ssl.google.com refused</span></p>\r\n            <p><span style=\"color: #ff0000;\">Failed to fetch URL https://dl-ssl.google.com/android/repository/addons_list-1.xml, </span></p>\r\n            <p><span style=\"color: #ff0000;\">.........</span></p>\r\n            <p>&nbsp;</p>\r\n            <p>解决办法：</p>\r\n            <p>打开SDK Manager下Tools-&gt;Options，选中“Force https://… sources to be fetched using http://…”，强制使用http协议</p>\r\n            <p><img src=\"https://images0.cnblogs.com/i/490166/201407/251919003077109.png\" alt=\"\"></p>\r\n            <p>&nbsp;</p>\r\n            <p>选取之后，有的可以更新出列表来。如果还是不能，定位到目录<span style=\"line-height: 1.5;\">：C:\\WINDOWS\\system32\\drivers\\etc下 ，</span><span style=\"line-height: 1.5;\">会看到hosts文件。</span></p>\r\n            <p><span style=\"line-height: 1.5;\">如果看不到，打开隐藏文件，如果仍然看不到如下图： &nbsp;</span></p>\r\n            <p><span style=\"line-height: 1.5;\"><img src=\"https://images0.cnblogs.com/i/490166/201407/251921180419365.png\" alt=\"\"></span></p>\r\n            <p><span style=\"line-height: 1.5;\">文件夹选项中，把对勾去掉就可以了</span></p>\r\n            <p><span style=\"line-height: 1.5;\">&nbsp; &nbsp;<img src=\"https://images0.cnblogs.com/i/490166/201407/251923458225184.png\" alt=\"\">&nbsp; &nbsp;&nbsp;<img src=\"https://images0.cnblogs.com/i/490166/201407/251924521197263.png\" alt=\"\"></span></p>\r\n            <p>&nbsp;</p>\r\n            <p><span style=\"line-height: 1.5;\">hosts文件，右击打开方式选择记事本。在里面把下面文字复制进去，内容如下（</span><span style=\"color: #ff0000;\"><em style=\"line-height: 1.5;\"><strong>是在原本的内容后面粘贴，而不是覆盖</strong></em></span><span style=\"line-height: 1.5;\">）：</span></p>\r\n            <p>#Google主页</p>\r\n            <p>203.208.46.146 www.google.com</p>\r\n            <p>#这行是为了方便打开Android开发官网 现在好像不VPN也可以打开</p>\r\n            <p>74.125.113.121 developer.android.com</p>\r\n            <p>#更新的内容从以下地址下载</p>\r\n            <p>203.208.46.146 dl.google.com</p>\r\n            <p>203.208.46.146 dl-ssl.google.com</p>\r\n            <p>效果如图</p>\r\n            <p><img src=\"https://images0.cnblogs.com/i/490166/201407/251926474326433.png\" alt=\"\"></p>\r\n            <p>&nbsp;</p>\r\n            <p><span style=\"line-height: 1.5;\">接着就会看到加载出列表了，如果发现没有，重新打开SDK Manager，就会发现列表加载出来了，主要是下载速度很给力，和直接下的龟速不是一个级别</span></p>\r\n            <p><span style=\"line-height: 1.5;\">&nbsp;<img src=\"https://images0.cnblogs.com/i/490166/201407/251929169475923.png\" alt=\"\"></span></p>\r\n            <p>&nbsp;</p>\r\n            <p><span style=\"font-size: 18pt;\">&nbsp;二<strong>、ADT版本问题</strong></span></p>\r\n            <p>然后下面的麻烦事是每次更新后一启动Eclipse都会提示：<strong><span style=\"color: #ff0000;\">This Android SDK requires Android Developer Toolkit version *.*.* or above</span></strong></p>\r\n            <p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<img src=\"https://images0.cnblogs.com/i/490166/201407/251910170729927.png\" alt=\"\"></p>\r\n            <p>这是由于选择更新后，在<strong>android_sdk_windows/tools/lib</strong>下的&nbsp;<strong>plugin.prop文件</strong>里被变更为<br><br># begin plugin.prop<br>plugin.version=<span style=\"color: #ff0000;\"><strong>23.0.0</strong></span><br># end plugin.prop<br>解决方法找到文件plugin.prop如图：</p>\r\n            <p>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<img src=\"https://images0.cnblogs.com/i/490166/201407/251914448699314.png\" alt=\"\"><br>修改plugin.version=<strong><span style=\"color: #ff0000;\">22.6.3</span></strong>保存，再重启一下Eclipse就可以了。</p>\r\n            <p>&nbsp;</p></div>\r\n    \r\n"
  },
  {
    "title": "Android学习回顾之View",
    "ctime": "2019-12-16 14:15:11",
    "type": "1",
    "label": "1",
    "content": "\r\n\r\n"
  },
  {
    "title": "Android组件的一些想法",
    "ctime": "2019-12-16 14:15:11",
    "type": "1",
    "label": "1",
    "content": "\r\n\r\n    <h5>View是如何工作的</h5>\r\n    <p>构造器---->初始化</p>\r\n    <p>onMesure();定大小</p>\r\n    <p>onLayout();定位置</p>\r\n    <p>onDraw();绘制</p>\r\n    <p>invalidate();刷新</p>\r\n\r\n\r\n\r\n    \r\n"
  },
  {
    "title": "android.view.WindowLeaked问题",
    "ctime": "2019-12-16 14:15:11",
    "type": "1",
    "label": "1",
    "content": "\r\n    <h4>问题描述：</h4>\r\n    <div style=\"background:gainsboro;padding: 10px;\">\r\n        <pre>\r\n            com.******.*****.***** E/WindowManager: android.view.WindowLeaked: Activity com.******.*****.*****.ui.*****Activity has leaked window com.android.internal.policy.PhoneWindow$DecorView{b5e82b4 V.E...... R.....ID 0,0-225,230} that was originally added here\r\n            at android.view.ViewRootImpl.<init>(ViewRootImpl.java:408)\r\n                at android.view.WindowManagerGlobal.addView(WindowManagerGlobal.java:299)\r\n                at android.view.WindowManagerImpl.addView(WindowManagerImpl.java:86)\r\n                at android.app.Dialog.show(Dialog.java:386)\r\n                at com.******.*****.*****.ui.*****Activity.do*****(*****Activity.java:385)\r\n                at com.******.*****.*****.ui.*****Activity.access$1000(*****Activity.java:48)\r\n                at com.******.*****.*****.ui.*****Activity$7.onClick(*****Activity.java:224)\r\n        </pre>\r\n    </div>\r\n    <p>简单分析：WindowLeaked窗体泄露，一般发生这种情况的原因是，一个页面（Activity）show()了一个Dialog或PopupWindow,这个Dialog必须持有Activity的Context，此时如果你直接关闭Activity就会报上面的错误。\r\n        原因是Dialog没有依附了，正确的做法是在finish()前先调用Dialog的Dismiss()方法。稳妥的写法是在Activity的onDeatroy()处理\r\n    </p>\r\n    <div style=\"background:gainsboro;padding: 10px;\">\r\n        <pre>\r\n                @Override\r\n            protected void onDestroy() {\r\n                super.onDestroy();\r\n                if (dialogMy != null && dialogMy.isShowing()){\r\n                    dialogMy.dismiss();\r\n                }\r\n            }\r\n            </pre>\r\n    </div>\r\n    <p>扩展: <a href=\"https://blog.csdn.net/qq_21586317/article/details/84669150\">Dialog 为什么必须使用 Activity 的 Context</a></p>\r\n    \r\n    <h4>正常请况下，上面的处理方法完全可以解决问题。不过我们项目中遇到的情况稍复杂点：</h4>\r\n    <ol>\r\n        <li>我们是有个公共类来处理一些业务逻辑，多个Activity会调用此类</li>\r\n        <li>Dialog和此类绑定</li>\r\n        <li>Activity调用时传入Context，Activity拿不到此Dialog</li>\r\n    </ol>\r\n    <p>这种情况明显不适合在各个Activity中处理，只有认真检查代码，力求代码实现更加严谨。</p>\r\n"
  },
  {
    "title": "OkHttp Dispatcher问题",
    "ctime": "2019-12-16 14:15:11",
    "type": "1",
    "label": "1",
    "content": "\r\n    <h4>OkHttp Dispatcher问题</h4>\r\n    <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;前几天使用 retrofit + okHttp\r\n        时出现一个问题，大致情况是使用okHttp上传视频文件app闪退,错误如下：</p>\r\n    <figure class=\"highlight java\">\r\n        <table>\r\n            <tbody>\r\n                <tr>\r\n                    <td class=\"gutter\">\r\n                        <pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre>\r\n                    </td>\r\n                    <td class=\"code\" style=\"width: 453px;\">\r\n                        <pre\r\n                            style=\"width: 453px;\"><span class=\"line\"> </span><br><span class=\"line\">FATAL EXCEPTION: OkHttp Dispatcher</span><br><span class=\"line\"></span><br><span class=\"line\">Process: com.joyvinfo.evision.help, PID: <span class=\"number\">26206</span></span><br><span class=\"line\">java.lang.OutOfMemoryError: Failed to allocate a <span class=\"number\">144207294</span> <span class=\"keyword\">byte</span> allocation with <span class=\"number\">16765168</span> free bytes and <span class=\"number\">109</span>MB until OOM</span><br><span class=\"line\">   at java.lang.StringFactory.newStringFromBytes(StringFactory.java:<span class=\"number\">79</span>)</span><br><span class=\"line\">   at java.lang.StringFactory.newStringFromBytes(StringFactory.java:<span class=\"number\">207</span>)</span><br><span class=\"line\">   at okio.Buffer.readString(Buffer.java:<span class=\"number\">616</span>)</span><br><span class=\"line\">   at okio.Buffer.readString(Buffer.java:<span class=\"number\">599</span>)</span><br><span class=\"line\">   at okhttp3.logging.HttpLoggingInterceptor.intercept(HttpLoggingInterceptor.java:<span class=\"number\">199</span>)</span><br><span class=\"line\">   at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:<span class=\"number\">92</span>)</span><br><span class=\"line\">   at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:<span class=\"number\">67</span>)</span><br><span class=\"line\">   at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:<span class=\"number\">170</span>)</span><br><span class=\"line\">   at okhttp3.RealCall.access$<span class=\"number\">100</span>(RealCall.java:<span class=\"number\">33</span>)</span><br><span class=\"line\">   at okhttp3.RealCall$AsyncCall.execute(RealCall.java:<span class=\"number\">120</span>)</span><br><span class=\"line\">   at okhttp3.internal.NamedRunnable.run(NamedRunnable.java:<span class=\"number\">32</span>)</span><br><span class=\"line\">   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:<span class=\"number\">1113</span>)</span><br><span class=\"line\">   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:<span class=\"number\">588</span>)</span><br></pre>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </figure>\r\n    <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;开始因为下面还有 <font color=\"#ff3333\">OutOfMemoryError</font>\r\n        的错，怀疑是视频有问题检查，视频文件正常大小有110M，虽然大点但不应该有问题，后来定位到自定义的okHttpClient配置的log拦截器处报错:</p>\r\n    <figure class=\"highlight java\">\r\n        <table>\r\n            <tbody>\r\n                <tr>\r\n                    <td class=\"gutter\">\r\n                        <pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre>\r\n                    </td>\r\n                    <td class=\"code\" style=\"width: 453px;\">\r\n                        <pre\r\n                            style=\"width: 453px;\"><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\">//新建log拦截器</span></span><br><span class=\"line\"></span><br><span class=\"line\">        HttpLoggingInterceptor loggingInterceptor=<span class=\"keyword\">new</span> HttpLoggingInterceptor(<span class=\"keyword\">new</span> HttpLoggingInterceptor.Logger() {</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">log</span><span class=\"params\">(String message)</span> </span>{</span><br><span class=\"line\">                <span class=\"keyword\">try</span> {</span><br><span class=\"line\">                    L.w(<span class=\"string\">\"屏幕修复api\"</span>,<span class=\"string\">\" \"</span>+message); <span class=\"comment\">//报错处</span></span><br><span class=\"line\">                } <span class=\"keyword\">catch</span> (Exception e) {</span><br><span class=\"line\">                    e.printStackTrace();</span><br><span class=\"line\">                    L.w(<span class=\"string\">\"屏幕修复api  Exception\"</span>,e.toString());</span><br><span class=\"line\">                }</span><br><span class=\"line\"></span><br><span class=\"line\">            }</span><br><span class=\"line\">        });</span><br></pre>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </figure>\r\n    <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try{}catch()是调试的时候加的，即使加上try{}catch()仍然报错，所以说HttpLoggingInterceptor内部的错，于是各种查资料，类似情况还真有比较普遍原因是:\r\n    </p>\r\n    <figure class=\"highlight java\">\r\n        <table>\r\n            <tbody>\r\n                <tr>\r\n                    <td class=\"gutter\">\r\n                        <pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre>\r\n                    </td>\r\n                    <td class=\"code\" style=\"width: 460px;\">\r\n                        <pre\r\n                            style=\"width: 460px;\"><span class=\"line\">String data=response.body().string();</span><br><span class=\"line\"><span class=\"comment\">//.string()方法使用次数超过了一次。没错，你只能使用一次，至于原因看下面的源码分析。</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//所以讲Log.d(“xx”,response.body().string());果断的注释掉吧。</span></span><br></pre>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </figure>\r\n    <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;感觉上面的错误只是方法调用有问题，不是真正的原因，继续查找,最后在Github\r\n        okHttp的源码issues中找到这个<a href=\"https://github.com/square/okhttp/issues/1049\" target=\"_blank\" rel=\"noopener\">cancel\r\n            a async call will cause FATAL EXCEPTION #1049</a>,源码作者之一在issues下说：We are seeing\r\n        this issue too when we call cancel operation.当 <font color=\"#ff3333\">call cancel operation</font>\r\n        时会发生这个错误，至此问题算是清楚了。</p>\r\n    <p>总结：我的代码引起这个错的原因不值一提，是在上传文件时同时传有其他参数，那个参数不符合服务器要求，所以服务器不接收request（文件、参数1、参数2…），那么app这边就会 <font color=\"#ff3333\">\r\n            call cancel operation</font> 引起了app闪退，算是okhttp的一个bug，作者最后也说了：I was hoping if we could\r\n        either catch that exception properly, or find a way to neglect that issue\r\n        ?所以这个bug不会被catch到，我们更拿不到这个错误，也就无法处理，app就直接闪退了。</p>\r\n\r\n\r\n"
  },
  {
    "title": "2015-06-29ViewPager顶部标题控件PagerSlidingTabStrip",
    "ctime": "2019-12-16 14:15:11",
    "type": "1",
    "label": "1",
    "content": "\r\n        <p>&nbsp; &nbsp; &nbsp; 最近搞一个项目，要求做一个和网易新闻顶部菜单的滑动效果，如图：</p>\r\n        <p>&nbsp; &nbsp; &nbsp; <img src=\"https://raw.githubusercontent.com/songmeng/Sunburst/master/Images/android201905061.jpg\"\r\n                alt=\"\"></p>\r\n        <p>顶部标题中下面有个红色的矩形小条，左右滑动时会跟随手势动态滑动，效果很绚丽，唉，特效啊！</p>\r\n        <p>&nbsp; &nbsp; &nbsp; 自己搞了一上午无果，还是是github上找大神吧，最后发现了PagerSlidingTabStrip这个库，如下图：</p>\r\n        <p>&nbsp; &nbsp; &nbsp; <img\r\n                src=\"https://raw.githubusercontent.com/songmeng/Sunburst/master/Images/android201905062.gif\" alt=\"\" border=\"0\">\r\n        </p>\r\n        <p>顶部就是用的PagerSlidingTabStrip下面是用ViewPager实现的，红色矩形条可以跟着屏幕的滑动而滑动，效果同样非常炫，最重要的是使用非常方便，引入library方式或者自己整理出来都可以，<span\r\n                style=\"line-height: 1.5;\">很方便很实用，Github地址为</span>：<a\r\n                href=\"https://github.com/astuetz/PagerSlidingTabStrip\"\r\n                target=\"_blank\">https://github.com/astuetz/PagerSlidingTabStrip</a>&nbsp;万能的Github啊。具体怎么引入工程中使用就不多介绍了，大家都搞的定的，下面简单介绍下这个类库常用的方法和属性。\r\n        </p>\r\n        <p>&nbsp; &nbsp; PagerSlidingTabStrip常用属性如下，所有的属性都可以在xml中或者Activity中设置，可以通过get和set方法来设置属性：</p>\r\n        <ul class=\"task-list\">\r\n            <li><code>pstsIndicatorColor</code>&nbsp;Color of the sliding indicator &nbsp;滑动条的颜色</li>\r\n            <li><code>pstsUnderlineColor</code>&nbsp;Color of the full-width line on the bottom of the view\r\n                &nbsp;滑动条所在的那个全宽线的颜色</li>\r\n            <li><code>pstsDividerColor</code>&nbsp;Color of the dividers between tabs &nbsp; 每个标签的分割线的颜色</li>\r\n            <li><code>pstsIndicatorHeight</code>Height of the sliding indicator &nbsp; &nbsp; &nbsp; 滑动条的高度</li>\r\n            <li><code>pstsUnderlineHeight</code>&nbsp;Height of the full-width line on the bottom of the view &nbsp;\r\n                &nbsp;滑动条所在的那个全宽线的高度</li>\r\n            <li><code>pstsDividerPadding</code>&nbsp;Top and bottom padding of the dividers &nbsp; 分割线底部和顶部的填充宽度</li>\r\n            <li><code>pstsTabPaddingLeftRight</code>&nbsp;Left and right padding of each tab &nbsp; 每个标签左右填充宽度</li>\r\n            <li><code>pstsScrollOffset</code>&nbsp;Scroll offset of the selected tab</li>\r\n            <li><code>pstsTabBackground</code>&nbsp;Background drawable of each tab, should be a StateListDrawable\r\n                &nbsp;每个标签的背景，应该是一个StateListDrawable &nbsp;</li>\r\n            <li><code>pstsShouldExpand</code>&nbsp;If set to true, each tab is given the same weight, default false\r\n                &nbsp; 如果设置为true，每个标签是相同的控件，均匀平分整个屏幕，默认是false</li>\r\n            <li><code>pstsTextAllCaps</code>&nbsp;If true, all tab titles will be upper case, default true &nbsp;\r\n                如果为true，所有标签都是大写字母，默认为true</li>\r\n        </ul>\r\n        <p>&nbsp; &nbsp; &nbsp;简单介绍下用法，下载后在sample/文件夹下可运行的示例工程，可以参考着写</p>\r\n        <p><span style=\"line-height: 1.5;\">&nbsp; &nbsp;\r\n                &nbsp;第一步、引入library作为本地包工程，在你的layout的xml布局文件中加入PagerSlidingTabStrip控件</span></p>\r\n        <pre name=\"code\" class=\"java\">&lt;com.demo.PagerSlidingTabStrip\r\n                android:id=\"@+id/tabs\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"50dp\" /&gt;</pre>\r\n        <p>&nbsp; &nbsp; 第二步、在Activity的onCreate方法中绑定PagerSlidingTabStrip控件到ViewPager上</p>\r\n        <pre name=\"code\"\r\n            class=\"java\">//为ViewPager设置适配器<br>ViewPager.setAdapter(new MyAdapter(getSupportFragmentManager())); <br><br>//ViewPager绑定PagerSlidingTabStrip <br>PagerSlidingTabStrip tabs = (PagerSlidingTabStrip) findViewById(R.id.tab_one); <br>tabs.setViewPager(pager);<br>注意：这里的ViewPager的适配器必须是继承的FragmentPagerAdapter，并重写getPageIconResId(int position)或者getPageTitle(int position)方法 </pre>\r\n        <p>&nbsp; &nbsp; &nbsp;第三步、设置onPageChangeListener监听方法</p>\r\n        <pre name=\"code\" class=\"java\"> tabs.setOnPageChangeListener(onPageChangeListener);</pre>\r\n"
  },
  {
    "title": "Ubantu18.04环境下下载android-8.1.0_r48源码",
    "ctime": "2019-12-16 14:15:11",
    "type": "1",
    "label": "1",
    "content": "\r\n    \r\n<h4>Ubantu18.04环境下下载android-8.1.0_r48源码</h4>\r\n<p>作为一名程序员怎么可以不 reading the source code ，工欲善其事必先利其器，想要阅读先下载下来再说，下面就介绍下如何在Ubantu18.04环境下下载android-8.1.0_r48源码。</p>\r\n<h4>一、 git的安装和配置</h4>\r\n<p>Ubantu18.04下进入终端输入以下命令</p>\r\n<p>安装git命令</p>        \r\n<code>sudo apt-get install git</code>\r\n<br>\r\n<img width=\"400px\" src=\"https://i.postimg.cc/wBK4m5fp/20181028112724.png\">\r\n<p>配置git的用户名user.name</p>\r\n<code>git config --global user.name \"first name\"</code>\r\n<p>配置git的邮箱地址user.email</p>\r\n<code>git config --global user.email \"main@mail.com\"</code>\r\n<h4>二、 repo的安装和配置</h4>\r\n<p>国内的话强烈建议使用镜像https://aosp.tuna.tsinghua.edu.cn/来安装，repo安装命令：</p>\r\n<code>git clone https://aosp.tuna.tsinghua.edu.cn/git-repo/</code>\r\n<code>chmod a+x git-repo/repo</code>\r\n<p>安装完毕需要将repo添加到PATH环境变量，repo配置命令：</p>\r\n<code>export PATH=~/git-repo:$PATH</code>\r\n<h4>三、 特别设置，由于有墙防止出现unable to access'':Failed to connect to...问题 </h4>\r\n<h5>1. .bashrc文件设置</h5>\r\n<p>在Ubantu<主文件夹>下设置显示隐藏文件找到并打开 .bashrc 文件，添加如下内容</p>\r\n<code>export REPO_URL=’https://mirrors.tuna.tsinghua.edu.cn/git/git-repo/’</code>\r\n<p>然后执行如下命令</p>\r\n<code>echo \" export REPO_URL='https://mirrors.tuna.tsinghua.edu.cn/git/git-repo/' \">> ~/.bashrc</code>\r\n<h5>2. repo文件设置</h5>\r\n<p>在 主文件夹->bin->repo 中找到并打开repo文件，搜索REPO_URL将地址修改为镜像地址</p>\r\n<code>REPO_URL = 'https://gerrit-google.tuna.tsinghua.edu.cn/git-repo'</code>\r\n<h4>四、查看可下载的android源码分支</h4>\r\n<p>开始前最好在主文件下新建用于保存android源码的文件夹，比如我的是<主文件夹>/Android/source，在终端中cd进入到此文件夹下执行命令</p>\r\n<code>repo init -u https://aosp.tuna.tsinghua.edu.cn/platform/manifest</code>\r\n<p>稍等片刻，打开文件进入该目录下看到创建了.repo文件夹，进入看到还创建了manifests、manifests.git等文件，这时候在终端下进入manifests.git文件夹下，执行命令</p>\r\n<code>cd .repo/manifests.git/</code>\r\n<code>git branch -a</code>\r\n<p>稍等片刻，终端可以查看可拉取的源码分支</p>\r\n<h4>五、下载android源码到本地</h4>\r\n<p>这里我们选择android8.1.0的最高版本android-8.1.0_r48，终端下执行命令</p>\r\n<code>repo init -u https://aosp.tuna.tsinghua.edu.cn/platform/manifest -b android-8.1.0_r48</code>\r\n<code>repo sync</code>\r\n<p>下面就是考验网速的时刻了，可能需要花费小半天时间，可以去</p>\r\n<code>have a coffee and take a rest.</code>\r\n\r\n\r\n\r\n"
  },
  {
    "title": "JKS 密钥库使用专用格式,建议使用 keytool -importkeystore -srckeystore",
    "ctime": "2020-1-4 09:53:38",
    "type": "1",
    "label": "1",
    "content": "\r\n<p>问题描述：</p>\r\n<p>新应用打包，需要正式的keystore签名，使用AndroidStudio自带工具生成秘钥时报错</p>\r\n<h4>Key was created with errors:\r\n    Warning: JKS 密钥库使用专用格式。建议使用 \"keytool -importkeystore -srckeystore ....\\test.jks -destkeystore ....\\test.jks -deststoretype pkcs12\" 迁移到行业标准格式 PKCS12。</h4>\r\n<img src=\"https://i.postimg.cc/mgPV6dqT/android20200102102007.png\" alt=\"Warning\">\r\n<p>尝试解决，按照提示命令行或studio自带的终端Terminal键入：keytool -importkeystore -srckeystore ....</p>\r\n<p>又报错：‘keytool’不是内部或外部命令，也不是可运行的程序或批处理文件</p>\r\n<p>解决方法：cd 进入本机的jdk所在bin文件下，然后再次尝试执行命令：keytool -importkeystore -srckeystore ....</p>\r\n<p>成功的话会提示输入秘钥库口令,输入口令就会提示：已将..\\xxx.jks迁移到...</p>\r\n<img src=\"https://i.postimg.cc/NfJpDhdN/android20200102105145.png\" alt=\"success\">\r\n<p>出现上图就表示成功了</p>\r\n\r\n"
  },
  {
    "title": "2014-07-24WebView使用",
    "ctime": "2019-12-16 14:15:11",
    "type": "1",
    "label": "1",
    "content": "\r\n    <h2>\r\n        WebView使用\r\n    </h2>\r\n    <div class=\"postbody\">\r\n        <div id=\"cnblogs_post_body\" class=\"blogpost-body\">\r\n            <p>　<code><strong><a href=\"http://developer.android.com/reference/android/webkit/WebView.html\">WebView</a></strong></code>是View的一个子类，可以让你在activity中显示网页。\r\n            </p>\r\n            <p>　　可以在布局文件中写入WebView：比如下面这个写了一个填满整个屏幕的WebView：　</p>\r\n            <div>\r\n                <div class=\"cnblogs_code\">\r\n                    <pre>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\r\n        &lt;WebView  xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n            android:id=\"@+id/webview\"\r\n            android:layout_width=\"fill_parent\"\r\n            android:layout_height=\"fill_parent\"\r\n        /&gt;</pre>\r\n                </div>\r\n            </div>\r\n            <p>　　加载一个网页，使用<code><strong><a href=\"http://developer.android.com/reference/android/webkit/WebView.html#loadUrl(java.lang.String)\">loadUrl()</a></strong></code>：\r\n            </p>\r\n            <div>\r\n                <div class=\"cnblogs_code\">\r\n                    <pre>WebView myWebView = (WebView) findViewById(R.id.webview);\r\n        myWebView.loadUrl(<a href=\"http://www.example.com/\">http://www.example.com</a>);</pre>\r\n                </div>\r\n            </div>\r\n            <p>　　<strong>注意要在manifest中加上访问网络的权限：</strong></p>\r\n            <div>\r\n                <div class=\"cnblogs_code\">\r\n                    <pre>&lt;manifest ... &gt; \r\n            &lt;uses-permission android:name=\"android.permission.INTERNET\" /&gt; \r\n            ... \r\n        &lt;/manifest&gt;</pre>\r\n                </div>\r\n            </div>\r\n            <h2>设置WebView要显示的网页</h2>\r\n            <p>　　设置WevView要显示的网页方法有很多：</p>\r\n            <p>　　<strong>互联网页面直接用：</strong>　</p>\r\n            <div class=\"cnblogs_code\">\r\n                <pre>myWebView.loadUrl(“http://www.google.com“);</pre>\r\n            </div>\r\n            <p>&nbsp;</p>\r\n            <p>　　<strong>本地文件用：</strong></p>\r\n            <div class=\"cnblogs_code\">\r\n                <pre>myWebView.loadUrl(“file:///android_asset/XX.html“);  </pre>\r\n            </div>\r\n            <p>　　本地文件存放在：assets文件中。</p>\r\n            <p>　　<strong>还可以直接载入html的字符串</strong>，如：</p>\r\n            <div class=\"cnblogs_code\">\r\n                <pre>String htmlString = \"&lt;h1&gt;Title&lt;/h1&gt;&lt;p&gt;This is HTML text&lt;br /&gt;&lt;i&gt;Formatted in italics&lt;/i&gt;&lt;br /&gt;Anothor Line&lt;/p&gt;\";\r\n        // 载入这个html页面\r\n        myWebView.loadData(htmlString, \"text/html\", \"utf-8\");</pre>\r\n            </div>\r\n            <p>&nbsp;</p>\r\n            <p>&nbsp;</p>\r\n            <h2>在WebView中使用JavaScript</h2>\r\n            <p>　　如果你想要载入的页面中用了JavaScript，你<strong>必须</strong>为你的WebView使能JavaScript。</p>\r\n            <p>　　一旦使能之后，你也可以自己创建接口在你的应用和JavaScript代码间进行交互。</p>\r\n            <p><strong>使能JavaScript</strong></p>\r\n            <p>　　可以通过<code><strong><a href=\"http://developer.android.com/reference/android/webkit/WebView.html#getSettings()\">getSettings()</a></strong></code>获得<a\r\n                    href=\"http://developer.android.com/reference/android/webkit/WebSettings.html\">WebSettings</a>，然后用<code><strong><a href=\"http://developer.android.com/reference/android/webkit/WebSettings.html#setJavaScriptEnabled(boolean)\">setJavaScriptEnabled()</a></strong></code>使能JavaScript：\r\n            </p>\r\n            <div>\r\n                <div class=\"cnblogs_code\">\r\n                    <pre>WebView myWebView = (WebView) findViewById(R.id.webview);\r\n        WebSettings webSettings = myWebView.getSettings();\r\n        webSettings.setJavaScriptEnabled(true);</pre>\r\n                </div>\r\n                <p align=\"left\">&nbsp;</p>\r\n            </div>\r\n            <p>　　<a\r\n                    href=\"http://developer.android.com/reference/android/webkit/WebSettings.html\">WebSettings</a>中提供了很多有用的设置。\r\n            </p>\r\n            <h2>处理页面浏览</h2>\r\n            <p>　　当用户点击了你的WebView中的一个链接，默认的行为是Android启动一个处理URL的应用，通常，默认的浏览器打开并下载目标URL。</p>\r\n            <p>　　但是，你可以在你的WebView中覆盖这一行为，使得连接仍在你的WebView中打开。</p>\r\n            <p>　　之后，根据在WebView中维护的网页浏览历史，你可以允许用户向前或向后浏览他们的网页。</p>\r\n            <p><strong>在WebView中打开所有链接</strong></p>\r\n            <p>　　要打开用户点击的链接，只需要用<a\r\n                    href=\"http://developer.android.com/reference/android/webkit/WebView.html#setWebViewClient(android.webkit.WebViewClient)\">setWebViewClient()</a>方法向你的WebView提供一个<code><strong><a href=\"http://developer.android.com/reference/android/webkit/WebViewClient.html\">WebViewClient</a></strong></code>&nbsp;比如：\r\n            </p>\r\n            <div>\r\n                <div class=\"cnblogs_code\">\r\n                    <pre>WebView myWebView = (WebView) findViewById(R.id.webview);\r\n        myWebView.setWebViewClient(new WebViewClient());</pre>\r\n                </div>\r\n            </div>\r\n            <p>　　此时就OK了， 就可以在你的WebView中打开链接了。</p>\r\n            <p><strong>关于打开链接位置的更多控制</strong></p>\r\n            <p>　　如果你对在哪里打开链接需要更多的控制，你可以创建自己的类，继承&nbsp;<code><strong><a href=\"http://developer.android.com/reference/android/webkit/WebViewClient.html\">WebViewClient</a></strong></code>，然后覆写<code><strong><a href=\"http://developer.android.com/reference/android/webkit/WebViewClient.html#shouldOverrideUrlLoading(android.webkit.WebView, java.lang.String)\">shouldOverrideUrlLoading()</a></strong></code>&nbsp;方法。\r\n            </p>\r\n            <p>　　比如下面这个：</p>\r\n            <div>\r\n                <div class=\"cnblogs_code\">\r\n                    <pre>    private class MyWebViewClient extends WebViewClient\r\n            {\r\n                @Override\r\n                public boolean shouldOverrideUrlLoading(WebView view, String url)\r\n                {\r\n        <br>　　　　　　　if(<span class=\"typ\">Uri<span class=\"pun\">.<span class=\"pln\">parse<span class=\"pun\">(<span class=\"pln\">url<span class=\"pun\">).<span class=\"pln\">getHost<span class=\"pun\">().<span class=\"pln\">equals<span class=\"pun\">(<span class=\"str\"><a href=\"http://www.example.com/\">www.example.com</a><span class=\"pun\">))<br>            {\r\n                        // This is my web site, so do not override; let my WebView load\r\n                        // the page\r\n                        return false;\r\n                    }\r\n                    // Otherwise, the link is not for a page on my site, so launch\r\n                    // another Activity that handles URLs\r\n                    Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(url));\r\n                    startActivity(intent);\r\n                    return true;\r\n                }\r\n            }</span></span></span></span></span></span></span></span></span></span></span></span></pre>\r\n                </div>\r\n                <p align=\"left\">&nbsp;</p>\r\n            </div>\r\n            <p>　　将特定的链接用自己的WebView打开，其他链接用浏览器（intent启动了默认的处理URL的Activity）。</p>\r\n            <p>　　定义完之后把这个类的对象传入<a\r\n                    href=\"http://developer.android.com/reference/android/webkit/WebView.html#setWebViewClient(android.webkit.WebViewClient)\">setWebViewClient()</a>方法即可。　\r\n            </p>\r\n            <div class=\"cnblogs_code\">\r\n                <pre>WebView myWebView = (WebView) findViewById(R.id.webview);\r\n        myWebView.setWebViewClient(new MyWebViewClient());</pre>\r\n            </div>\r\n            <p>&nbsp;</p>\r\n            <p><strong>　　实践验证：</strong>在直接设置<a\r\n                    href=\"http://developer.android.com/reference/android/webkit/WebView.html#setWebViewClient(android.webkit.WebViewClient)\">setWebViewClient</a>(new\r\n                WebViewClient());时验证正确，即所有链接都是在WebView中打开。</p>\r\n            <p>　　在设置为自定义的WebViewClient子类对象时，发现链接仍然都是从默认浏览器中打开。</p>\r\n            <p>&nbsp;</p>\r\n            <p><strong>浏览网页历史回退</strong></p>\r\n            <p>　　当你的WebView覆写了URL载入的行为，它会自动地对访问过的网页积累一个历史，你可以利用&nbsp;<code><strong><a href=\"http://developer.android.com/reference/android/webkit/WebView.html#goBack()\">goBack()</a></strong></code>&nbsp;和&nbsp;<code><strong><a href=\"http://developer.android.com/reference/android/webkit/WebView.html#goForward()\">goForward()</a></strong></code>方法在这个历史中前进或后退。\r\n            </p>\r\n            <p>　　比如说使用后退键进行网页后退：</p>\r\n            <div>\r\n                <div class=\"cnblogs_code\">\r\n                    <pre>    /**\r\n             * 按键响应，在WebView中查看网页时，按返回键的时候按浏览历史退回,如果不做此项处理则整个WebView返回退出\r\n             */\r\n            @Override\r\n            public boolean onKeyDown(int keyCode, KeyEvent event)\r\n            {\r\n                // Check if the key event was the Back button and if there's history\r\n                if ((keyCode == KeyEvent.KEYCODE_BACK) &amp;&amp; myWebView.canGoBack())\r\n                {\r\n                    // 返回键退回\r\n                    myWebView.goBack();\r\n                    return true;\r\n                }\r\n                // If it wasn't the Back key or there's no web page history, bubble up\r\n                // to the default\r\n                // system behavior (probably exit the activity)\r\n                return super.onKeyDown(keyCode, event);\r\n            }</pre>\r\n                </div>\r\n                <p align=\"left\">&nbsp;</p>\r\n            </div>\r\n            <p>　　<a\r\n                    href=\"http://developer.android.com/reference/android/webkit/WebView.html#canGoBack()\"><strong>canGoBack()</strong></a>&nbsp;方法在网页可以后退时返回true。\r\n            </p>\r\n            <p>　　类似的，<a\r\n                    href=\"http://developer.android.com/reference/android/webkit/WebView.html#canGoForward()\">canGoForward()</a>方法可以检查是否有可以前进的历史记录。\r\n            </p>\r\n            <p>　　如果你不执行这种检查，一旦&nbsp;<a\r\n                    href=\"http://developer.android.com/reference/android/webkit/WebView.html#goBack()\"><strong>goBack()</strong></a>&nbsp;和&nbsp;<code><strong><a href=\"http://developer.android.com/reference/android/webkit/WebView.html#goForward()\">goForward()</a></strong></code>方法到达历史记录顶端，它们将什么也不做。\r\n            </p>\r\n            <p>　　如果不加这种设置，在用户按下Back键时，如果是WebView显示网页，则会将WebView作为整体返回。</p>\r\n            <p>&nbsp;</p>\r\n            <p>一份Demo示例：</p>\r\n            <div class=\"cnblogs_Highlighter sh-gutter\">\r\n                <div>\r\n                    <div id=\"highlighter_529650\" class=\"syntaxhighlighter  java\">\r\n                        <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td class=\"gutter\">\r\n                                        <div class=\"line number1 index0 alt2\">1</div>\r\n                                        <div class=\"line number2 index1 alt1\">2</div>\r\n                                        <div class=\"line number3 index2 alt2\">3</div>\r\n                                        <div class=\"line number4 index3 alt1\">4</div>\r\n                                        <div class=\"line number5 index4 alt2\">5</div>\r\n                                        <div class=\"line number6 index5 alt1\">6</div>\r\n                                        <div class=\"line number7 index6 alt2\">7</div>\r\n                                        <div class=\"line number8 index7 alt1\">8</div>\r\n                                        <div class=\"line number9 index8 alt2\">9</div>\r\n                                        <div class=\"line number10 index9 alt1\">10</div>\r\n                                        <div class=\"line number11 index10 alt2\">11</div>\r\n                                        <div class=\"line number12 index11 alt1\">12</div>\r\n                                        <div class=\"line number13 index12 alt2\">13</div>\r\n                                        <div class=\"line number14 index13 alt1\">14</div>\r\n                                        <div class=\"line number15 index14 alt2\">15</div>\r\n                                        <div class=\"line number16 index15 alt1\">16</div>\r\n                                        <div class=\"line number17 index16 alt2\">17</div>\r\n                                        <div class=\"line number18 index17 alt1\">18</div>\r\n                                        <div class=\"line number19 index18 alt2\">19</div>\r\n                                        <div class=\"line number20 index19 alt1\">20</div>\r\n                                        <div class=\"line number21 index20 alt2\">21</div>\r\n                                        <div class=\"line number22 index21 alt1\">22</div>\r\n                                        <div class=\"line number23 index22 alt2\">23</div>\r\n                                    </td>\r\n                                    <td class=\"code\">\r\n                                        <div class=\"container\">\r\n                                            <div class=\"line number1 index0 alt2\"><code\r\n                                                    class=\"java keyword\">private</code> <code\r\n                                                    class=\"java keyword\">void</code> <code\r\n                                                    class=\"java plain\">setWebView() {</code></div>\r\n                                            <div class=\"line number2 index1 alt1\"><code\r\n                                                    class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code\r\n                                                    class=\"java plain\">mWebView.setWebViewClient(</code><code\r\n                                                    class=\"java keyword\">new</code> <code\r\n                                                    class=\"java plain\">WebViewClient() {</code></div>\r\n                                            <div class=\"line number3 index2 alt2\"><code\r\n                                                    class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code\r\n                                                    class=\"java color1\">@Override</code></div>\r\n                                            <div class=\"line number4 index3 alt1\"><code\r\n                                                    class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code\r\n                                                    class=\"java keyword\">public</code> <code\r\n                                                    class=\"java keyword\">void</code> <code\r\n                                                    class=\"java plain\">onPageFinished(WebView view, String url) {</code>\r\n                                            </div>\r\n                                            <div class=\"line number5 index4 alt2\"><code\r\n                                                    class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code\r\n                                                    class=\"java comments\">// TODO Auto-generated method stub</code>\r\n                                            </div>\r\n                                            <div class=\"line number6 index5 alt1\"><code\r\n                                                    class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code\r\n                                                    class=\"java plain\">mWebView.setVisibility(View.VISIBLE);</code>\r\n                                            </div>\r\n                                            <div class=\"line number7 index6 alt2\"><code\r\n                                                    class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code\r\n                                                    class=\"java plain\">mWebView.getSettings().setBuiltInZoomControls(</code><code\r\n                                                    class=\"java keyword\">true</code><code class=\"java plain\">);</code>\r\n                                            </div>\r\n                                            <div class=\"line number8 index7 alt1\"><code\r\n                                                    class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code\r\n                                                    class=\"java plain\">mWebView.getSettings().setJavaScriptEnabled(</code><code\r\n                                                    class=\"java keyword\">true</code><code class=\"java plain\">); </code>\r\n                                            </div>\r\n                                            <div class=\"line number9 index8 alt2\"><code\r\n                                                    class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code\r\n                                                    class=\"java plain\">mWebView.getSettings().setDefaultZoom(ZoomDensity.FAR);</code>\r\n                                            </div>\r\n                                            <div class=\"line number10 index9 alt1\"><code\r\n                                                    class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code\r\n                                                    class=\"java plain\">mWebView.getSettings().setSupportZoom(</code><code\r\n                                                    class=\"java keyword\">true</code><code class=\"java plain\">);</code>\r\n                                            </div>\r\n                                            <div class=\"line number11 index10 alt2\"><code\r\n                                                    class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code\r\n                                                    class=\"java plain\">mWebView.setInitialScale(</code><code\r\n                                                    class=\"java value\">100</code><code class=\"java plain\">);</code>\r\n                                            </div>\r\n                                            <div class=\"line number12 index11 alt1\"><code\r\n                                                    class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code\r\n                                                    class=\"java plain\">}</code></div>\r\n                                            <div class=\"line number13 index12 alt2\"><code\r\n                                                    class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code\r\n                                                    class=\"java plain\">});&nbsp;&nbsp;&nbsp;&nbsp; </code></div>\r\n                                            <div class=\"line number14 index13 alt1\"><code\r\n                                                    class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code\r\n                                                    class=\"java plain\">mWebView.loadUrl(</code><code\r\n                                                    class=\"java string\">\"http://www.xxx.com\"</code><code\r\n                                                    class=\"java plain\">);</code></div>\r\n                                            <div class=\"line number15 index14 alt2\"><code class=\"java plain\">}</code>\r\n                                            </div>\r\n                                            <div class=\"line number16 index15 alt1\"><code\r\n                                                    class=\"java spaces\">&nbsp;</code><code\r\n                                                    class=\"java color1\">@Override</code></div>\r\n                                            <div class=\"line number17 index16 alt2\"><code\r\n                                                    class=\"java spaces\">&nbsp;</code><code\r\n                                                    class=\"java keyword\">public</code> <code\r\n                                                    class=\"java keyword\">boolean</code> <code\r\n                                                    class=\"java plain\">onKeyDown(</code><code\r\n                                                    class=\"java keyword\">int</code> <code\r\n                                                    class=\"java plain\">keyCode, KeyEvent event) {</code></div>\r\n                                            <div class=\"line number18 index17 alt1\"><code\r\n                                                    class=\"java spaces\">&nbsp;&nbsp;</code><code\r\n                                                    class=\"java keyword\">if</code> <code\r\n                                                    class=\"java plain\">(keyCode == KeyEvent.KEYCODE_BACK &amp;&amp; mWebView.canGoBack()) {</code>\r\n                                            </div>\r\n                                            <div class=\"line number19 index18 alt2\"><code\r\n                                                    class=\"java spaces\">&nbsp;&nbsp;&nbsp;</code><code\r\n                                                    class=\"java plain\">mWebView.goBack();</code><code\r\n                                                    class=\"java comments\">// 返回前一个页面</code></div>\r\n                                            <div class=\"line number20 index19 alt1\"><code\r\n                                                    class=\"java spaces\">&nbsp;&nbsp;&nbsp;</code><code\r\n                                                    class=\"java keyword\">return</code> <code\r\n                                                    class=\"java keyword\">true</code><code class=\"java plain\">;</code>\r\n                                            </div>\r\n                                            <div class=\"line number21 index20 alt2\"><code\r\n                                                    class=\"java spaces\">&nbsp;&nbsp;</code><code\r\n                                                    class=\"java plain\">}</code></div>\r\n                                            <div class=\"line number22 index21 alt1\"><code\r\n                                                    class=\"java spaces\">&nbsp;&nbsp;</code><code\r\n                                                    class=\"java keyword\">return</code> <code\r\n                                                    class=\"java keyword\">super</code><code\r\n                                                    class=\"java plain\">.onKeyDown(keyCode, event);</code></div>\r\n                                            <div class=\"line number23 index22 alt2\"><code\r\n                                                    class=\"java spaces\">&nbsp;</code><code class=\"java plain\">}</code>\r\n                                            </div>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n"
  },
  {
    "title": "android项目无法引用library中的jar包问题",
    "ctime": "2019-12-16 14:15:11",
    "type": "1",
    "label": "1",
    "content": "\r\n    <h5>问题描述：android项目如果引用有其他的项目moduleLib,moduleLib中如果引用有第三发C.jar，主项目在引用问题描述：android项目如果引用有其他的项目moduleLib可能时会出现无法引用C.jar的问题。\r\n    </h5>\r\n    <p>解决方法不复杂，主要是因为不熟悉implementation和api在用法上的区别：</p>\r\n    <p>implementation：依赖的jar或aar或library仅限模块内部使用</p>\r\n    <p>api：相关依赖可以在本module被其他module依赖时直接使用</p>\r\n    <p>说起这个问题，还是因为gradle升级引起的</p>\r\n    <code>\r\n            Warning:Configuration 'compile' is obsolete and has been replaced with 'implementation'.\r\n            It will be removed at the end of 2018</code>\r\n    <p>感觉这种升级有点简单暴力，太没有大厂的风格了</p>\r\n    <code>WARNING: DSL element 'DexOptions.incremental' is obsolete and will be removed at the end of 2018</code>\r\n    <code>WARNING: API 'variant.getJavaCompile()' is obsolete and has been replaced with 'variant.getJavaCompileProvider()'.\r\n            It will be removed at the end of 2019.。</code>\r\n"
  },
  {
    "title": "org apache xerces impl io MalformedByteSequenceException Invalid byte 3 of 3-byte UTF-8",
    "ctime": "2019-12-16 14:15:11",
    "type": "1",
    "label": "1",
    "content": "\r\n    <h5>问题描述：使用Databinding时遇到的一个问题，org.apache.xerces.impl.io:MalformedByteSequenceException Invalid byte 3 of 3-byte UTF-8...\r\n        一再检查确定代码写的没有问题，而且单从错误信息根本无法定位到出错的代码，所以比较恶心，应该记录一下。</h5>\r\n    <p>大概搜了下，原因主要是因为项目成员使用不同的操作系统协作开发时容易出这个问题，windows、mac、ubuntu都可能出现这个问题，通过搜索和与同事的交流总结\r\n        大致有三种方法可以解决这类问题：</p>\r\n    <p>1.这种方法未做测试，同事有次外派遇到类似问题是通过此方法解决的，直接上图,LF和CR两种方式切换试下</p>\r\n    <img style=\"width:150px; height:auto;\" alt=\"\"\r\n        src=\"https://raw.githubusercontent.com/songmeng/Sunburst/master/Images/android20190703161428.png\">\r\n    <p>2.比较主流的解决方式，因为引起这个问题的主要原因一般是xml中text中有中文，将string通过valus统一管理统一使用@string/的写法可以规避此问题，但考虑到\r\n        真实项目的具体实现，除非代码有严格控制，否则遇到问题再统一整理string文件，也是一件麻烦事。</p>\r\n    <p>3.能定位到具体的报错代码，先删除中文，clearn项目工程，再输入，如果不行采用特殊方式，比如将文案写在viewModel中，采用viewModel.user.name的写法，虽\r\n        然为了几个字的文案，单建一变量有些欠妥，但如果真碰到比较轴的开发工具时也是没办法的办法。</p>\r\n\r\n    "
  },
  {
    "title": "记一次诡异的安卓光标变黑问题",
    "ctime": "2019-12-16 14:15:11",
    "type": "1",
    "label": "1",
    "content": "\r\n\r\n    <h5>问题描述：如图自上而下有四个输入框，先点击第一个，再点击第二个，然后点击第三个，会造成前两个输入框EditText输入光标不消失，此时光标的真实位置在第三个。</h5>\r\n    <img style=\"width: 400px\" src=\"https://i.postimg.cc/Gp3PLFyK/android201909241.png\" alt=\"android\">\r\n    <p>分析可能原因：</p>\r\n    <p>1.除去截图部分页面较复杂，布局底层为自定义Scrollview实现，输入框弹出隐藏是否影响页面绘制</p>\r\n    <p>2.Edittext自身的bug，输入法弹框影响</p>\r\n    <p>3.只有部分手机会出现这种情况，三方ROM定制问题</p>\r\n\r\n    <h5>解决方法：不同机型对应不同解决方法可能一种方法就会解决</h5>\r\n    <p>1.EditText添加属性padding</p>\r\n    <div style=\"background:gainsboro;padding: 5px;\">\r\n        <pre>\r\n        &lt;EditText <br>\r\n            ... <br>\r\n            android:paddingLeft=\"2dp\"<br>\r\n            ...&gt;\r\n        </pre>\r\n    </div>\r\n    <p>2.EditText设置和父背景同样的背景色或透明色</p>\r\n    <div style=\"background:gainsboro;padding: 5px;\">\r\n            <pre>\r\n            &lt;EditText <br>\r\n                ... <br>\r\n                android:background=\"@null\"<br>\r\n                ...&gt;\r\n            </pre>\r\n    </div>\r\n    <p>3.设置光标的颜色值</p>\r\n    <div style=\"background:gainsboro;padding: 5px;\">\r\n            <pre>\r\n            &lt;EditText <br>\r\n                ... <br>\r\n                android:textCursorDrawable=\"@color/..\"<br>\r\n                ...&gt;\r\n            </pre>\r\n    </div>\r\n"
  },
  {
    "title": "2013-05-08浅谈异步效果ui界面实现方法",
    "ctime": "2019-12-16 14:15:11",
    "type": "1",
    "label": "1",
    "content": "\r\n        <h2>\r\n                浅谈异步效果ui界面实现方法\r\n            </h2>\r\n            <div id=\"cnblogs_post_body\" class=\"blogpost-body\">\r\n                <p>&nbsp; &nbsp; &nbsp; &nbsp; 文如题浅谈，真的是浅浅的谈下，之前异步的UI效果一直喜欢用<span class=\"typ\">ProgressDialog来实现，效果不错如图：</span></p>\r\n        <img src=\"https://images0.cnblogs.com/blog/490166/201305/08164737-10240fe6947c45adb2349b36fbf98d1a.png\" alt=\"\" width=\"274\" height=\"414\">\r\n        <p><span class=\"pln\">&nbsp; &nbsp;周围变为半透明，其实现方法为</span></p>\r\n        <pre style=\"background:snow\"><span style=\"color: #000000;\">  \r\n                    ProgressDialog progressDialog;\r\n                        @Override\r\n                        publicvoid onCreate(Bundle savedInstanceState){\r\n                            </span><span style=\"color: #0000ff;\">super</span><span style=\"color: #000000;\">.onCreate(savedInstanceState);\r\n                            setContentView(R.layout.main);\r\n                      \r\n                              progressDialog </span>=newProgressDialog(<span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">);\r\n                              progressDialog.setMessage(</span>\"\"<span style=\"color: #000000;\">);\r\n                              progressDialog.setTitle(</span>\"\"<span style=\"color: #000000;\">);\r\n                              progressDialog.show();\r\n                          \r\n                        }\r\n                        </span>\r\n        </pre>\r\n        <p>&nbsp; &nbsp; &nbsp; &nbsp;当事件完成后，调用dismiss()方法，这种方法感觉有两个不好的地方</p>\r\n                <p>&nbsp; &nbsp; &nbsp; &nbsp; 1.点击半透明区域，在4.0以上系统progressbar会消失，这个通过加一行代码到还是能解决</p>\r\n                <p>&nbsp; &nbsp; &nbsp; &nbsp; 2.点击返回键会消失，可悲的是其实异步请求还在继续。</p>\r\n                <p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;也许说的这两点有点牵强，毕竟都可以通过设置来避免，比如监听返回键等。</p>\r\n                <p>&nbsp; &nbsp; &nbsp; &nbsp;后来发现另一种方法，其实也特别好，无论是用户体验还是实现上，如下图：</p>\r\n                <p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                    &nbsp;<img\r\n                        src=\"https://images0.cnblogs.com/blog/490166/201305/08170040-a27dfa95d68e48128f3d1da0f762494e.png\"\r\n                        alt=\"\"></p>\r\n                <p>实现方法其实不言而喻，在布局中添加Progressbar，在请求数据时设置&nbsp;setVisible(VIew.Visible)\r\n                    &nbsp;属性为Visible，当请求完毕时设置为.setVisible(VIew.Gone)，这样既不影响用户使用，也不会因为操作不当而带来不好的体验。</p>\r\n                <p>&nbsp;</p>\r\n            </div>\r\n\r\n\r\n"
  },
  {
    "title": "2014-10-30DDMS files not found toolshprof-conv-exe",
    "ctime": "2019-12-16 14:15:11",
    "type": "1",
    "label": "1",
    "content": "\r\n    <p>最近在Eclipse下每次更新ADT和SDK后都报一些错误，比如</p>\r\n    <pre>DDMS files not found: D:\\android-sdk-windows-1.6_r1\\android-sdk-windows-1.6_r1\\platform-tools\\adb.exe<br>DDMS files not found: tools\\hprof-conv.exe<br>......<br></pre>\r\n    <p>&nbsp; &nbsp;&nbsp;另外顺便吐槽一下，android\r\n        SDK上4.0以后sdk的文件夹大小增加的太快了，尤其这次更新android5.0，SDK文件夹直接由20G增加到了30G，这是要闹哪样啊，虽然现在硬盘便宜了，也不待这样啊</p>\r\n    <img src=\"https://images0.cnblogs.com/blog/490166/201410/301037055038451.jpg\" alt=\"\">\r\n\r\n    <p>解决方法：在\r\n        android-sdk-windows\\android-sdk-windows-1.6_r1\\tools目录下的tools目录找找adb这个文件，然后把它复制到android-sdk-windows\\android-sdk-windows-1.6_r1\\platform-tools这里就号了<br>其它错误同理\r\n    </p>\r\n\r\n    <p>DDMS files not found: tools\\hprof-conv.exe </p>\r\n    <p><img src=\"https://images0.cnblogs.com/blog/490166/201410/301041255509672.jpg\" alt=\"\"></p>\r\n"
  },
  {
    "title": "2013-09-04zXing使用小结",
    "ctime": "2019-12-16 14:15:11",
    "type": "1",
    "label": "1",
    "content": "\r\n        <p>&nbsp; &nbsp; &nbsp;\r\n            在android上二维码、条形码扫描，google官方为我们提供了zXing，几乎android涉及到扫描的都是用这个开源项目实现的，也有在android上使用zBar的，和其他用过的交流得知zBar在扫描二维码时优于zXing，在条形码上zXing更胜一筹，ios一般使用zBar。\r\n        </p>\r\n        <p>&nbsp; &nbsp; &nbsp; 今天主要说下使用zXing时遇到的问题，关于如何使用网上相关文章很多就不再重复，直接主题：</p>\r\n        <p>&nbsp; &nbsp; &nbsp; &nbsp;1.zXing与TabHost一块使用时</p>\r\n        <p>&nbsp; &nbsp; &nbsp; &nbsp;2.横屏变竖屏问题</p>\r\n        <p>&nbsp; &nbsp; &nbsp; &nbsp;3.一种实现方法引起的思考</p>\r\n        <p>&nbsp; &nbsp; &nbsp; &nbsp;第一个问题，只能长长的叹一口气，想起那些日子为了这个问题......，谷歌官方解释如下：</p>\r\n        <p>&nbsp; &nbsp; &nbsp; &nbsp;\r\n            &nbsp;<span>The&nbsp;app&nbsp;doesn't&nbsp;use&nbsp;a&nbsp;TabHost.&nbsp;If&nbsp;you&nbsp;are&nbsp;writing&nbsp;your&nbsp;own&nbsp;app,&nbsp;indeed,&nbsp;you&nbsp;may&nbsp;need&nbsp;to&nbsp;write&nbsp;different&nbsp;code!&nbsp;</span>\r\n        </p>\r\n        <p><span class=\"keyword\">&nbsp; &nbsp; &nbsp; &nbsp;\r\n                &nbsp;this</span><span>&nbsp;part&nbsp;is&nbsp;not&nbsp;a&nbsp;library&nbsp;that&nbsp;is&nbsp;supposed&nbsp;to&nbsp;work&nbsp;in&nbsp;other&nbsp;contexts.&nbsp;</span>\r\n        </p>\r\n        <p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;关于这个我也就不多说什么了，多直白的话：要想在TabHost下使用，自己写。。。。。。</p>\r\n        <p>&nbsp; &nbsp; &nbsp; &nbsp;\r\n            &nbsp;第二个问题，百度一下会有很多教程，按照教程的确能实现横屏变竖屏，本以为事情就是这么顺利，直到那天某某总扫一张巨密集的名片二维码，奏是出不来，所以横屏变竖屏会有一个问题，扫描的灵敏度受损。后来记得是在stackoverflow看到一篇文章横屏变竖屏，看年代比较久远，对比后猜测国内各种横屏变竖屏的方法应该是仿照这个总结，仔细看作者是针对自己的HTC手机改的，对其他机型是否完全适合值得怀疑。下面是overflow上相关问题的几张截图\r\n        </p>\r\n        <p><img src=\"https://images0.cnblogs.com/blog/490166/201309/04163347-48bda459960c43959bb75086baae454d.jpg\"\r\n                alt=\"\" width=\"722\" height=\"200\"></p>\r\n        <p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n            &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n            &nbsp; &nbsp; &nbsp; &nbsp;横屏变竖屏</p>\r\n        <p><img src=\"https://images0.cnblogs.com/blog/490166/201309/04163358-c5a8a0bf36164c85894f6c67a8728e61.jpg\"\r\n                alt=\"\"></p>\r\n        <p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n            &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n            &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;灵明度</p>\r\n        <p><img src=\"https://images0.cnblogs.com/blog/490166/201309/04163410-143a9033be274f9ca1eb0d249b9af261.jpg\"\r\n                alt=\"\" width=\"841\" height=\"198\"></p>\r\n        <p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n            &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n            &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 横屏竖屏扫面框和焦点框对比</p>\r\n        <p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 感觉这个最起码要将源码研究透彻之后，才能保证在灵敏度不受损的情况下横屏变竖屏。</p>\r\n        <p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 第三个问题，只是感觉这种方式实现的很新颖，是在看一款叫我查查的软件时发现的，其实是一种假的竖屏，不过感觉体验非常好：</p>\r\n        <p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n            &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n            &nbsp; &nbsp;<img\r\n                src=\"https://images0.cnblogs.com/blog/490166/201309/04164437-b27a9769f7994d8c895d3d6a94cd5da1.png\"\r\n                alt=\"\" width=\"178\" height=\"273\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<img\r\n                src=\"https://images0.cnblogs.com/blog/490166/201309/04164532-35e031054ff846f28b557b8d7d77ebef.png\"\r\n                alt=\"\" width=\"185\" height=\"273\"></p>\r\n        <p>&nbsp; &nbsp; &nbsp; 左边的图是正常状态下，其实当你强行在屏幕上从右向左（对程序而言是自上而下）滑动时标题栏会出现，说明当前其实是横屏的，只是将界面设计成了竖屏的样子，感觉很不错。</p>\r\n        <p>&nbsp; &nbsp; &nbsp; 期望有更好的方法出现，美观，实用，不影响性能。</p>\r\n        <p>&nbsp; &nbsp; &nbsp; 下面是相关两篇文章的地址：</p>\r\n        <p>&nbsp; &nbsp; &nbsp; &nbsp;<a\r\n                href=\"http://stackoverflow.com/questions/17608302/zxing-lib-not-smoothly-detecting-qrcode-in-portrait-mode\">http://stackoverflow.com/questions/17608302/zxing-lib-not-smoothly-detecting-qrcode-in-portrait-mode</a>\r\n        </p>\r\n        <p>&nbsp; &nbsp; &nbsp; &nbsp;<a\r\n                href=\"http://stackoverflow.com/questions/16252791/zxing-camera-in-portrait-mode-on-android?rq=1\">http://stackoverflow.com/questions/16252791/zxing-camera-in-portrait-mode-on-android?rq=1</a>\r\n        </p>\r\n        <p>&nbsp;</p>\r\n        <p>&nbsp; &nbsp; &nbsp; &nbsp;最后小感慨下，昨天上午，唉，这是不是意味着一个王朝的覆灭......</p>\r\n        <p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<img\r\n                src=\"https://images0.cnblogs.com/blog/490166/201309/04165245-4ac2f286ed4d438b90ec524fb3e78c31.jpg\"\r\n                alt=\"\"></p>\r\n\r\n"
  },
  {
    "title": "Android学习回顾之Handler",
    "ctime": "2019-12-16 14:15:11",
    "type": "1",
    "label": "1",
    "content": "\r\n<h4>Android的单线程模型</h4>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在Android手机中,当一个应用程序第一次启动时，Android会同时启动一个对应的主线程（Main Thread），Main Thread主要负责处理与UI相关的事件，包括响应用户的各种操作：点击，滑动，按键，\r\n并把相关的事件分发到对应的组件进行处理。所以主线程可以理解为UI线程，通常又被叫做UI线程。</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;基于以上<strong>单线程模型</strong>的原则，在开发Android应用时，Android UI操作必须在UI线程中执行，不要阻塞UI线程，Android UI线程并不是线程安全的。</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;如果在非UI线程中直接操作UI线程，会抛出异常，<strong>这点与普通java程序不同。</strong></p>\r\n<div style=\"background:gainsboro;padding: 5px;\">\r\n    <pre>\r\n    android.view.ViewRoot$CalledFromWrongThreadException: Only the original thread that created a view hierarchy can touch its views，\r\n    </pre>\r\n</div>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;为了更方便的使子线程能够和主线程通信，Android引进了消息机制。</p>\r\n<h4>Android中消息机制</h4>\r\n<p>先上代码，说起Android的消息机制，不得不提的几个类：</p>\r\n<ul>\r\n    <li>Message:消息，其中包含了消息ID，处理对象和处理数据，由MessageQueue统一队列管理，最终由Handler处理；需要传递的消息，可以传递的数据。</li>\r\n    <li>Handler:（消息发送和处理）负责Message发送和处理；消息辅助类，主要功能向消息池发送各种消息事件（Handler.sendMessage）和处理相应的消息事件（Handler.handleMessage）</li>\r\n    <li>MessageQueue:消息队列，按照FIFO原则存放消息；消息队列，但是它的内部实现并不是用的队列，实际上是通过一个单链表的数据结构来维护消息列表，因为单链表在插入和删除上比较有优势。主要功能向消息池投递消息（\r\n        MessageQueue.enqueueMessage）和取走消息池的消息（MessageQueue.next）</li>\r\n    <li>Looper:（消息循环）消息泵，来处理MessageQueue中的Message；不断循环执行（Looper.loop）,从MessageQueue中读取消息，按分发机制将消息分发给目标处理者。</li>\r\n</ul>\r\n\r\n<h4>消息机制的运行流程：</h4>\r\n<ol>\r\n    <li>在子线程执行完耗时操作，当Handler发送消息时，将会调用 <code style=\"background: gainsboro\">MessageQueue.enqueueMessage</code>,向消息队列添加消息。</li>\r\n    <li>当通过Looper.loop开启循环后，会不断的线程池中读取消息，即调用<code style=\"background: gainsboro\">MessageQueue.next</code>,然后调用目标Handler（即发送该消息的Handler）的<code style=\"background: gainsboro\">dispatchMessage</code>\r\n    方法传递消息</li>\r\n    <li>然后返回到Handler所在线程，目标Handler收到消息，调用<code style=\"background: gainsboro\">handlerMessage</code>方法，接收消息，处理消息。</li>\r\n</ol>\r\n<p><strong>MessageQueue, Handler和Looper三者之间的关系：</strong>每个线程只能存在一个Looper,Looper是保存在ThreadLocal中的。主线程（UI线程）已经创建了一个Looper,所以在主线程中不需要再创建Looper，\r\n但在其他线程中需要创建Looper，每个线程中可以有多个Handler，即一个Looper可以处理来自多个Handler的消息。Looper中维护一个MessageQueue，来维护消息队列，消息队列中的Message可以来自不同的Handler。</p>\r\n<h4>消息机制的源码解析</h4>\r\n<ol>\r\n    <li><strong>Looper</strong>想要使用消息机制，首先要创建一个Looper。初始化Looper，无参情况，默认调用<code style=\"background: gainsboro\">prepare(true);</code>--->开启Looper</li>\r\n    <p><strong>当next()取出下一条消息时，队列中已经没有消息时，next()会无限循环，产生阻塞。等待MessageQueue中加入消息，然后重新唤醒。主线程中不需要自己创建Looper，这是由于在程序启动的时候，系统已经帮我们自动调用了Looper.prepare()\r\n    方法。查看ActivityThread中的main()方法，代码如下所示：</strong></p>\r\n    <li><strong>Handler:创建Handler</strong></li>\r\n    <li><strong>发送消息 post方法，send方法 sendMessageAtTime() enqueueMessage()</strong></li>\r\n    <li><strong>获取消息 next()</strong></li>\r\n    <li><strong>分发消息 dispatchMessage()</strong></li>\r\n</ol>\r\n\r\n<p>2019-10-25</p>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<p>疑问一，Android是单线程模式，那么所有自己程序中创建的handler，都属于子线程？</p>\r\n<p>疑问二，主线程已经创建了一个Looper，存不存在需要创建Looper的情况？和疑问一类似</p>\r\n"
  },
  {
    "title": "WebView微信H5支付问题",
    "ctime": "2020-3-31 15:08:47",
    "type": "1",
    "label": "1",
    "content": "\r\n\r\n\r\n<h5>问题描述：App内部有支付部分，需要webview打开h5链接，在h5内部支付，总是失败？</h5>\r\n<p>加载网页后可能出现ERR_UNKNOWN_URL_SCHEME</p>\r\n<p>分析可能原因：</p>\r\n<p>打印出网址发现是 <strong>weixin://wap/pay</strong> 开头的,这个肯定是微信的一种协议，搜资料发现解决方案</p>\r\n\r\n<div style=\"background:gainsboro;padding: 5px;\">\r\n        <pre>\r\n           @Override  \r\n        public boolean shouldOverrideUrlLoading(WebView view, String url) {  \r\n            // 如下方案可在非微信内部WebView的H5页面中调出微信支付\r\n            if (url.startsWith(\"weixin://wap/pay?\")) {\r\n                Intent intent = new Intent();\r\n                intent.setAction(Intent.ACTION_VIEW);\r\n                intent.setData(Uri.parse(url));\r\n                startActivity(intent);\r\n                return true;\r\n            }\r\n            return super.shouldOverrideUrlLoading(view, url);\r\n        }\r\n        </pre>\r\n</div>\r\n<p>之后测试发现可以调起支付，之后本着谨慎的原则，仔细检查代码，发现shouldOverrideUrlLoading针对不同android api有不同的写法，于是在shouldOverrideUrlLoading(WebView view, WebResourceRequest request)\r\n    这个下面也写了一下，没想到发生了预料之外的事</p>\r\n<div style=\"background:gainsboro;padding: 5px;\">\r\n        <pre>\r\n@RequiresApi(api = Build.VERSION_CODES.LOLLIPOP)\r\n@Override\r\npublic boolean shouldOverrideUrlLoading(WebView view, WebResourceRequest request) {\r\n}\r\n        </pre>\r\n</div>\r\n\r\n<p>在部分手机点击支付会调用第三方浏览器的提示，最后没办法注释了 <strong>shouldOverrideUrlLoading(WebView view, WebResourceRequest request)</strong>  中的实现，测试没问题</p>\r\n\r\n<p>感觉应该有更优的解决法案</p>\r\n\r\n<p>参考资料</p>\r\n<p><a href=\"https://github.com/Justson/AgentWeb/issues/192\">微信支付不需要用户不需要做任何动作，AgentWeb 内部已经对微信支付进行了处理</a></p>\r\n\r\n"
  },
  {
    "title": "2014-06-10Android中的5种数据存储方式",
    "ctime": "2019-12-16 14:15:11",
    "type": "1",
    "label": "1",
    "content": "\r\n    <h2><strong><span>Android中的5种数据存储方式：</span></strong></h2>\r\n    <div>1 使用SharedPreferences存储数据</div>\r\n    <div>2 文件存储数据</div>\r\n    <div>3 SQLite数据库存储数据</div>\r\n    <div>4 使用ContentProvider存储数据</div>\r\n    <div>5 网络存储数据</div>\r\n    <h2><strong>一</strong>.Sharedpreference简介</h2>\r\n    <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&nbsp;为了保存软件的参数，或者是某些比较小型的数据，Android中我们可以使用Android为我么提供的SharedPreference类他是一个轻量级的储存类，特别适合用于保存软件参数使用SharedPreference保存数据，其背后是使用xml文件存放数据<br>文件存放在/data/data/&lt;-package\r\n            name-&gt;/shared_prefs目录下</span></p>\r\n    <p><span>1、获取<span>&nbsp;SharedPreferences</span>的一个是类对象</span></p>\r\n    <p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;\r\n        &nbsp;<span>&nbsp;<strong>SharedPreferences pre =\r\n                getSharedPreferences(\"my_sharedprefs\",Context.MODE_WORLD_READABLE);</strong></span></p>\r\n    <p>以上未获得<span>&nbsp;SharedPreferences</span>的一个实例对象，两个参数分表代表&nbsp; 存放数据的文件名和创建模式</p>\r\n    <p>（1）. 文件名。在这里要特别注意。因为在Android中已经确定了SharedPreferences\r\n        是以xml<br>形式保存，所以，在填写文件名参数时，不要给定”.xml”后缀，android会自动添加。只<br>要直接写上文件名，即可。它会直接被保存在/data/data/&lt;packagename&gt;/shared_prefs路<br>径下。它是采用键值对的形式保存参数。当你需要获得某个参数值时，按照参数的键索<br>引即可。<br>（2）.\r\n        第二个可以理解为创建模式和之前的文件存储的模式是一样的。<br><strong>Context.MODE_PRIVATE</strong><br><strong>Context.MODE_APPEND</strong><br><strong>Context.MODE_WORLD_READABLE</strong><br><strong>Context.MODE_WORLD_WRITEABL</strong>\r\n    </p>\r\n    <p>2、.向<span>&nbsp;SharedPreferences</span>实例对象文档中插入数据：</p>\r\n    <p>&nbsp;<strong>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Editor&nbsp;&nbsp;\r\n            editor=sharedPreferences.edit();</strong></p>\r\n    <p><strong><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                &nbsp; editor.putString(\"data\",\"NEwii\");<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                &nbsp;\r\n                &nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                editor.commit();</span></strong></p>\r\n    <p>此为获取<span>SharedPreferences一个可编辑对象实例，向实例中添加数据，最后使用Edior对象的commit()方法提交数据，数据就插入成功！</span></p>\r\n    <p><span>3、从SharedPreferences保存的数据文件中读出数据：</span></p>\r\n    <p><strong><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                SharedPreferences&nbsp;sharedPreferences&nbsp;=&nbsp;getSharedPreferences(<span\r\n                    class=\"string\">\"itcast\"</span>,&nbsp;Context.MODE_PRIVATE);&nbsp;&nbsp;&nbsp;<span\r\n                    class=\"comment\"><br></span></span></strong></p>\r\n    <p><strong><span><span class=\"comment\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                    //getString()第二个参数为缺省值，如果preference中不存在该key，将返回缺省值&nbsp;&nbsp;</span>&nbsp;<br></span></strong>\r\n    </p>\r\n    <p><strong><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                String&nbsp;name&nbsp;=&nbsp;sharedPreferences.getString(<span class=\"string\">\"data\"</span>,&nbsp;<span\r\n                    class=\"string\">\"\"</span>);</span></strong><strong>&nbsp;</strong></p>\r\n    <p><span class=\"keyword\">4、使用Sharedpreferences实现自动登录</span></p>\r\n    <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n        使用&nbsp;&nbsp;&nbsp;<span>SharedPreferences</span>实现自动登录的原理比较简单，首先在启动登陆界面时候判断一下自动登录是否开启，如果开启那么从&nbsp;<span>SharedPreferences</span>中读取出账号、密码直接调用登陆逻辑进行登录；在开启自动登录时候可以设置\r\n        &nbsp;<span>SharedPreferences</span>&nbsp;中的标志&nbsp; flag的值为1 &nbsp; 关闭自动登录和默认情况下，可以设置flag为 0\r\n        ，在Activity中的onResume()方法中首先判断&nbsp; flag&nbsp; 的值&nbsp; 如果值 为1那么就取出账号密码进行自动登录！ &nbsp;</p>\r\n    <p>5、实用简单小例子</p>\r\n    <p>&nbsp; &nbsp; &nbsp; &nbsp;创建：</p>\r\n    <p><strong> SharedPreferences mySharedPreferences = getSharedPreferences(\"user\",\r\n            Context.MODE_PRIVATE);</strong><br><strong> SharedPreferences.Editor editor =\r\n            mySharedPreferences.edit();</strong><br><strong> editor.putString(\"userId\", name);</strong><br><strong>\r\n            editor.putString(\"password\", passWord);</strong><br><strong> // 提交当前数据</strong><br><strong>\r\n            editor.commit();</strong></p>\r\n    <p>&nbsp; &nbsp; &nbsp; 删除：</p>\r\n    <p><strong> SharedPreferences mySharedPreferences = getSharedPreferences(\"user\",\r\n            Context.MODE_PRIVATE);</strong><br><strong> SharedPreferences.Editor editor =\r\n            mySharedPreferences.edit();</strong><br><strong> editor.clear().commit();</strong></p>\r\n    <h2><strong>二、文件存储数据</strong></h2>\r\n    <div>关于文件存储，Activity提供了openFileOutput()方法可以用于把数据输出到文件中，具体的实现过程与在J2SE环境中保存数据到文件中是一样的。</div>\r\n    <div>文件可用来存放大量数据，如文本、图片、音频等。</div>\r\n    <div>默认位置：/data/data/&lt; &gt;/files/***.***。</div>\r\n    <div>代码示例：</div>\r\n    <div>&nbsp;</div>\r\n    <div><strong>public void save()</strong></div>\r\n    <div><strong>&nbsp;{</strong></div>\r\n    <div><strong>&nbsp; &nbsp; &nbsp; &nbsp; try {</strong></div>\r\n    <div><strong>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; FileOutputStream\r\n            outStream=this.openFileOutput(\"a.txt\",Context.MODE_WORLD_READABLE);</strong></div>\r\n    <div><strong>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n            outStream.write(text.getText().toString().getBytes());</strong></div>\r\n    <div><strong>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; outStream.close();</strong></div>\r\n    <div><strong>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n            Toast.makeText(MyActivity.this,\"Saved\",Toast.LENGTH_LONG).show();</strong></div>\r\n    <div><strong>&nbsp; &nbsp; &nbsp; &nbsp; } catch (FileNotFoundException e) {</strong></div>\r\n    <div><strong>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return;</strong></div>\r\n    <div><strong>&nbsp; &nbsp; &nbsp; &nbsp; }</strong></div>\r\n    <div><strong>&nbsp; &nbsp; &nbsp; &nbsp; catch (IOException e){</strong></div>\r\n    <div><strong>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return ;</strong></div>\r\n    <div><strong>&nbsp; &nbsp; &nbsp; &nbsp; }</strong></div>\r\n    <div><strong>&nbsp;</strong></div>\r\n    <div><strong>&nbsp;}&nbsp;</strong></div>\r\n    <div>openFileOutput()方法的第一参数用于指定文件名称，不能包含路径分隔符“/” ，如果文件不存在，Android 会自动创建它。</div>\r\n    <div>创建的文件保存在/data/data//files目录，如： /data/data/cn.itcast.action/files/itcast.txt ，通过点击Eclipse菜单“Window”-“Show\r\n        View”-“Other”，在对话窗口中展开android文件夹，选择下面的File Explorer视图，然后在File Explorer视图中展开/data/data//files目录就可以看到该文件。\r\n    </div>\r\n    <div>openFileOutput()方法的第二参数用于指定操作模式，有四种模式，分别为：</div>\r\n    <div>Context.MODE_PRIVATE = 0</div>\r\n    <div>Context.MODE_APPEND = 32768</div>\r\n    <div>Context.MODE_WORLD_READABLE = 1</div>\r\n    <div>Context.MODE_WORLD_WRITEABLE = 2</div>\r\n    <div>\r\n        Context.MODE_PRIVATE：为默认操作模式，代表该文件是私有数据，只能被应用本身访问，在该模式下，写入的内容会覆盖原文件的内容，如果想把新写入的内容追加到原文件中。可以使用Context.MODE_APPEND\r\n    </div>\r\n    <div>Context.MODE_APPEND：模式会检查文件是否存在，存在就往文件追加内容，否则就创建新文件。</div>\r\n    <div>Context.MODE_WORLD_READABLE和Context.MODE_WORLD_WRITEABLE用来控制其他应用是否有权限读写该文件。</div>\r\n    <div>MODE_WORLD_READABLE：表示当前文件可以被其他应用读取；</div>\r\n    <div>MODE_WORLD_WRITEABLE：表示当前文件可以被其他应用写入。</div>\r\n    <div>如果希望文件被其他应用读和写，可以传入： openFileOutput(\"itcast.txt\", Context.MODE_WORLD_READABLE +\r\n        Context.MODE_WORLD_WRITEABLE);\r\n        android有一套自己的安全模型，当应用程序(.apk)在安装时系统就会分配给他一个userid，当该应用要去访问其他资源比如文件的时候，就需要userid匹配。默认情况下，任何应用创建的文件，sharedpreferences，数据库都应该是私有的（位于/data/data//files），其他程序无法访问。\r\n    </div>\r\n    <div>除非在创建时指定了Context.MODE_WORLD_READABLE或者Context.MODE_WORLD_WRITEABLE ，只有这样其他程序才能正确访问。</div>\r\n    <div>读取文件示例：</div>\r\n    <div><strong>public void load(){</strong></div>\r\n    <div><strong>&nbsp; &nbsp; try {</strong></div>\r\n    <div><strong>&nbsp; &nbsp; &nbsp; &nbsp; FileInputStream inStream=this.openFileInput(\"a.txt\");</strong></div>\r\n    <div><strong>&nbsp; &nbsp; &nbsp; &nbsp; ByteArrayOutputStream stream=new ByteArrayOutputStream();</strong>\r\n    </div>\r\n    <div><strong>&nbsp; &nbsp; &nbsp; &nbsp; byte[] buffer=new byte[1024];</strong></div>\r\n    <div><strong>&nbsp; &nbsp; &nbsp; &nbsp; int length=-1;</strong></div>\r\n    <div><strong>while((length=inStream.read(buffer))!=-1) &nbsp; {</strong></div>\r\n    <div><strong>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; stream.write(buffer,0,length);</strong></div>\r\n    <div><strong>&nbsp; &nbsp; &nbsp; &nbsp; }</strong></div>\r\n    <div><strong>&nbsp; &nbsp; &nbsp; &nbsp; stream.close();</strong></div>\r\n    <div><strong>&nbsp; &nbsp; &nbsp; &nbsp; inStream.close();</strong></div>\r\n    <div><strong>&nbsp; &nbsp; &nbsp; &nbsp; text.setText(stream.toString());</strong></div>\r\n    <div><strong>&nbsp; &nbsp; &nbsp; &nbsp;\r\n            Toast.makeText(MyActivity.this,\"Loaded\",Toast.LENGTH_LONG).show();</strong></div>\r\n    <div><strong>&nbsp; &nbsp; } catch (FileNotFoundException e) {</strong></div>\r\n    <div><strong>&nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();</strong></div>\r\n    <div><strong>&nbsp; &nbsp; }</strong></div>\r\n    <div><strong>&nbsp; &nbsp; catch (IOException e){</strong></div>\r\n    <div><strong>&nbsp; &nbsp; &nbsp; &nbsp; return ;</strong></div>\r\n    <div><strong>&nbsp; &nbsp; }</strong></div>\r\n    <div><strong>} &nbsp;</strong></div>\r\n    <div>对于私有文件只能被创建该文件的应用访问，如果希望文件能被其他应用读和写，可以在创建文件时，指定Context.MODE_WORLD_READABLE和Context.MODE_WORLD_WRITEABLE权限。\r\n    </div>\r\n    <div>Activity还提供了getCacheDir()和getFilesDir()方法： getCacheDir()方法用于获取/data/data//cache目录\r\n        getFilesDir()方法用于获取/data/data//files目录。</div>\r\n    <div>把文件存入SDCard：</div>\r\n    <div>\r\n        使用Activity的openFileOutput()方法保存文件，文件是存放在手机空间上，一般手机的存储空间不是很大，存放些小文件还行，如果要存放像视频这样的大文件，是不可行的。对于像视频这样的大文件，我们可以把它存放在SDCard。\r\n    </div>\r\n    <div>SDCard是干什么的？你可以把它看作是移动硬盘或U盘。 在模拟器中使用SDCard，你需要先创建一张SDCard卡（当然不是真的SDCard，只是镜像文件）。</div>\r\n    <div>创建SDCard可以在Eclipse创建模拟器时随同创建，也可以使用DOS命令进行创建，如下： 在Dos窗口中进入android\r\n        SDK安装路径的tools目录，输入以下命令创建一张容量为2G的SDCard，文件后缀可以随便取，建议使用.img： mksdcard 2048M D:\\AndroidTool\\sdcard.img\r\n        在程序中访问SDCard，你需要申请访问SDCard的权限。</div>\r\n    <div>在AndroidManifest.xml中加入访问SDCard的权限如下:</div>\r\n    <div>&nbsp;&lt;!-- 在SDCard中创建与删除文件权限 --&gt;</div>\r\n    <div>&nbsp; &nbsp; &lt;uses-permission android:name=\"android.permission.MOUNT_UNMOUNT_FILESYSTEMS\"/&gt;</div>\r\n    <div>&nbsp; &nbsp; &lt;!-- 往SDCard写入数据权限 --&gt;</div>\r\n    <div>&nbsp; &nbsp; &lt;uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\"/&gt;&nbsp;</div>\r\n    <div>要往SDCard存放文件，程序必须先判断手机是否装有SDCard，并且可以进行读写。</div>\r\n    <div>注意：访问SDCard必须在AndroidManifest.xml中加入访问SDCard的权限。</div>\r\n    <div><strong>&nbsp;if(Environment.getExternalStorageState().equals(Environment.MEDIA_MOUNTED)){&nbsp;</strong>\r\n    </div>\r\n    <div><strong>File sdCardDir = Environment.getExternalStorageDirectory();//获取SDCard目录 &nbsp; &nbsp; &nbsp;\r\n            &nbsp;&nbsp;</strong></div>\r\n    <div><strong>File saveFile = new File(sdCardDir, “a.txt”);</strong></div>\r\n    <div><strong>&nbsp; &nbsp; &nbsp; &nbsp; FileOutputStream outStream = new FileOutputStream(saveFile);</strong>\r\n    </div>\r\n    <div><strong>&nbsp; &nbsp; &nbsp; &nbsp; outStream.write(\"test\".getBytes());</strong></div>\r\n    <div><strong>&nbsp; &nbsp; &nbsp; &nbsp; outStream.close();</strong></div>\r\n    <div><strong>}&nbsp;</strong></div>\r\n    <div>\r\n        ​Environment.getExternalStorageState()方法用于获取SDCard的状态，如果手机装有SDCard，并且可以进行读写，那么方法返回的状态等于Environment.MEDIA_MOUNTED。\r\n        &nbsp;</div>\r\n    <div>Environment.getExternalStorageDirectory()方法用于获取SDCard的目录，当然要获取SDCard的目录，你也可以这样写：</div>\r\n    <div><strong>File sdCardDir = new File(\"/sdcard\"); //获取SDCard目录</strong></div>\r\n    <div><strong>File saveFile = new File(sdCardDir, \"itcast.txt\");</strong></div>\r\n    <div>//上面两句代码可以合成一句：</div>\r\n    <div><strong>File saveFile = new File(\"/sdcard/a.txt\");</strong></div>\r\n    <div><strong>FileOutputStream outStream = new FileOutputStream(saveFile);</strong></div>\r\n    <div><strong>outStream.write(\"test\".getBytes());</strong></div>\r\n    <div><strong>outStream.close();</strong></div>\r\n    <h2>三、 SQLite数据库存储数据</h2>\r\n    <div>&nbsp; &nbsp; &nbsp; &nbsp;SQLite是轻量级嵌入式数据库引擎，它支持 SQL\r\n        语言，并且只利用很少的内存就有很好的性能。此外它还是开源的，任何人都可以使用它。许多开源项目（(Mozilla, PHP, Python）都使用了 SQLite.SQLite 由以下几个组件组成：SQL\r\n        编译器、内核、后端以及附件。SQLite 通过利用虚拟机和虚拟数据库引擎（VDBE），使调试、修改和扩展 SQLite 的内核变得更加方便。</div>\r\n    <div>特点：</div>\r\n    <div>面向资源有限的设备，</div>\r\n    <div>没有服务器进程,</div>\r\n    <div>所有数据存放在同一文件中跨平台，</div>\r\n    <div>可自由复制。&nbsp;</div>\r\n    <div>SQLite 内部结构：</div>\r\n    <div>&nbsp; &nbsp; &nbsp; SQLite 基本上符合 SQL-92 标准，和其他的主要 SQL 数据库没什么区别。它的优点就是高效，Android&nbsp;运行时环境包含了完整的 SQLite。\r\n        &nbsp;</div>\r\n    <div>&nbsp; &nbsp; &nbsp; SQLite 和其他数据库最大的不同就是对数据类型的支持，创建一个表时，可以在 CREATE TABLE\r\n        语句中指定某列的数据类型，但是你可以把任何数据类型放入任何列中。当某个值插入数据库时，SQLite 将检查它的类型。如果该类型与关联的列不匹配，则 SQLite\r\n        会尝试将该值转换成该列的类型。如果不能转换，则该值将作为其本身具有的类型存储。比如可以把一个字符串（String）放入 INTEGER 列。SQLite 称这为“弱类型”（manifest typing.）。\r\n        此外，SQLite 不支持一些标准的 SQL 功能，特别是外键约束（FOREIGN KEY constrains），嵌套 transcaction 和 RIGHT OUTER JOIN 和 FULL OUTER\r\n        JOIN, 还有一些 ALTER TABLE 功能。 除了上述功能外，SQLite 是一个完整的 SQL&nbsp;系统，拥有完整的触发器，交易等等。</div>\r\n    <div>&nbsp; &nbsp; &nbsp; &nbsp;Android 集成了 SQLite 数据库 Android 在运行时（run-time）集成了 SQLite，所以每个 Android 应用程序都可以使用\r\n        SQLite 数据库。&nbsp;</div>\r\n    <div>&nbsp; &nbsp; &nbsp; &nbsp;对于熟悉 SQL 的开发人员来时，在 Android 开发中使用 SQLite 相当简单。但是，由于 JDBC 会消耗太多的系统资源，所以 JDBC\r\n        对于手机这种内存受限设备来说并不合适。因此，Android 提供了一些新的 API 来使用 SQLite 数据库，Android 开发中，程序员需要学使用这些 API。</div>\r\n    <div>&nbsp; &nbsp; &nbsp; &nbsp;数据库存储在 data/&lt; 项目文件夹 &gt;/databases/ 下。 Android 开发中使用 SQLite 数据库 Activites\r\n        可以通过 Content Provider 或者 Service 访问一个数据库。</div>\r\n    <div>&nbsp; &nbsp; &nbsp; &nbsp;下面会详细讲解如果创建数据库，添加数据和查询数据库。 创建数据库 Android 不自动提供数据库。在 Android 应用程序中使用\r\n        SQLite，必须自己创建数据库，然后创建表、索引，填充数据。</div>\r\n    <div>&nbsp; &nbsp; &nbsp; &nbsp;Android 提供了 SQLiteOpenHelper 帮助你创建一个数据库，你只要继承 SQLiteOpenHelper\r\n        类，就可以轻松的创建数据库。SQLiteOpenHelper 类根据开发应用程序的需要，封装了创建和更新数据库使用的逻辑。</div>\r\n    <div>&nbsp; &nbsp; &nbsp; &nbsp;SQLiteOpenHelper 的子类，至少需要实现三个方法：</div>\r\n    <div>1 构造函数，调用父类 SQLiteOpenHelper 的构造函数。这个方法需要四个参数：上下文环境（例如，一个 Activity），数据库名字，一个可选的游标工厂（通常是\r\n        Null），一个代表你正在使用的数据库模型版本的整数。</div>\r\n    <div>2 onCreate（）方法，它需要一个 SQLiteDatabase 对象作为参数，根据需要对这个对象填充表和初始化数据。</div>\r\n    <div>3 onUpgrage() 方法，它需要三个参数，一个 SQLiteDatabase 对象，一个旧的版本号和一个新的版本号，这样你就可以清楚如何把一个数据库从旧的模型转变到新的模型。</div>\r\n    <div>下面示例代码展示了如何继承 SQLiteOpenHelper 创建数据库：</div>\r\n    <div>&nbsp;</div>\r\n    <div><strong>public class DatabaseHelper extends SQLiteOpenHelper { &nbsp; &nbsp;</strong></div>\r\n    <div><strong>&nbsp; DatabaseHelper(Context context, String name, CursorFactory cursorFactory, int\r\n            version)&nbsp;</strong><strong>{ &nbsp; &nbsp;&nbsp;</strong></div>\r\n    <div><strong>&nbsp; &nbsp; super(context, name, cursorFactory, version); &nbsp; &nbsp;&nbsp;</strong></div>\r\n    <div><strong>&nbsp; &nbsp; &nbsp;} &nbsp; &nbsp;&nbsp;</strong></div>\r\n    <div><strong>&nbsp; &nbsp; &nbsp;@Override &nbsp; &nbsp;</strong></div>\r\n    <div><strong>&nbsp; &nbsp; &nbsp;public void onCreate(SQLiteDatabase db) { &nbsp; &nbsp;&nbsp;</strong></div>\r\n    <div><strong>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// TODO 创建数据库后，对数据库的操作 &nbsp; &nbsp;&nbsp;</strong></div>\r\n    <div><strong>&nbsp; &nbsp; &nbsp;} &nbsp; &nbsp;&nbsp;</strong><strong>&nbsp;&nbsp;</strong></div>\r\n    <div><strong>&nbsp; &nbsp; &nbsp;@Override &nbsp; &nbsp;</strong></div>\r\n    <div><strong>&nbsp;public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) { &nbsp;\r\n            &nbsp;&nbsp;</strong></div>\r\n    <div><strong>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// TODO 更改数据库版本的操作 &nbsp; &nbsp;&nbsp;</strong></div>\r\n    <div><strong>&nbsp; &nbsp; &nbsp;} &nbsp; &nbsp;&nbsp;</strong><strong>&nbsp;</strong></div>\r\n    <div><strong>&nbsp;@Override &nbsp; &nbsp;</strong></div>\r\n    <div><strong>&nbsp;public void onOpen(SQLiteDatabase db) { &nbsp; &nbsp;&nbsp;</strong></div>\r\n    <div><strong>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;super.onOpen(db); &nbsp; &nbsp; &nbsp;&nbsp;</strong></div>\r\n    <div><strong>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// TODO 每次成功打开数据库后首先被执行 &nbsp; &nbsp;&nbsp;</strong></div>\r\n    <div><strong>&nbsp; &nbsp; &nbsp;} &nbsp; &nbsp;&nbsp;</strong></div>\r\n    <div><strong>&nbsp;} &nbsp;</strong>&nbsp; &nbsp;</div>\r\n    <div>接下来讨论具体如何创建表、插入数据、删除表等等。调用 getReadableDatabase() 或 getWriteableDatabase() 方法，你可以得到 SQLiteDatabase\r\n        实例，具体调用那个方法，取决于你是否需要改变数据库的内容：</div>\r\n    <div><strong>&nbsp;db=(new DatabaseHelper(getContext())).getWritableDatabase();</strong></div>\r\n    <div><strong>&nbsp; &nbsp; &nbsp; &nbsp;return (db == null) ? false : true; &nbsp;</strong></div>\r\n    <div>上面这段代码会返回一个 SQLiteDatabase 类的实例，使用这个对象，你就可以查询或者修改数据库。 当你完成了对数据库的操作（例如你的 Activity 已经关闭），需要调用 SQLiteDatabase\r\n        的 Close() 方法来释放掉数据库连接。 创建表和索引 为了创建表和索引，需要调用 SQLiteDatabase 的 execSQL() 方法来执行 DDL 语句。如果没有异常，这个方法没有返回值。&nbsp;\r\n    </div>\r\n    <div>例如，你可以执行如下代码：</div>\r\n    <div>db.execSQL(\"CREATE TABLE mytable (_id INTEGER PRIMARY KEY AUTOINCREMENT, title TEXT, value REAL);\"); &nbsp;\r\n    </div>\r\n    <div>这条语句会创建一个名为 mytable 的表，表有一个列名为 _id，并且是主键，这列的值是会自动增长的整数（例如，当你插入一行时，SQLite 会给这列自动赋值），另外还有两列：title( 字符 ) 和\r\n        value( 浮点数 )。 SQLite 会自动为主键列创建索引。 通常情况下，第一次创建数据库时创建了表和索引。</div>\r\n    <div>如果你不需要改变表的 schema，不需要删除表和索引 . 删除表和索引，需要使用 execSQL() 方法调用 DROP INDEX 和 DROP TABLE 语句。 给表添加数据\r\n        上面的代码，已经创建了数据库和表，现在需要给表添加数据。有两种方法可以给表添加数据。</div>\r\n    <div>像上面创建表一样，你可以使用 execSQL() 方法执行 INSERT, UPDATE, DELETE 等语句来更新表的数据。execSQL() 方法适用于所有不返回结果的 SQL 语句。</div>\r\n    <div>例如： db.execSQL(\"INSERT INTO widgets (name, inventory)\"+ \"VALUES ('Sprocket', 5)\");</div>\r\n    <div>另一种方法是使用 SQLiteDatabase 对象的 insert(), update(), delete() 方法。这些方法把 SQL 语句的一部分作为参数。</div>\r\n    <div>示例如下：</div>\r\n    <div>ContentValues cv=new ContentValues();</div>\r\n    <div>cv.put(Constants.TITLE, \"example title\");</div>\r\n    <div>cv.put(Constants.VALUE, SensorManager.GRAVITY_DEATH_STAR_I);</div>\r\n    <div>db.insert(\"mytable\", getNullColumnHack(), cv);</div>\r\n    <div>update（）方法有四个参数，分别是表名，表示列名和值的 ContentValues 对象，可选的 WHERE 条件和可选的填充 WHERE 语句的字符串，这些字符串会替换 WHERE 条件中的“？”标记。\r\n    </div>\r\n    <div>update() 根据条件，更新指定列的值，所以用 execSQL() 方法可以达到同样的目的。 WHERE 条件和其参数和用过的其他 SQL APIs 类似。</div>\r\n    <div>例如：</div>\r\n    <div>String[] parms=new String[] {\"this is a string\"};</div>\r\n    <div>db.update(\"widgets\", replacements, \"name=?\", parms);</div>\r\n    <div>delete() 方法的使用和 update() 类似，使用表名，可选的 WHERE 条件和相应的填充 WHERE 条件的字符串。 查询数据库 类似 INSERT, UPDATE, DELETE，有两种方法使用\r\n        SELECT 从 SQLite 数据库检索数据。 &nbsp;</div>\r\n    <div>1 ．使用 rawQuery() 直接调用 SELECT 语句； 使用 query() 方法构建一个查询。</div>\r\n    <div>Raw Queries 正如 API 名字，rawQuery() 是最简单的解决方法。通过这个方法你就可以调用 SQL SELECT 语句。</div>\r\n    <div>例如： Cursor c=db.rawQuery( \"SELECT name FROM sqlite_master WHERE type='table' AND name='mytable'\", null);\r\n    </div>\r\n    <div>在上面例子中，我们查询 SQLite 系统表（sqlite_master）检查 table 表是否存在。返回值是一个 cursor 对象，这个对象的方法可以迭代查询结果。\r\n        如果查询是动态的，使用这个方法就会非常复杂。</div>\r\n    <div>例如，当你需要查询的列在程序编译的时候不能确定，这时候使用 query() 方法会方便很多。</div>\r\n    <div>Regular Queries query() 方法用 SELECT 语句段构建查询。SELECT 语句内容作为 query() 方法的参数，比如：要查询的表名，要获取的字段名，WHERE\r\n        条件，包含可选的位置参数，去替代 WHERE 条件中位置参数的值，GROUP BY 条件，HAVING 条件。 除了表名，其他参数可以是 null。所以，以前的代码段可以可写成：</div>\r\n    <div>String[] columns={\"ID\", \"inventory\"};&nbsp;</div>\r\n    <div>&nbsp;String[] parms={\"snicklefritz\"};&nbsp;</div>\r\n    <div>&nbsp;Cursor result=db.query(\"widgets\", columns, \"name=?\",parms, null, null, null); &nbsp;&nbsp;</div>\r\n    <div>使用游标 &nbsp;</div>\r\n    <div>不管你如何执行查询，都会返回一个 Cursor，这是 Android 的 SQLite 数据库游标，</div>\r\n    <div>使用游标，你可以：</div>\r\n    <div>通过使用 getCount() 方法得到结果集中有多少记录；</div>\r\n    <div>通过 moveToFirst(), moveToNext(), 和 isAfterLast() 方法遍历所有记录；</div>\r\n    <div>通过 getColumnNames() 得到字段名；</div>\r\n    <div>通过 getColumnIndex() 转换成字段号；</div>\r\n    <div>通过 getString()，getInt() 等方法得到给定字段当前记录的值；</div>\r\n    <div>通过 requery() 方法重新执行查询得到游标；</div>\r\n    <div>通过 close() 方法释放游标资源；</div>\r\n    <div>例如，下面代码遍历 mytable 表：</div>\r\n    <div><strong>Cursor result=db.rawQuery(\"SELECT ID, name, inventory FROM mytable\"); &nbsp; &nbsp;&nbsp;</strong>\r\n    </div>\r\n    <div><strong>result.moveToFirst();&nbsp;</strong></div>\r\n    <div><strong>&nbsp; &nbsp; while (!result.isAfterLast()) {&nbsp;</strong></div>\r\n    <div><strong>&nbsp; &nbsp; &nbsp; &nbsp; int id=result.getInt(0);&nbsp;</strong></div>\r\n    <div><strong>&nbsp; &nbsp; &nbsp; &nbsp; String name=result.getString(1);&nbsp;</strong></div>\r\n    <div><strong>&nbsp; &nbsp; &nbsp; &nbsp; int inventory=result.getInt(2);&nbsp;</strong></div>\r\n    <div><strong>&nbsp; &nbsp; &nbsp; &nbsp; // do something useful with these&nbsp;</strong></div>\r\n    <div><strong>&nbsp; &nbsp; &nbsp; &nbsp; result.moveToNext();&nbsp;</strong></div>\r\n    <div><strong>&nbsp; &nbsp; &nbsp; }&nbsp;</strong></div>\r\n    <div><strong>&nbsp;result.close(); &nbsp;&nbsp;</strong></div>\r\n    <div>在 Android 中使用 SQLite 数据库管理工具 在其他数据库上作开发，一般都使用工具来检查和处理数据库的内容，而不是仅仅使用数据库的 API。&nbsp;</div>\r\n    <div>使用 Android 模拟器，有两种可供选择的方法来管理数据库。</div>\r\n    <div>首先，模拟器绑定了 sqlite3 控制台程序，可以使用 adb shell 命令来调用他。只要你进入了模拟器的 shell，在数据库的路径执行 sqlite3 命令就可以了。</div>\r\n    <div>数据库文件一般存放在： /data/data/your.app.package/databases/your-db-name 如果你喜欢使用更友好的工具，你可以把数据库拷贝到你的开发机上，使用\r\n        SQLite-aware 客户端来操作它。这样的话，你在一个数据库的拷贝上操作，如果你想要你的修改能反映到设备上，你需要把数据库备份回去。</div>\r\n    <div>把数据库从设备上考出来，你可以使用 adb pull 命令（或者在 IDE 上做相应操作）。</div>\r\n    <div>存储一个修改过的数据库到设备上，使用 adb push 命令。 一个最方便的 SQLite 客户端是 FireFox SQLite Manager 扩展，它可以跨所有平台使用。</div>\r\n    <div>\r\n        <h2><strong>四、使用ContentProvider存储数据</strong></h2>\r\n        <p>Android这个系统和其他的操作系统还不太一样，我们需要记住的是，数据在Android当中是私有的，当然这些数据包括文件数据和数据库数据以及一些其他类型的数据。那这个时候有读者就会提出问题，难道两个程序之间就没有办法对于数据进行交换？Android这么优秀的系统不会让这种情况发生的。解决这个问题主要靠ContentProvider。一个Content\r\n            Provider类实现了一组标准的方法接口，从而能够让其他的应用保存或读取此Content Provider的各种数据类型。也就是说，一个程序可以通过实现一个Content\r\n            Provider的抽象接口将自己的数据暴露出去。外界根本看不到，也不用看到这个应用暴露的数据在应用当中是如何存储的，或者是用数据库存储还是用文件存储，还是通过网上获得，这些一切都不重要，重要的是外界可以通过这一套标准及统一的接口和程序里的数据打交道，可以读取程序的数据，也可以删除程序的数据，当然，中间也会涉及一些权限的问题。&nbsp;\r\n        </p>\r\n        <p>一个程序可以通过实现一个ContentProvider的抽象接口将自己的数据完全暴露出去，而且ContentProviders是以类似数据库中表的方式将数据暴露，也就是说ContentProvider就像一个“数据库”。那么外界获取其提供的数据，也就应该与从数据库中获取数据的操作基本一样，只不过是采用URI来表示外界需要访问的“数据库”。&nbsp;\r\n        </p>\r\n        <p>Content Provider提供了一种多应用间数据共享的方式，比如：联系人信息可以被多个应用程序访问。</p>\r\n        <p>Content Provider是个实现了一组用于提供其他应用程序存取数据的标准方法的类。 应用程序可以在Content Provider中执行如下操作: 查询数据 修改数据 添加数据 删除数据</p>\r\n        <p>标准的Content Provider: Android提供了一些已经在系统中实现的标准Content Provider，比如联系人信息，图片库等等，你可以用这些Content\r\n            Provider来访问设备上存储的联系人信息，图片等等。</p>\r\n        <p><strong>查询记录: &nbsp;</strong></p>\r\n        <p>在Content Provider中使用的查询字符串有别于标准的SQL查询。很多诸如select, add, delete, modify等操作我们都使用一种特殊的URI来进行，这种URI由3个部分组成，\r\n            “content://”, 代表数据的路径，和一个可选的标识数据的ID。</p>\r\n        <p>以下是一些示例URI:</p>\r\n        <p>content://media/internal/images 这个URI将返回设备上存储的所有图片</p>\r\n        <p>content://contacts/people/ 这个URI将返回设备上的所有联系人信息</p>\r\n        <p>content://contacts/people/45 这个URI返回单个结果（联系人信息中ID为45的联系人记录）</p>\r\n        <p>尽管这种查询字符串格式很常见，但是它看起来还是有点令人迷惑。为此，Android提供一系列的帮助类（在android.provider包下），里面包含了很多以类变量形式给出的查询字符串，这种方式更容易让我们理解一点，参见下例:\r\n        </p>\r\n        <p>MediaStore.Images.Media.INTERNAL_CONTENT_URI Contacts.People.CONTENT_URI</p>\r\n        <p>因此，如上面content://contacts/people/45这个URI就可以写成如下形式：</p>\r\n        <p>Uri person = ContentUris.withAppendedId(People.CONTENT_URI, 45);</p>\r\n        <p>然后执行数据查询: Cursor cur = managedQuery(person, null, null, null);</p>\r\n        <p>这个查询返回一个包含所有数据字段的游标，我们可以通过迭代这个游标来获取所有的数据：</p>\r\n\r\n\r\n\r\n\r\n        <span>package&nbsp;com.wissen.testApp;public&nbsp;class&nbsp;ContentProviderDemo&nbsp;extends&nbsp;Activity&nbsp;{</span><br><span>&nbsp;&nbsp;&nbsp;&nbsp;@Override</span><br><span>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;onCreate(Bundle&nbsp;savedInstanceState)&nbsp;{</span><br><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;super.onCreate(savedInstanceState);</span><br><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setContentView(R.layout.main);</span><br><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;displayRecords();</span><br><span>&nbsp;&nbsp;&nbsp;&nbsp;}</span><br><span>&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;void&nbsp;displayRecords()&nbsp;{</span><br><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//该数组中包含了所有要返回的字段</span><br><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;columns[]&nbsp;=&nbsp;new&nbsp;String[]&nbsp;{&nbsp;People.NAME,&nbsp;People.NUMBER&nbsp;};</span><br><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Uri&nbsp;mContacts&nbsp;=&nbsp;People.CONTENT_URI;</span><br><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Cursor&nbsp;cur&nbsp;=&nbsp;managedQuery(</span><br><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mContacts,</span><br><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;columns,&nbsp;&nbsp;//&nbsp;要返回的数据字段</span><br><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;null,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;WHERE子句</span><br><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;null,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;WHERE&nbsp;子句的参数</span><br><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;null&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;Order-by子句</span><br><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);</span><br><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(cur.moveToFirst())&nbsp;{</span><br><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;name&nbsp;=&nbsp;null;</span><br><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;phoneNo&nbsp;=&nbsp;null;</span><br><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;do&nbsp;{</span><br><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;获取字段的值</span><br><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name&nbsp;=&nbsp;cur.getString(cur.getColumnIndex(People.NAME));</span><br><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;phoneNo&nbsp;=&nbsp;cur.getString(cur.getColumnIndex(People.NUMBER));</span><br><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Toast.makeText(this,&nbsp;name&nbsp;+&nbsp;”&nbsp;”&nbsp;+&nbsp;phoneNo,&nbsp;Toast.LENGTH_LONG).show();</span><br><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;while&nbsp;(cur.moveToNext());</span><br><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br><span>&nbsp;&nbsp;&nbsp;&nbsp;}</span>\r\n        <p>}&nbsp;</p>\r\n        <p>上例示范了一个如何依次读取联系人信息表中的指定数据列name和number。&nbsp;</p>\r\n        <p><strong>修改记录: &nbsp;</strong></p>\r\n        <p>我们可以使用ContentResolver.update()方法来修改数据，我们来写一个修改数据的方法:</p>\r\n\r\n\r\n\r\n\r\n\r\n        <strong>&nbsp;\r\n            &nbsp;&nbsp;private&nbsp;void&nbsp;updateRecord(int&nbsp;recNo,&nbsp;String&nbsp;name)&nbsp;{</strong>\r\n        <p><strong>&nbsp; &nbsp;\r\n                Uri&nbsp;uri&nbsp;=&nbsp;ContentUris.withAppendedId(People.CONTENT_URI,&nbsp;recNo);</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;ContentValues&nbsp;values&nbsp;=&nbsp;new&nbsp;ContentValues();</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;values.put(People.NAME,&nbsp;name);</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;getContentResolver().update(uri,&nbsp;values,&nbsp;null,&nbsp;null);</strong>\r\n        </p>\r\n        <p><strong>}</strong> &nbsp;</p>\r\n        <p>现在你可以调用上面的方法来更新指定记录： updateRecord(10, ”XYZ”); //更改第10条记录的name字段值为“XYZ” &nbsp;</p>\r\n        <p><strong>添加记录:</strong></p>\r\n        <p>要增加记录，我们可以调用ContentResolver.insert()方法，该方法接受一个要增加的记录的目标URI，以及一个包含了新记录值的Map对象，调用后的返回值是新记录的URI，包含记录号。</p>\r\n        <p>上面的例子中我们都是基于联系人信息簿这个标准的Content Provider，现在我们继续来创建一个insertRecord() 方法以对联系人信息簿中进行数据的添加：</p>\r\n\r\n\r\n\r\n\r\n\r\n        <strong>&nbsp;private&nbsp;void&nbsp;insertRecords(String&nbsp;name,&nbsp;String&nbsp;phoneNo)&nbsp;{</strong>\r\n        <p><strong>&nbsp; &nbsp;\r\n                ContentValues&nbsp;values&nbsp;=&nbsp;new&nbsp;ContentValues();</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;values.put(People.NAME,&nbsp;name);</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;Uri&nbsp;uri&nbsp;=&nbsp;getContentResolver().insert(People.CONTENT_URI,&nbsp;values);</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;Log.d(”ANDROID”,&nbsp;uri.toString());</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;Uri&nbsp;numberUri&nbsp;=&nbsp;Uri.withAppendedPath(uri,&nbsp;People.Phones.CONTENT_DIRECTORY);</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;values.clear();</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;values.put(Contacts.Phones.TYPE,&nbsp;People.Phones.TYPE_MOBILE);</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;values.put(People.NUMBER,&nbsp;phoneNo);</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;getContentResolver().insert(numberUri,&nbsp;values);</strong>\r\n        </p>\r\n        <p><strong>}&nbsp;</strong>&nbsp;</p>\r\n        <p>这样我们就可以调用insertRecords(name, phoneNo)的方式来向联系人信息簿中添加联系人姓名和电话号码。 &nbsp;</p>\r\n        <p><strong>删除记录:</strong></p>\r\n        <p>Content Provider中的getContextResolver.delete()方法可以用来删除记录。</p>\r\n        <p>下面的记录用来删除设备上所有的联系人信息：</p>\r\n        <p>private void deleteRecords() {</p>\r\n        <p>Uri uri = People.CONTENT_URI;</p>\r\n        <p>getContentResolver().delete(uri, null, null);</p>\r\n        <p>}</p>\r\n        <p>你也可以指定WHERE条件语句来删除特定的记录：</p>\r\n        <p>getContentResolver().delete(uri, “NAME=” + “‘XYZ XYZ’”, null);</p>\r\n        <p>这将会删除name为‘XYZ XYZ’的记录。</p>\r\n        <p><strong>创建Content Provider: &nbsp;</strong></p>\r\n        <p>至此我们已经知道如何使用Content Provider了，现在让我们来看下如何自己创建一个Content Provider。</p>\r\n        <p>要创建我们自己的Content Provider的话，我们需要遵循以下几步：</p>\r\n        <p>1. 创建一个继承了ContentProvider父类的类</p>\r\n        <p>2. 定义一个名为CONTENT_URI，并且是public static final的Uri类型的类变量，你必须为其指定一个唯一的字符串值，最好的方案是以类的全名称，</p>\r\n        <p>如: public static final Uri CONTENT_URI = Uri.parse( “content://com.google.android.MyContentProvider”);\r\n        </p>\r\n        <p>3. 创建你的数据存储系统。大多数Content Provider使用Android文件系统或SQLite数据库来保持数据，但是你也可以以任何你想要的方式来存储。</p>\r\n        <p>4. 定义你要返回给客户端的数据列名。如果你正在使用Android数据库，则数据列的使用方式就和你以往所熟悉的其他数据库一样。但是，你必须为其定义一个叫_id的列，它用来表示每条记录的唯一性。</p>\r\n        <p>5. 如果你要存储字节型数据，比如位图文件等，那保存该数据的数据列其实是一个表示实际保存文件的URI字符串，客户端通过它来读取对应的文件数据，处理这种数据类型的Content\r\n            Provider需要实现一个名为_data的字段，_data字段列出了该文件在Android文件系统上的精确路径。这个字段不仅是供客户端使用，而且也可以供ContentResolver使用。客户端可以调用ContentResolver.openOutputStream()方法来处理该URI指向的文件资源，如果是ContentResolver本身的话，由于其持有的权限比客户端要高，所以它能直接访问该数据文件。\r\n        </p>\r\n        <p>6. 声明public static String型的变量，用于指定要从游标处返回的数据列。</p>\r\n        <p>7. 查询返回一个Cursor类型的对象。所有执行写操作的方法如insert(), update()\r\n            以及delete()都将被监听。我们可以通过使用ContentResover().notifyChange()方法来通知监听器关于数据更新的信息。</p>\r\n        <p>8. 在AndroidMenifest.xml中使用标签来设置Content Provider。</p>\r\n        <p>9. 如果你要处理的数据类型是一种比较新的类型，你就必须先定义一个新的MIME类型，以供ContentProvider.geType(url)来返回。</p>\r\n        <p>MIME类型有两种形式:</p>\r\n        <p>一种是为指定的单个记录的，还有一种是为多条记录的。这里给出一种常用的格式： vnd.android.cursor.item/vnd.yourcompanyname.contenttype\r\n            （单个记录的MIME类型） 比如, 一个请求列车信息的URI如content://com.example.transportationprovider/trains/122\r\n            可能就会返回typevnd.android.cursor.item/vnd.example.rail这样一个MIME类型。</p>\r\n        <p>vnd.android.cursor.dir/vnd.yourcompanyname.contenttype （多个记录的MIME类型） 比如,\r\n            一个请求所有列车信息的URI如content://com.example.transportationprovider/trains\r\n            可能就会返回vnd.android.cursor.dir/vnd.example.rail这样一个MIME 类型。</p>\r\n        <p>下列代码将创建一个Content Provider，它仅仅是存储用户名称并显示所有的用户名称（使用 SQLLite数据库存储这些数据）：<em id=\"__mceDel\"\r\n                style=\"line-height: 1.5;\">&nbsp;</em></p>\r\n\r\n\r\n\r\n\r\n\r\n        <strong>package&nbsp;com.wissen.testApp;public&nbsp;class&nbsp;MyUsers&nbsp;{</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;final&nbsp;String&nbsp;AUTHORITY&nbsp;&nbsp;=&nbsp;“com.wissen.MyContentProvider”;</strong><br><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;BaseColumn类中已经包含了&nbsp;_id字段</strong><br><strong>&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;final&nbsp;class&nbsp;User&nbsp;implements&nbsp;BaseColumns&nbsp;{</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;final&nbsp;Uri&nbsp;CONTENT_URI&nbsp;&nbsp;=&nbsp;Uri.parse(”content://com.wissen.MyContentProvider”);</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;表数据列</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;final&nbsp;String&nbsp;&nbsp;USER_NAME&nbsp;&nbsp;=&nbsp;“USER_NAME”;</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;}</strong>\r\n        <p><strong>} &nbsp;</strong></p>\r\n        <p>上面的类中定义了Content Provider的CONTENT_URI，以及数据列。下面我们将定义基于上面的类来定义实际的Content Provider类：&nbsp;</p>\r\n\r\n\r\n\r\n\r\n\r\n        <strong>package&nbsp;com.wissen.testApp.android;public&nbsp;class&nbsp;MyContentProvider&nbsp;extends&nbsp;ContentProvider&nbsp;{</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;SQLiteDatabase&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sqlDB;</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;DatabaseHelper&nbsp;&nbsp;&nbsp;&nbsp;dbHelper;</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;static&nbsp;final&nbsp;String&nbsp;&nbsp;DATABASE_NAME&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;“Users.db”;</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;static&nbsp;final&nbsp;int&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DATABASE_VERSION&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;1;</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;static&nbsp;final&nbsp;String&nbsp;TABLE_NAME&nbsp;&nbsp;&nbsp;=&nbsp;“User”;</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;static&nbsp;final&nbsp;String&nbsp;TAG&nbsp;=&nbsp;“MyContentProvider”;</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;static&nbsp;class&nbsp;DatabaseHelper&nbsp;extends&nbsp;SQLiteOpenHelper&nbsp;{</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DatabaseHelper(Context&nbsp;context)&nbsp;{</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;super(context,&nbsp;DATABASE_NAME,&nbsp;null,&nbsp;DATABASE_VERSION);</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Override</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;onCreate(SQLiteDatabase&nbsp;db)&nbsp;{</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//创建用于存储数据的表</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;db.execSQL(”Create&nbsp;table&nbsp;”&nbsp;+&nbsp;TABLE_NAME&nbsp;+&nbsp;“(&nbsp;_id&nbsp;INTEGER&nbsp;PRIMARY&nbsp;KEY&nbsp;AUTOINCREMENT,&nbsp;USER_NAME&nbsp;TEXT);”);</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Override</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;onUpgrade(SQLiteDatabase&nbsp;db,&nbsp;int&nbsp;oldVersion,&nbsp;int&nbsp;newVersion)&nbsp;{</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;db.execSQL(”DROP&nbsp;TABLE&nbsp;IF&nbsp;EXISTS&nbsp;”&nbsp;+&nbsp;TABLE_NAME);</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;onCreate(db);</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;}</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;@Override</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;int&nbsp;delete(Uri&nbsp;uri,&nbsp;String&nbsp;s,&nbsp;String[]&nbsp;as)&nbsp;{</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;0;</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;}</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;@Override</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;String&nbsp;getType(Uri&nbsp;uri)&nbsp;{</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;null;</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;}</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;@Override</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;Uri&nbsp;insert(Uri&nbsp;uri,&nbsp;ContentValues&nbsp;contentvalues)&nbsp;{</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sqlDB&nbsp;=&nbsp;dbHelper.getWritableDatabase();</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;long&nbsp;rowId&nbsp;=&nbsp;sqlDB.insert(TABLE_NAME,&nbsp;“”,&nbsp;contentvalues);</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(rowId&nbsp;&gt;&nbsp;0)&nbsp;{</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Uri&nbsp;rowUri&nbsp;=&nbsp;ContentUris.appendId(MyUsers.User.CONTENT_URI.buildUpon(),&nbsp;rowId).build();</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getContext().getContentResolver().notifyChange(rowUri,&nbsp;null);</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;rowUri;</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw&nbsp;new&nbsp;SQLException(”Failed&nbsp;to&nbsp;insert&nbsp;row&nbsp;into&nbsp;”&nbsp;+&nbsp;uri);</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;}</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;@Override</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;boolean&nbsp;onCreate()&nbsp;{</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dbHelper&nbsp;=&nbsp;new&nbsp;DatabaseHelper(getContext());</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;(dbHelper&nbsp;==&nbsp;null)&nbsp;?&nbsp;false&nbsp;:&nbsp;true;</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;}</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;@Override</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;Cursor&nbsp;query(Uri&nbsp;uri,&nbsp;String[]&nbsp;projection,&nbsp;String&nbsp;selection,&nbsp;String[]&nbsp;selectionArgs,&nbsp;String&nbsp;sortOrder)&nbsp;{</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SQLiteQueryBuilder&nbsp;qb&nbsp;=&nbsp;new&nbsp;SQLiteQueryBuilder();</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SQLiteDatabase&nbsp;db&nbsp;=&nbsp;dbHelper.getReadableDatabase();</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;qb.setTables(TABLE_NAME);</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Cursor&nbsp;c&nbsp;=&nbsp;qb.query(db,&nbsp;projection,&nbsp;selection,&nbsp;null,&nbsp;null,&nbsp;null,&nbsp;sortOrder);</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c.setNotificationUri(getContext().getContentResolver(),&nbsp;uri);</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;c;</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;}</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;@Override</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;int&nbsp;update(Uri&nbsp;uri,&nbsp;ContentValues&nbsp;contentvalues,&nbsp;String&nbsp;s,&nbsp;String[]&nbsp;as)&nbsp;{</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;0;</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;}</strong>\r\n        <p><strong>} &nbsp;</strong></p>\r\n        <p>一个名为MyContentProvider的Content Provider创建完成了，它用于从Sqlite数据库中添加和读取记录。&nbsp;</p>\r\n        <p>Content Provider的入口需要在AndroidManifest.xml中配置:</p>\r\n        <p>之后，让我们来使用这个定义好的Content Provider:&nbsp;</p>\r\n\r\n\r\n\r\n\r\n\r\n        <strong>package&nbsp;com.wissen.testApp;public&nbsp;class&nbsp;MyContentDemo&nbsp;extends&nbsp;Activity&nbsp;{</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;@Override</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;protected&nbsp;void&nbsp;onCreate(Bundle&nbsp;savedInstanceState)&nbsp;{</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;super.onCreate(savedInstanceState);</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;insertRecord(”MyUser”);</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;displayRecords();</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;}</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;void&nbsp;insertRecord(String&nbsp;userName)&nbsp;{</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ContentValues&nbsp;values&nbsp;=&nbsp;new&nbsp;ContentValues();</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;values.put(MyUsers.User.USER_NAME,&nbsp;userName);</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getContentResolver().insert(MyUsers.User.CONTENT_URI,&nbsp;values);</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;}</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;void&nbsp;displayRecords()&nbsp;{</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;columns[]&nbsp;=&nbsp;new&nbsp;String[]&nbsp;{&nbsp;MyUsers.User._ID,&nbsp;MyUsers.User.USER_NAME&nbsp;};</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Uri&nbsp;myUri&nbsp;=&nbsp;MyUsers.User.CONTENT_URI;</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Cursor&nbsp;cur&nbsp;=&nbsp;managedQuery(myUri,&nbsp;columns,null,&nbsp;null,&nbsp;null&nbsp;);</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(cur.moveToFirst())&nbsp;{</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;id&nbsp;=&nbsp;null;</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;userName&nbsp;=&nbsp;null;</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;do&nbsp;{</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id&nbsp;=&nbsp;cur.getString(cur.getColumnIndex(MyUsers.User._ID));</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;userName&nbsp;=&nbsp;cur.getString(cur.getColumnIndex(MyUsers.User.USER_NAME));</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Toast.makeText(this,&nbsp;id&nbsp;+&nbsp;”&nbsp;”&nbsp;+&nbsp;userName,&nbsp;Toast.LENGTH_LONG).show();</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;while&nbsp;(cur.moveToNext());</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;}</strong>\r\n        <p><strong>}&nbsp;</strong></p>\r\n        <p>上面的类将先向数据库中添加一条用户数据，然后显示数据库中所有的用户数据。&nbsp;</p>\r\n        <h2><strong>五、 网络存储数据</strong></h2>\r\n        <p>前面介绍的几种存储都是将数据存储在本地设备上，除此之外，还有一种存储（获取）数据的方式，通过网络来实现数据的存储和获取。</p>\r\n        <p>我们可以调用WebService返回的数据或是解析HTTP协议实现网络数据交互。</p>\r\n        <p>具体需要熟悉java.net.*，Android.net.*这两个包的内容，在这就不赘述了，请大家参阅相关文档。</p>\r\n        <p>下面是一个通过地区名称查询该地区的天气预报，以POST发送的方式发送请求到webservicex.net站点，访问WebService.webservicex.net站点上提供查询天气预报的服务。</p>\r\n        <p>代码如下：</p>\r\n\r\n\r\n\r\n\r\n        <strong>public&nbsp;class&nbsp;MyAndroidWeatherActivity&nbsp;extends&nbsp;Activity&nbsp;{</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;//定义需要获取的内容来源地址</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;static&nbsp;final&nbsp;String&nbsp;SERVER_URL&nbsp;=&nbsp;</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"http://www.webservicex.net/WeatherForecast.asmx/GetWeatherByPlaceName\";&nbsp;</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;/**&nbsp;Called&nbsp;when&nbsp;the&nbsp;activity&nbsp;is&nbsp;first&nbsp;created.&nbsp;*/</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;@Override</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;onCreate(Bundle&nbsp;savedInstanceState)&nbsp;{</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;super.onCreate(savedInstanceState);</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setContentView(R.layout.main);</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;HttpPost&nbsp;request&nbsp;=&nbsp;new&nbsp;HttpPost(SERVER_URL);&nbsp;//根据内容来源地址创建一个Http请求</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;添加一个变量&nbsp;</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;List&lt;NameValuePair&gt;&nbsp;params&nbsp;=&nbsp;new&nbsp;ArrayList&lt;NameValuePair&gt;();&nbsp;</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;设置一个地区名称</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;params.add(new&nbsp;BasicNameValuePair(\"PlaceName\",&nbsp;\"NewYork\"));&nbsp;&nbsp;//添加必须的参数</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try&nbsp;{&nbsp;</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//设置参数的编码</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;request.setEntity(new&nbsp;UrlEncodedFormEntity(params,&nbsp;HTTP.UTF_8));&nbsp;</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//发送请求并获取反馈</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;HttpResponse&nbsp;httpResponse&nbsp;=&nbsp;new&nbsp;DefaultHttpClient().execute(request);</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;解析返回的内容</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(httpResponse.getStatusLine().getStatusCode()&nbsp;!=&nbsp;404){&nbsp;</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;result&nbsp;=&nbsp;EntityUtils.toString(httpResponse.getEntity());&nbsp;</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(result);</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;catch&nbsp;(Exception&nbsp;e)&nbsp;{</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e.printStackTrace();</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;</strong><br><strong>&nbsp;&nbsp;&nbsp;&nbsp;}</strong><br><strong>}</strong>\r\n        <p>&nbsp;别忘记了在配置文件中设置访问网络权限：</p>\r\n        <p><strong>&lt;uses-permission android:name=\"android.permission.INTERNET\" /&gt;&nbsp;</strong></p>\r\n\r\n\r\n    </div>\r\n\r\n\r\n"
  },
  {
    "title": "2014-06-10Android设备的ID",
    "ctime": "2019-12-16 14:15:11",
    "type": "1",
    "label": "1",
    "content": "\r\n\r\n        <td>\r\n                <p><span>Android</span><span>的开发者在一些特定情况下都需要知道手机中的唯一设备</span><span>ID</span><span>。</span><span>例如，跟踪应用程序的安装，生成用于复制保护的</span><span>DRM</span><span>时需要使用设备的唯一</span><span>ID</span><span>。</span><span>在本文档结尾处提供了作为参考的示例代码片段。</span></p>\r\n                <p align=\"left\"><strong><span>范围</span></strong></p>\r\n                <p align=\"left\"><span>本文提供有关如何读取各种</span><span>Android</span><span>设备的</span><span>&nbsp;ID</span><span>的介绍，用以使用标识号。</span><span>本文假定用户已经安装了</span><span>Android</span><span>以及开发应用程序必要的工具。</span><span>并且，本文假定用户已了解</span><span>Android</span><span>的基本知识。</span></p>\r\n                <p align=\"left\"><strong><span>简介</span></strong><span>在搭载</span><span>Android</span><span>操作系统的设备中，已经存在好几种类型的设备标识号。</span><span>先前的所有</span><span>Android</span><span>设备都具有电话功能，因此查找每部设备硬件唯一的</span><span>IMEI</span><span>，</span><span>MEID</span><span>，或</span><span>ESN</span><span>也很容易。</span><span>但仅能使用</span><span>Wifi</span><span>的设备或音乐播放器没有电话硬件，所以没有这种类型的唯一标识号。本文阐述了如何读取不同</span><span>Android</span><span>设备的标识号。</span>检索Android设备ID各种方式</p>\r\n                <p align=\"left\"><span>以下是</span><span>Android</span><span>设备不同类型的识别设备</span><span>ID</span><span>。</span></p>\r\n                <p align=\"left\"><span>·&nbsp;</span><span>唯一编号（</span><span>IMEI</span><span>，</span><span>MEID</span><span>，</span><span>ESN</span><span>，</span><span>IMSI</span><span>）</span></p>\r\n                <p align=\"left\"><span>·&nbsp;</span><span>MAC</span><span>地址</span></p>\r\n                <p align=\"left\"><span>·&nbsp;</span><span>序列号</span></p>\r\n                <p align=\"left\"><span>·&nbsp;</span><span>ANDROID_ID</span></p>\r\n                <p align=\"left\"><strong><span>唯一编号（</span></strong><strong><span>IMEI</span></strong><strong><span>，</span></strong><strong><span>MEID</span></strong><strong><span>，</span></strong><strong><span>ESN</span></strong><strong><span>，</span></strong><strong><span>IMSI</span></strong><strong><span>）</span></strong></p>\r\n                <p align=\"left\"><strong><span>说明</span></strong><span>在以前，当</span><span>Android</span><span>设备均作为电话使用时，寻找唯一标识号比较简单：</span><span>（）可用于找到（取决于网络技术）手机硬件唯一的</span><span>IMEI</span><span>，</span><span>MEID</span><span>，</span><span>ESN</span><span>和</span><span>IMSI</span><span>编号。</span></p>\r\n                <p>TelephonyManager.getDeviceId</p>\r\n                <p align=\"left\"><strong><span>IMEI</span></strong><strong><span>，</span></strong><strong><span>MEID</span></strong><strong><span>，</span></strong><strong><span>ESN</span></strong><strong><span>，</span></strong><strong><span>IMSI</span></strong><strong><span>的定义如下：</span></strong></p>\r\n                <p align=\"left\"><span>•IMEI</span><span>（国际移动设备识别码）</span><span>唯一编号，用于识别</span><span>&nbsp;GSM</span><span>，</span><span>WCDMA</span><span>手机以及一些卫星电话</span><span>（移动设备识别码）</span><span>全球唯一编号，用于识别</span><span>CDMA</span><span>移动电台设备的物理硬件，</span><span>MEID</span><span>出现的目的是取代</span><span>ESN</span><span>号段（电子序列号）</span><span>（电子序列号）</span><span>唯一编号，用于识别</span><span>CDMA</span><span>手机</span><span>（国际移动用户识别码）</span><span>与所有</span><span>GSM</span><span>和</span><span>UMTS</span><span>网络手机用户相关联的唯一识别编号</span><span>如需要检索设备的</span><span>ID</span><span>，在项目中要使用以下代码：</span></p>\r\n                <p>•MEID</p>\r\n                <p>•ESN</p>\r\n                <p>•IMSI</p>\r\n                <p align=\"left\"><span><span>import android.telephony.TelephonyManager;&nbsp;&nbsp;&nbsp;</span></span></p>\r\n                <p align=\"left\"><span><span>import android.content.Context; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</span></span></p>\r\n                <p align=\"left\"><span><span>String&nbsp;&nbsp; imeistring = null;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></p>\r\n                <p align=\"left\"><span><span>String&nbsp;&nbsp; imsistring = null;&nbsp;&nbsp;&nbsp;</span></span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p>\r\n                <p align=\"left\"><span><span>{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp; TelephonyManager&nbsp;&nbsp;&nbsp; telephonyManager; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span></span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp; telephonyManager&nbsp;=</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ( TelephonyManager )getSystemService( Context.TELEPHONY_SERVICE );</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp; /*</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; * getDeviceId() function Returns the unique device ID.</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp; * for example,the IMEI for GSM and the MEID or ESN for CDMA phones.</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp; */&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp; imeistring = telephonyManager.getDeviceId();</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp; /*</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp; * getSubscriberId() function Returns the unique subscriber ID,</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;* for example, the IMSI for a GSM phone.</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;*/</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp; imsistring = telephonyManager.getSubscriberId();&nbsp;&nbsp;</span></span></p>\r\n                <p align=\"left\"><span><span>}</span></span></p>\r\n                <p align=\"left\"><span>如要只读取手机的状态，则需添加</span><span>READ_PHONE_STATE</span><span>许可到</span><span>AndroidManifest.xml</span><span>文件中。</span></p>\r\n                <p align=\"left\"><span><span>&lt;uses-permission</span></span></p>\r\n                <p>&nbsp; android:name=\"android.permission.READ_PHONE_STATE\" &gt;</p>\r\n                <p>&lt;/uses-permission&gt;</p>\r\n                <p align=\"left\"><strong><span>缺点</span></strong></p>\r\n                <p align=\"left\"><span lang=\"EN\">•Android</span><span>设备要具有电话功能</span></p>\r\n                <p>•<span>其工作不是很可靠</span></p>\r\n                <p>•<span>序列号</span></p>\r\n                <p>•<span>当其工作时，该值保留了设备的重置信息（</span><span lang=\"EN\">“</span><span>恢复出厂设置</span><span lang=\"EN\">”</span><span>），从而可以消除当客户删除自己设备上的信息，并把设备转另一个人时发生的错误。</span></p>\r\n                <p><strong><span>Mac</span></strong><strong><span>地址</span></strong></p>\r\n                <p align=\"left\"><strong><span>说明</span></strong></p>\r\n                <p align=\"left\"><span>可通过检索找到设备的</span><span>Wi - Fi</span><span>或蓝牙硬件的</span><span>Mac</span><span>地址。但是，不推荐使用</span><span>Mac</span><span>地址作为唯一的标识号。</span></p>\r\n                <p align=\"left\"><strong><span>缺点</span></strong><span>设备要具备</span><span>Wi – Fi</span><span>功能（并非所有的设备都有</span><span>Wi – Fi</span><span>功能）</span><span>如果设备目前正在使用</span><span>Wi - Fi</span><span>，则不能报告</span><span>Mac</span><span>地址</span></p>\r\n                <p align=\"left\"><strong><span>序列号</span></strong></p>\r\n                <p align=\"left\"><span>从</span><span>Android 2.3</span><span>（</span><span>“</span><span>姜饼</span><span>”</span><span>）开始，</span><span>通过</span><span>android.os.Build.SERIAL</span><span>方法序列号可被使用。没有电话功能的设备也都需要上给出唯一的设备</span><span>ID;&nbsp;&nbsp;</span><span>某些手机也可以需要这样做。</span><span>序列号可以用于识别</span><span>MID</span><span>（移动互联网设备）或</span><span>PMP</span><span>（便携式媒体播放器），这两种设备都没有电话功能。</span><span>通过读取系统属性值</span><span>“ro.serialno”</span><span>的方法，可以使用序列号作为设备</span><span>ID&nbsp;</span><span>。</span><span>如检索序列号并作为设备</span><span>ID</span><span>使用，请参考下面的代码示例。</span></p>\r\n                <p align=\"left\"><span><span>import java.lang.reflect.Method; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</span></span></p>\r\n                <p align=\"left\"><span><span>String serialnum = null;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></p>\r\n                <p align=\"left\"><span><span>try {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></p>\r\n                <p>&nbsp;Class&lt;?&gt; c = Class.forName(\"android.os.SystemProperties\");&nbsp;</p>\r\n                <p>&nbsp;Method get = c.getMethod(\"get\", String.class, String.class );&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\r\n                <p>&nbsp;serialnum = (String)(&nbsp;&nbsp; get.invoke(c, \"ro.serialno\", \"unknown\" )&nbsp; );&nbsp;&nbsp;&nbsp;</p>\r\n                <p>}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\r\n                <p>catch (Exception ignored)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\r\n                <p>{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\r\n                <p>}</p>\r\n                <p align=\"left\"><span><strong>缺点</strong></span></p>\r\n                <p align=\"left\"><span><span>序列号无法在所有</span><span>Android</span><span>设备上使用。</span></span></p>\r\n                <p align=\"left\"><span><strong><span>ANDROID_ID</span></strong></span></p>\r\n                <p align=\"left\"><span><strong>说明</strong></span></p>\r\n                <p align=\"left\"><span><span>更具体地说，</span><span>Settings.Secure.ANDROID_ID&nbsp;</span><span>是一串</span><span>64</span><span>位的编码（十六进制的字符串），是随机生成的设备的第一个引导，</span><span>其记录着一个固定值，</span><span>通过它可以知道设备的寿命（在设备恢复出厂设置后，</span><span>该值可能会改变）。</span><span>&nbsp;ANDROID_ID</span><span>也可视为作为唯一设备标识号的一个好选择。</span><span>如要检索用于设备</span><span>ID&nbsp;</span><span>的</span><span>ANDROID_ID</span><span>，请参阅下面的示例代码</span></span></p>\r\n                <p align=\"left\"><span><span>String androidId = Settings.Secure.getString(getContentResolver(),Settings.Secure.ANDROID_ID);</span></span></p>\r\n                <p align=\"left\"><span><strong>缺点</strong></span></p>\r\n                <p align=\"left\"><span><span><span lang=\"EN\">•&nbsp;</span><span>对于</span><span lang=\"EN\">Android 2.2</span><span>（</span><span lang=\"EN\">“Froyo”</span><span>）之前的设备不是</span><span lang=\"EN\">100</span><span>％的可靠</span></span></span></p>\r\n                <p>•&nbsp;<span>此外，在主流制造商的畅销手机中至少存在一个众所周知的错误，每一个实例都具有相同的</span><span lang=\"EN\">ANDROID_ID</span><span>。</span><span>&nbsp;</span></p>\r\n                <p align=\"left\"><span><strong><span>结论</span></strong></span></p>\r\n                <p align=\"left\"><span><span><span>对于绝大多数应用来说，只需识别特定的安装配置，而不需要识别物理设备。所幸是，这样做就省去了麻烦。</span></span></span></p>\r\n                <p><span>下面是部分使用设备</span><span lang=\"EN\">ID</span><span>的最佳途径：</span></p>\r\n                <p>•<span>支持各种设备类型的另一种方法是使用</span><span lang=\"EN\">getDeviceID</span><span>（）</span><span lang=\"EN\">API</span><span>和</span><span lang=\"EN\">ro.serialno</span><span>的组合</span></p>\r\n                <p>•<span>有许多值得参考的原因，来提醒开发者避免试图识别特定的设备。对于那些想做一下这方面尝试的用户，</span><span>&nbsp;</span><span>最好的办法可能是使用</span><span lang=\"EN\">ANDROID_ID</span><span>，并在一些传统设备上做尝试。</span></p>\r\n                <p align=\"left\"><span><strong><span>示例代码</span></strong></span></p>\r\n                <p align=\"left\"><span><span>下面是用于追踪</span><span>Android</span><span>设置的示例代码</span></span></p>\r\n                <p align=\"left\"><span><strong><span>类</span></strong><strong><span>: ReadDeviceID.java</span></strong></span></p>\r\n                <p align=\"left\"><span><span>public class ReadDeviceID extends Activity {</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;Button bt;</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;TextView idView;</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp; /** Called when the activity is first created. */</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp; @Override</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp; public void onCreate(Bundle savedInstanceState) {</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; super.onCreate(savedInstanceState);</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; setContentView(R.layout.main);</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; bt=(Button)findViewById(R.id.button1);</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; idView=(TextView)findViewById(R.id.textView1);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; bt.setOnClickListener(new OnClickListener() {&nbsp;&nbsp;</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;@Override</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;public void onClick(View v) {</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp; String imeistring=null;&nbsp;&nbsp;&nbsp;</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; String imsistring=null;</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;TelephonyManager&nbsp;&nbsp; telephonyManager&nbsp;=&nbsp;</span></span></p>\r\n                <p align=\"left\"><span><span>( TelephonyManager</span></span><span><span>)getSystemService( Context.TELEPHONY_SERVICE );</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /*</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;* getDeviceId() function Returns the unique device ID.</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;* for example,the IMEI for GSM and the MEID or ESN for CDMA phones.</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;*/&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;imeistring = telephonyManager.getDeviceId();</span></span></p>\r\n                <p>&nbsp;idView.append(\"IMEI No : \"+imeistring+\"\\n\");&nbsp;&nbsp;&nbsp;&nbsp;</p>\r\n                <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /*</p>\r\n                <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; * getSubscriberId() function Returns the unique subscriber ID,</p>\r\n                <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; * for example, the IMSI for a GSM phone.</p>\r\n                <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; */&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\r\n                <p>&nbsp; imsistring = telephonyManager.getSubscriberId();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\r\n                <p>&nbsp; idView.append(\"IMSI No : \"+imsistring+\"\\n\");</p>\r\n                <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\r\n                <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /*</p>\r\n                <p>&nbsp; * System Property ro.serialno returns the serial number as unique number</p>\r\n                <p>&nbsp; * Works for Android 2.3 and above&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\r\n                <p>&nbsp; */</p>\r\n                <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\r\n                <p>&nbsp; String hwID = android.os.SystemProperties.get(\"ro.serialno\", \"unknown\");</p>\r\n                <p>&nbsp; idView.append( \"hwID : \" + hwID + \"\\n\" );</p>\r\n                <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; String serialnum = null;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\r\n                <p>&nbsp; try {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\r\n                <p>&nbsp;&nbsp;&nbsp; Class&lt;?&gt; c = Class.forName(\"android.os.SystemProperties\");&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\r\n                <p>&nbsp;&nbsp;&nbsp; Method get = c.getMethod(\"get\", String.class, String.class );&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\r\n                <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; serialnum = (String)(&nbsp;&nbsp; get.invoke(c, \"ro.serialno\", \"unknown\" )&nbsp; );</p>\r\n                <p>&nbsp;&nbsp;&nbsp;&nbsp; idView.append( \"serial : \" + serialnum + \"\\n\" );</p>\r\n                <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;} catch (Exception ignored) {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\r\n                <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n                <p>&nbsp;String serialnum2 = null;</p>\r\n                <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; try {</p>\r\n                <p>&nbsp;Class myclass = Class.forName( \"android.os.SystemProperties\" );</p>\r\n                <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;Method[] methods = myclass.getMethods();</p>\r\n                <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;Object[] params = new Object[] { new String( \"ro.serialno\" ) , new String(&nbsp;</p>\r\n                <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"Unknown\" ) };&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</p>\r\n                <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;serialnum2 = (String)(methods[2].invoke( myclass, params ));&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</p>\r\n                <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; idView.append( \"serial2 : \" + serialnum2 + \"\\n\" );</p>\r\n                <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }catch (Exception ignored)</p>\r\n                <p>&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;</p>\r\n                <p>&nbsp;}&nbsp;&nbsp;</p>\r\n                <p>&nbsp;&nbsp; /*</p>\r\n                <p>&nbsp;&nbsp;&nbsp; * Settings.Secure.ANDROID_ID returns the unique DeviceID</p>\r\n                <p>&nbsp;&nbsp;&nbsp; * Works for Android 2.2 and above&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\r\n                <p>&nbsp;&nbsp;&nbsp; */</p>\r\n                <p>&nbsp;String androidId = Settings.Secure.getString(getContentResolver(),&nbsp;</p>\r\n                <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Settings.Secure.ANDROID_ID);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\r\n                <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; idView.append( \"AndroidID : \" + androidId + \"\\n\" );&nbsp;&nbsp;&nbsp;</p>\r\n                <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n                <p>&nbsp;&nbsp;&nbsp; });</p>\r\n                <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\r\n                <p>&nbsp;&nbsp;&nbsp; }</p>\r\n                <p>}</p>\r\n                <p align=\"left\">&nbsp;</p>\r\n                <p align=\"left\"><span><strong><span>类</span></strong><strong><span>: SystemProperties.java</span></strong></span></p>\r\n                <p align=\"left\"><span>&nbsp;</span></p>\r\n                <p align=\"left\"><span><span>package android.os;</span></span></p>\r\n                <p align=\"left\"><span>&nbsp;</span></p>\r\n                <p align=\"left\"><span><span>/**</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;* Gives access to the system properties store.&nbsp;The system properties</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;* store contains a list of string key-value pairs.</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;*</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;* {@hide}</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;*/</span></span></p>\r\n                <p align=\"left\"><span><span>public class SystemProperties</span></span></p>\r\n                <p align=\"left\"><span><span>{</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp; public static final int PROP_NAME_MAX = 31;</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp; public static final int PROP_VALUE_MAX = 91;</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp; private static native String native_get(String key);</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp; private static native String native_get(String key, String def);</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp; private static native int native_get_int(String key, int def);</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp; private static native long native_get_long(String key, long def);</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp; private static native boolean native_get_boolean(String key, boolean def);</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp; private static native void native_set(String key, String def);</span></span></p>\r\n                <p align=\"left\"><span>&nbsp;</span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp; /**</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp; * Get the value for the given key.</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp; * @return an empty string if the key isn't found</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp; * @throws IllegalArgumentException if the key exceeds 32 characters</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp; */</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp; public static String get(String key) {</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (key.length() &gt; PROP_NAME_MAX) {</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; throw new IllegalArgumentException(\"key.length &gt; \" + PROP_NAME_MAX);</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return native_get(key);</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp; }</span></span></p>\r\n                <p align=\"left\"><span>&nbsp;</span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp; /**</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp; * Get the value for the given key.</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp; * @return if the key isn't found, return def if it isn't null, or an empty string otherwise</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp; * @throws IllegalArgumentException if the key exceeds 32 characters</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp; */</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp; public static String get(String key, String def) {</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (key.length() &gt; PROP_NAME_MAX) {</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; throw new IllegalArgumentException(\"key.length &gt; \" + PROP_NAME_MAX);</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return native_get(key, def);</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp; }</span></span></p>\r\n                <p align=\"left\"><span>&nbsp;</span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp; /**</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp; * Get the value for the given key, and return as an integer.</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp; * @param key the key to lookup</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp; * @param def a default value to return</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp; * @return the key parsed as an integer, or def if the key isn't found or</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp; *&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cannot be parsed</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp; * @throws IllegalArgumentException if the key exceeds 32 characters</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp; */</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp; public static int getInt(String key, int def) {</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (key.length() &gt; PROP_NAME_MAX) {</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; throw new IllegalArgumentException(\"key.length &gt; \" + PROP_NAME_MAX);</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return native_get_int(key, def);</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp; }</span></span></p>\r\n                <p align=\"left\"><span>&nbsp;</span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp; /**</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp; * Get the value for the given key, and return as a long.</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp; * @param key the key to lookup</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp; * @param def a default value to return</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp; * @return the key parsed as a long, or def if the key isn't found or</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp; *&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cannot be parsed</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp; * @throws IllegalArgumentException if the key exceeds 32 characters</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp; */</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp; public static long getLong(String key, long def) {</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (key.length() &gt; PROP_NAME_MAX) {</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; throw new IllegalArgumentException(\"key.length &gt; \" + PROP_NAME_MAX);</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return native_get_long(key, def);</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp; }</span></span></p>\r\n                <p align=\"left\"><span>&nbsp;</span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp; /**</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp; * Get the value for the given key, returned as a boolean.</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp; * Values 'n', 'no', '0', 'false' or 'off' are considered false.</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp; * Values 'y', 'yes', '1', 'true' or 'on' are considered true.</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp; * (case insensitive).</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp; * If the key does not exist, or has any other value, then the default</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp; * result is returned.</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp; * @param key the key to lookup</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp; * @param def a default value to return</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp; * @return the key parsed as a boolean, or def if the key isn't found or is</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp; *&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; not able to be parsed as a boolean.</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp; * @throws IllegalArgumentException if the key exceeds 32 characters</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp; */</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp; public static boolean getBoolean(String key, boolean def) {</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (key.length() &gt; PROP_NAME_MAX) {</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; throw new IllegalArgumentException(\"key.length &gt; \" + PROP_NAME_MAX);</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return native_get_boolean(key, def);</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp; }</span></span></p>\r\n                <p align=\"left\"><span>&nbsp;</span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp; /**</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp; * Set the value for the given key.</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp; * @throws IllegalArgumentException if the key exceeds 32 characters</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp; * @throws IllegalArgumentException if the value exceeds 92 characters</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp; */</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp; public static void set(String key, String val) {</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (key.length() &gt; PROP_NAME_MAX) {</span></span></p>\r\n                <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; throw new IllegalArgumentException(\"key.length &gt; \" + PROP_NAME_MAX);</p>\r\n                <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n                <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (val != null &amp;&amp; val.length() &gt; PROP_VALUE_MAX) {</p>\r\n                <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; throw new IllegalArgumentException(\"val.length &gt; \" +</p>\r\n                <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; PROP_VALUE_MAX);</p>\r\n                <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n                <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; native_set(key, val);</p>\r\n                <p>&nbsp;&nbsp;&nbsp; }</p>\r\n                <p>}</p>\r\n                <p align=\"left\"><span><span>使用</span><strong><span>\"ReadDeviceID\"&nbsp;</span></strong><span>activity&nbsp;</span><span>创建</span><strong><span>\"com.deviceid\"</span></strong><span>项目。</span><span>将布局</span><span>\"main.xml\"</span><span>改写成下面的代码</span></span></p>\r\n                <p align=\"left\"><span><span>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</span></span></p>\r\n                <p>&lt;LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"</p>\r\n                <p>&nbsp;&nbsp;&nbsp; android:orientation=\"vertical\"</p>\r\n                <p>&nbsp;&nbsp;&nbsp; android:layout_width=\"fill_parent\"</p>\r\n                <p>&nbsp;&nbsp;&nbsp; android:layout_height=\"fill_parent\"</p>\r\n                <p>&nbsp;&nbsp;&nbsp; &gt;</p>\r\n                <p>&lt;TextView&nbsp;</p>\r\n                <p>&nbsp;&nbsp;&nbsp; android:layout_width=\"fill_parent\"</p>\r\n                <p>&nbsp;&nbsp;&nbsp; android:layout_height=\"wrap_content\"</p>\r\n                <p>&nbsp;&nbsp;&nbsp; android:text=\"@string/hello\"</p>\r\n                <p>&nbsp;&nbsp;&nbsp; /&gt;</p>\r\n                <p>&lt;Button</p>\r\n                <p>&nbsp;&nbsp;&nbsp; android:text=\"GetDeviceID\"</p>\r\n                <p>&nbsp;&nbsp;&nbsp; android:id=\"@+id/button1\"</p>\r\n                <p>&nbsp;&nbsp;&nbsp; android:layout_width=\"wrap_content\"</p>\r\n                <p>&nbsp;&nbsp;&nbsp; android:layout_height=\"wrap_content\"&gt;</p>\r\n                <p>&lt;/Button&gt;</p>\r\n                <p>&lt;TextView&nbsp;&nbsp;&nbsp;&nbsp;</p>\r\n                <p>&nbsp;&nbsp;&nbsp; android:id=\"@+id/textView1\"&nbsp;&nbsp;&nbsp;</p>\r\n                <p>&nbsp;&nbsp;&nbsp; android:layout_width=\"fill_parent\"</p>\r\n                <p>&nbsp;&nbsp;&nbsp; android:layout_height=\"wrap_content\"&gt;</p>\r\n                <p>&lt;/TextView&gt;</p>\r\n                <p>&lt;/LinearLayout&gt;</p>\r\n                <p align=\"left\"><span><span>在</span><strong><span>\"AndroidManifest.xml\"</span></strong><span>文件中添加</span><strong><span>\"READ_PHONE_STATE\"</span></strong><span>许可，</span><span>使应用程序可以登陆互联网。</span></span></p>\r\n                <p align=\"left\"><span><span>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</span></span></p>\r\n                <p align=\"left\"><span><span>&lt;manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; package=\"com.deviceid\"</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; android:versionCode=\"1\"</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; android:versionName=\"1.0\"&gt;</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp; &lt;uses-sdk android:minSdkVersion=\"7\" /&gt;</span></span></p>\r\n                <p align=\"left\"><span>&nbsp;</span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp; &lt;application android:icon=\"@drawable/icon\" android:label=\"@string/app_name\"&gt;</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;activity android:name=\".ReadDeviceID\"</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; android:label=\"@string/app_name\"&gt;</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;intent-filter&gt;</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;action android:name=\"android.intent.action.MAIN\" /&gt;</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;category android:name=\"android.intent.category.LAUNCHER\" /&gt;</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/intent-filter&gt;</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/activity&gt;</span></span></p>\r\n                <p align=\"left\"><span>&nbsp;</span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp; &lt;/application&gt;</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;</span></span></p>\r\n                <p align=\"left\"><span><span>&nbsp;&nbsp;&nbsp; &lt;uses-permission</span></span></p>\r\n                <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; android:name=\"android.permission.READ_PHONE_STATE\" &gt;</p>\r\n                <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/uses-permission&gt;</p>\r\n                <p>&nbsp;&nbsp;&nbsp;</p>\r\n                <p>&lt;/manifest&gt;</p>\r\n                <p align=\"left\">&nbsp;</p>\r\n                </td>\r\n    \r\n"
  },
  {
    "title": "Android学习回顾之Service",
    "ctime": "2019-12-16 15:36:35",
    "type": "1",
    "label": "1",
    "content": "\r\n<h4>进程保活</h4>\r\n<h4>Service的运行线程（生命周期方法全部在主线程）</h4>\r\n<h4>Service启动方式以及如何停止</h4>\r\n<h4>ServiceConnection里面的回调方法运行在哪个线程？</h4>\r\n\r\n\r\n\r\n\r\n"
  },
  {
    "title": "MVVM使用的几点思考",
    "ctime": "2019-12-16 14:15:11",
    "type": "1",
    "label": "1",
    "content": "\r\n    <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;相较于前几年，安卓真的是成熟了很多，从简单的各种常用库发展都能感受到，比如网络请求http--aFinal/xutils--volley--okhttp--retrofit/RxAndroid。\r\n        架构也在不断发展mvc--mvp/mvvm。</p>\r\n    <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;做为一个码农，一定要培养自己对新技术保持热情。但是对于技术在商业项目的运用上我认为应该持谨慎态度。尤其是新流行的技术，可以私下研究，商用还是谨慎为上。\r\n        去年年底，组内决定对现有app整体架构（之前mvc架构）进行重构，对比了mvp和mvvm两种架构之后，主要考虑到mvp接口太多颗粒度不易控制，最后选用了mvvm架构进\r\n        行重构。以下是几点思考，后续不断更新</p>\r\n    <ul>\r\n        <li>对于view层常规的控件处理事件影响不是特别大，但是稍微特殊点的情况有时候为了遵守mvvm的规范，本来简单的事件处理写法上反而变得复杂</li>\r\n        <p>比如简单的需要在viewmodule调用startActivityForResult()或复杂点的recycleview的item的事件需要用到view层（Activity）的引用Context，单纯把Activity的Context的传过去肯定是不行的，先不说内存泄漏的\r\n            问题，比较主流的做法是定义一个观察者，在view层（Activity）进行事件处理</p>\r\n        <code>\r\n                viewModel.xxxObservable.addOnPropertyChangedCallback(new Observable.OnPropertyChangedCallback() { <br>\r\n                    &nbsp;&nbsp;@Override<br>\r\n                    &nbsp;&nbsp;public void onPropertyChanged(Observable sender, int propertyId) {<br>\r\n                        &nbsp;&nbsp;//do something<br>\r\n                        &nbsp;&nbsp; <br>\r\n                        &nbsp;&nbsp;}<br>\r\n                });<br>\r\n        </code>    \r\n        <li>正是因为上面的处理方法，自然就引发了另一个问题：定义了很多的观察者变量，定义更多的 Observable&& 变量，多数是为了监听控件的某些状态,这些变量肯定会造成更多的内存消耗</li>\r\n        <li>双向绑定真的是把双刃剑--DataBinding</li>\r\n        <p><strong>DataBinding</strong>是2015年Google提出的一个官方库，坦白说第一次了解了这个库以后，就对DataBinding爱不起来。第一次印象这个库让我想到了后端javaWeb开发的jsp，很像吧，可以在jsp/xml中调用\r\n            java代码。想想现在html5发展如日中天，jsp的现在的处境不就是DataBinding方式的未来吗?还是返回来说问题：</p>\r\n        <code>\r\n                &lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;<br>\r\n                &lt;layout xmlns:app=\"http://schemas.android.com/apk/res-auto\"<br>\r\n                &nbsp;&nbsp;xmlns:tools=\"http://schemas.android.com/tools\"&gt;<br>\r\n                    &lt;data&gt;<br>\r\n                    &lt;variable<br>\r\n                            &nbsp;&nbsp;name=\"vm\"<br>\r\n                            &nbsp;&nbsp;type=\"com.xxxxx.xxxxx.loginViewModel\" /&gt;<br>\r\n                            &lt;/data&gt;<br>\r\n                            ......<br>                \r\n                            &lt;TextView<br>\r\n                            &nbsp;&nbsp;android:layout_width=\"wrap_content\"<br>\r\n                            &nbsp;&nbsp;android:layout_height=\"wrap_content\"<br>\r\n                            &nbsp;&nbsp;android:text=\"<strong>@{vm.user.name}</strong>\"<br>\r\n                            &nbsp;&nbsp;android:textColor=\"@android:color/black\" /&gt;<br>\r\n        </code>\r\n        <p>主要有两点第一在xml中使用时代码提示很不友好</p>\r\n        <p>第二点业务调整时字段改变，比如User实体的name字段变更为fullName，在java实体更改后xml不会自动更新，此条同样适用于在viewModule定义的各种方法</p>\r\n        <li>有时候业务逻辑判断不得不变得更加分散，感觉简单的事情搞复杂了</li>\r\n        <p>特别契合的一种场景是对于类recycleview的控件业务逻辑多放在Adapter处理，有很多情况recycleview的item的样式是分很多种，常规的处理是逻辑判断写在一个地方，里面处理各控件的展示效果，这种有个好处是，当\r\n            业务调整时，逻辑判断统一在这个地方重写就可以了。DataBinding的话要么在xml中处理，这样就把逻辑分散了，分散到了各个控件，后来找了折中的方式，定义新的方法，新的可观察者变量在viewModel处理，在xml中根\r\n            据观察者变量设置各控件属性状态。</p>\r\n    </ul>\r\n\r\n\r\n\r\n"
  },
  {
    "title": "2015-02-04Android静态变量使用陷阱",
    "ctime": "2019-12-16 14:15:11",
    "type": "1",
    "label": "1",
    "content": "\r\n        <p>&nbsp; &nbsp; &nbsp;\r\n            &nbsp;静态变量大家再熟悉不过了，本来没什么好重复的。事情起因是这样的，最近测试那边反应正在做的一个产品总是莫名其妙的显示不出某些数据，甚至闪退崩溃，仔细查了几遍发现没什么问题，最后百般周折发现在那部测试机上运行的时候才会出现这中问题。于是各种log，各种断点调试，最后发现都是报的java.lang.NullPointerException，发现是静态变量的问题，想想不至于啊...\r\n        </p>\r\n        <p>&nbsp; &nbsp; &nbsp; bug原因，测试妹纸用的那部测试机常年用于测试，副职公用手机，里面大家装了各种应用，大概不下50多个应用，虽然手机是1G\r\n            RAM，但是也经不起这么造，可用内存极小。调试的时候发现夸张的时候，返回到前一个Activity，后面的马上就被回收了。虽然看起来是外因，但还是得改啊。总结：Android手机在可用内存及其小的时候，会回收everything，是everything当然包括static。\r\n        </p>\r\n        <p>&nbsp; &nbsp; &nbsp;\r\n            怎么解决呢，各种求解。Android是用Java开发，其静态变量的生命周期遵守Java的设计。static&nbsp;修饰的静态变量，使用很方便，在不同的类和包中都可以使用，在虚拟机中单独占用内存，没错，这些都是它们的优点，我们知道静态变量是在类被load的时候分配内存的，并且存在于方法区。当类被卸载的时候，静态变量被销毁。在PC机的客户端程序中，一个类被加载和卸载，可简单的等同于jvm进程的启动和结束。那么在Android中呢？用的Dalvik\r\n            vm也是一样的。不过Android不太突出的进程概念，所以对静态变量的生命周期就会感觉模糊，这种模糊对于值类型是无所谓的，如果是静态的对象引用，则与内存回收、内存泄漏这些问题有关，有必要加深研究和理解。静态变量在类被加载的时候分配内存。类在什么时候被加载？当我们启动一个app的时候，系统会创建一个进程，此进程会加载一个Dalvik\r\n            VM的实例，然后代码就运行在DVM之上，类的加载和卸载，垃圾回收等事情都由DVM负责。也就是说在进程启动的时候，类被加载，静态变量被分配内存。静态变量在类被卸载的时候销毁，类在什么时候被卸载？在进程结束的时候，一般情况下，所有的类都是默认的ClassLoader加载的，只要ClassLoader存在，类就不会被卸载，而默认的ClassLoader生命周期是与进程一致的。Android中的进程什么时候结束，这个是Android对进程和内存管理不同于PC的核心——如果资源足够，Android不会杀掉任何进程，另一个意思就是进程随时可能会被杀掉。而Android会在资源够的时候，重启被杀掉的进程。也就是说静态变量的值，如果不做处理，是不可靠的，可以说内存中的一切都不可靠。如果要可靠，还是得保存到Nand或SD卡中去，在重启的时候恢复回来。另一种情况就是不能把退出所有Activity等同于进程的退出，所以在用户点击图标启动应用的时候<strong>，</strong>以前存放于静态变量中的值，有可能还存在，因此要视具体情况给予清空操作。\r\n        </p>\r\n        <p>&nbsp; &nbsp; &nbsp; 解决方案，两种思路：</p>\r\n        <p>&nbsp; &nbsp; &nbsp; 一、<span\r\n                style=\"line-height: 1.5;\">根据Google官方的推荐以及百度到的各位大神的推荐，我们应该尽量使用继承自Application的自定义类，在我们继承的类中定义需要全局使用的变量，并通过getApplicationContext()来获取和保存相关的变量即可。</span>\r\n        </p>\r\n        <p>比如：</p>\r\n        <p>public class TestApplication extends Application {&nbsp;<br>　　private int curIndex;&nbsp;<br>　　public int\r\n            getCurIndex() {&nbsp;<br>　　return curIndex;&nbsp;<br>　　}&nbsp;<br>　　public void setCurIndex(int curIndex)\r\n            {&nbsp;<br>　　this.curIndex = curIndex;&nbsp;<br>　　}&nbsp;<br>　　@Override&nbsp;<br>　　public void onCreate()\r\n            {&nbsp;<br>　　super.onCreate();&nbsp;<br>　　}&nbsp;<br>　　@Override&nbsp;<br>　　public void onTerminate()\r\n            {&nbsp;<br>　　super.onTerminate();&nbsp;<br>　　}&nbsp;<br>　　}&nbsp;</p>\r\n        <p><br>使用方法：</p>\r\n        <p>&nbsp; &nbsp; &nbsp; &nbsp;//保存变量&nbsp;<br>&nbsp; &nbsp; &nbsp; application.setCurIndex(5);&nbsp;<br>&nbsp;\r\n            &nbsp; &nbsp; //获取变量&nbsp;<br>&nbsp; &nbsp; &nbsp; application.getCurIndex();&nbsp;</p>\r\n        <p>&nbsp; &nbsp; &nbsp; TestApplication application = (TestApplication)\r\n            this.getApplicationContext();&nbsp;<br>&nbsp; &nbsp; &nbsp;\r\n            Application是与应用同时存在的，也就是应用在它就在，并不会被GC给莫名其妙的回收掉，因此，使用此方法更加安全的稳妥。本人最后采用的是这种方法，未发现问题。</p>\r\n        <p>&nbsp; &nbsp; &nbsp; 二、观点不太一样，甚至和第一种有点小冲突</p>\r\n        <p><span style=\"line-height: 1.5;\">&nbsp; &nbsp; &nbsp;\r\n                Application也是一样不可靠，</span>Application其实是一个单例对象，也是放在内存中的，当进程被杀掉，就全清空了，只不过Android系统会帮重建Application，而我们存放在Application的数据自然就没有了，还是得自己处理。静态引用的对象不会被垃圾回收，只要静态变量没有被销毁也没有置null，其对象一直被保持引用，也即引用计数不可能是0，因此不会被垃圾回收。因此，单例对象在运行时不会被回收。\r\n        </p>\r\n        <p><em style=\"line-height: 1.5;\">&nbsp; &nbsp; &nbsp; 相关资料：<a\r\n                    href=\"http://blog.csdn.net/ctcwri/article/details/8858414\"\r\n                    target=\"_blank\">http://blog.csdn.net/ctcwri/article/details/8858414</a></em></p>\r\n        <p>&nbsp;</p>\r\n        <p><em style=\"line-height: 1.5;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<a\r\n                    href=\"http://blog.csdn.net/weihan1314/article/details/8033052\"\r\n                    target=\"_blank\">http://blog.csdn.net/weihan1314/article/details/8033052</a></em></p>\r\n        <p>&nbsp;</p>\r\n        <p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<a\r\n                href=\"http://www.2cto.com/kf/201205/133951.html\"\r\n                target=\"_blank\">http://www.2cto.com/kf/201205/133951.html</a></p>\r\n"
  },
  {
    "title": "2014-11-20Android Studio安装及主题字体配置",
    "ctime": "2019-12-16 14:15:11",
    "type": "1",
    "label": "1",
    "content": "\r\n        <p>&nbsp; &nbsp; &nbsp; &nbsp;在2013&nbsp;Google I/O&nbsp;大会上，谷歌推出了自家全新的安卓软件集成开发工具&nbsp;Android\r\n            Studio，这是&nbsp;Google&nbsp;基于&nbsp;IntelliJ IDEA 修改而来。</p>\r\n        <p>&nbsp; &nbsp; &nbsp; &nbsp;谷歌称&nbsp;Android Studio&nbsp;将会让开发者更快、更具生产力，它完全免费，跨平台支持 Win/Mac/Linux，是替代 Eclipse\r\n            的最佳安卓开发工具，想来还是有点小激动。关于Android Studio如何安装的文章网上搜一下还是有很多的，最近想升级为最新版的<strong>0.9.3\r\n                ，</strong>但因为网络访问和版本，时间问题，参照安装配置时还是出了不少问题，比如：安装完成后创建工程时卡住不动了，是因为联网下载gradle卡住了。</p>\r\n        <p>&nbsp; &nbsp; &nbsp; &nbsp;本人是直接将之前的0.8.2版本直接卸载了，又重新安装的截至目前（2014-11-20）最新版本<strong>Android Studio 0.9.3\r\n                ，</strong>下面介绍一种在我们国度网络环境下切实可行的Android Studio安装方法：</p>\r\n        <h2>1.下载所需的软件</h2>\r\n        <h3>&nbsp; &nbsp; &nbsp;1.1 下载AndroidStudio</h3>\r\n        <p>&nbsp; &nbsp; &nbsp; 下载AndroidStudio，下载页面：&nbsp;<a\r\n                href=\"http://developer.android.com/sdk/installing/studio.html\">http://developer.android.com/sdk/installing/studio.html</a>\r\n        </p>\r\n        <p>&nbsp; &nbsp; &nbsp; &nbsp;本人下载的是<strong>Android Studio 0.9.3&nbsp;<img\r\n                    src=\"https://images0.cnblogs.com/blog/490166/201411/201130002036078.jpg\"\r\n                    alt=\"\"></strong>，如果大家打不开这个网址的话可以去中国开源之类的论坛上搜下，都有提供最新版本的Android Atudio下载衔接</p>\r\n        <h3>&nbsp; &nbsp; &nbsp; 1.2 下载gradle</h3>\r\n        <p>&nbsp; &nbsp; &nbsp; &nbsp;下载gradle，下载页面：&nbsp;<a href=\"http://www.gradle.org/downloads\"\r\n                target=\"_blank\">http://www.gradle.org/downloads</a>&nbsp; &nbsp;，可以选择不同的版本下载</p>\r\n        <p>&nbsp; &nbsp; &nbsp; &nbsp; 当前最新版是2.2，针对Android Studio 0.9.3本人下载是版本2.1</p>\r\n        <p>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<img\r\n                src=\"https://images0.cnblogs.com/blog/490166/201411/201134467812493.jpg\" alt=\"\"></p>\r\n        <h2>2.安装Android Studio</h2>\r\n        <p>&nbsp; &nbsp; &nbsp; <strong><span\r\n                    style=\"font-size: 18px;\">前提：在安装AndroidStudio之前请确保你已经安装了jdk并配置好了java环境</span></strong></p>\r\n        <h3>&nbsp; &nbsp; &nbsp;2.1安装AndroidStudio</h3>\r\n        <p><strong>&nbsp; &nbsp; &nbsp; 2.1.1.安装程序安装</strong></p>\r\n        <p>&nbsp; &nbsp; &nbsp; 安装时直接点击next即可，Android Studio会自动找到你jdk的路径。</p>\r\n        <p>&nbsp; &nbsp; &nbsp;<img\r\n                src=\"https://images0.cnblogs.com/blog/344395/201305/17183611-98dbdaf0b3504e22a9ea5ba0676a3bf9.png\"\r\n                alt=\"\">&nbsp; &nbsp; &nbsp;<img style=\"line-height: 1.5;\"\r\n                src=\"https://images0.cnblogs.com/blog/344395/201305/17183626-a32288da28a04de9898e69d1aa952f30.png\"\r\n                alt=\"\"></p>\r\n        <h3>&nbsp; &nbsp; 2.1.2<strong>.压缩包安装</strong></h3>\r\n        <p><strong>&nbsp; &nbsp; &nbsp;</strong>如果是压缩包的话直接解压到安装目录即可。</p>\r\n        <p>&nbsp;</p>\r\n        <h2>3.配置gradle</h2>\r\n        <h3>&nbsp; &nbsp; &nbsp; 3.1 配置gradle</h3>\r\n        <p>&nbsp; &nbsp; &nbsp; &nbsp;将下载好的gradle压缩zip文件（不要解压）拷贝到\r\n            C:\\Users\\<strong>YourName</strong>\\.gradle\\wrapper\\dists\\gradle-2.1-all\\27drb4udbjf4k88eh2ffdc0n55 目录下，如图：\r\n        </p>\r\n        <div>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<img\r\n                src=\"https://images0.cnblogs.com/blog/490166/201411/201322377502609.png\" alt=\"\"></div>\r\n        <p>&nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n        <h2>4.运行Android Studio</h2>\r\n        <h3>&nbsp; &nbsp; &nbsp; &nbsp;4.1 打开AndroidStudio</h3>\r\n        <p>&nbsp; &nbsp; &nbsp; &nbsp; 根据自己的电脑配置，选择<strong>studio.exe</strong> 或者<strong>studio64.exe</strong>打开Android\r\n            Studio</p>\r\n        <p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<img\r\n                src=\"https://images0.cnblogs.com/blog/490166/201411/201325522811879.png\" alt=\"\"></p>\r\n        <p>&nbsp; &nbsp; &nbsp; &nbsp;新建工程，稍等片刻，还需要下载些东西，就能看见Studio主页面了，显示版本Android Studio 0.9.3</p>\r\n        <p>&nbsp; &nbsp;&nbsp;<img src=\"https://images0.cnblogs.com/blog/490166/201411/201328413751753.jpg\" alt=\"\"></p>\r\n        <p>&nbsp;</p>\r\n        <h2>5.主题及字体设置</h2>\r\n        <h3>&nbsp; &nbsp; &nbsp;5.1 更改studio主题。修改默认配色方案</h3>\r\n        <p>&nbsp; &nbsp; &nbsp; 首先需要进入到andord studio 的IDE Setting界面，&nbsp;点击工具栏上的设置图标或者&nbsp;file-&gt;setting-&gt;&nbsp;\r\n            &nbsp; &nbsp;</p>\r\n        <p>&nbsp; &nbsp;&nbsp;<img class=\"magplus\" title=\"点击查看原始大小图片\"\r\n                src=\"http://dl2.iteye.com/upload/attachment/0084/7173/ce065552-51d2-3999-aaf2-a80f19e1c655.png\" alt=\"\"\r\n                width=\"700\" height=\"54\">&nbsp;<br>&nbsp;&nbsp;</p>\r\n        <p><span style=\"line-height: 1.5;\">&nbsp; &nbsp; 在设置页面选择Editor-&gt;Editor&amp;Fonts，</span>在scheme name\r\n            下拉框选择Darcula，然后点击apply&nbsp;</p>\r\n        <p>&nbsp; &nbsp; <img class=\"magplus\" title=\"点击查看原始大小图片\"\r\n                src=\"http://dl2.iteye.com/upload/attachment/0084/7171/fcd43d76-0543-3b2d-be6d-ba038cb9ff3f.png\" alt=\"\"\r\n                width=\"699\" height=\"443\"></p>\r\n        <h3>&nbsp; &nbsp; &nbsp;5.2 studio的字体设置</h3>\r\n        <p>&nbsp; &nbsp; &nbsp;默认你选择的样式的字体是不可以修改的，你需要点击样式，旁边的Save as……按钮，名称随便自己起一个，然后就可以修改字体大小了</p>\r\n        <p>&nbsp;<br>&nbsp; &nbsp; &nbsp;<img class=\"magplus\" title=\"点击查看原始大小图片\"\r\n                src=\"http://dl2.iteye.com/upload/attachment/0084/7177/8837c90b-93bb-3fac-8848-69bd2208cf66.png\" alt=\"\"\r\n                width=\"699\" height=\"443\"></p>\r\n        <p>&nbsp; &nbsp; &nbsp; 在Apperance界面选项下，勾选Override defaults font by，下来框中选择你喜欢的字体</p>\r\n        <p>&nbsp; &nbsp; &nbsp;<img class=\"magplus\" title=\"点击查看原始大小图片\"\r\n                src=\"http://dl2.iteye.com/upload/attachment/0084/7175/a3ae9a7b-f098-3bb1-ba38-17387876d8f8.png\" alt=\"\"\r\n                width=\"699\" height=\"443\"></p>\r\n        <p>&nbsp; &nbsp; &nbsp;</p>\r\n        <p>&nbsp; &nbsp; <strong>关于Android SDK的下载和安装在这里就不多介绍了，好了，Android\r\n                Studio环境安装和简单的配置就完成了，下面就可以开始coding了......</strong></p>\r\n\r\n"
  },
  {
    "title": "2015-04-03SVN在Android Studio中的配置",
    "ctime": "2019-12-16 14:15:11",
    "type": "1",
    "label": "1",
    "content": "\r\n\r\n        <p id=\"ArticleBox\">&nbsp; &nbsp; &nbsp; 在AndroidStudio中开发版本控制，除了Git就是SVN，和Eclipse不同Android\r\n            Studio没有提供单独的插件，只能和SVN客户端关联使用，和Eclipse安装有很大区别，下面介绍个在AndroidStudio中SVN的安装和配置方法。</p>\r\n        <h3>一、SVN的安装</h3>\r\n        <p>&nbsp; &nbsp; &nbsp; Eclipse都是直接安装插件就可以了，AndroidStudio不行，只能通过关联SVN客户端，需要特别注意的是安装SVN时必须安装command line\r\n            功能，只有安装带有 command line 功能的 SVN 客户端，AndroidStudio才能使用。安装SVN时需要用户自定义选择 command line ，默认是不会自动安装的，如下图：</p>\r\n        <p><img src=\"https://images0.cnblogs.com/blog2015/490166/201504/031041327955765.jpg\" alt=\"\"></p>\r\n        <p>&nbsp; &nbsp; &nbsp; &nbsp;需要选择安装&nbsp;command line &nbsp;功能</p>\r\n        <p><img src=\"https://images0.cnblogs.com/blog2015/490166/201504/031041565922461.jpg\" alt=\"\"></p>\r\n        <h3>二、AndroidStudio中的配置</h3>\r\n        <p>&nbsp; &nbsp; &nbsp; &nbsp; SVN安装完成后，打开 AndroidStudio &nbsp;中的 setting 配置面板，找到Version\r\n            Control--》SubVersion如下图：</p>\r\n        <p><img src=\"https://images0.cnblogs.com/blog2015/490166/201504/031047347326224.jpg\" alt=\"\"></p>\r\n        <p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;配置SVN的路径，Use Command Line Client 选择浏览到你本地安装 TortoiseSVN 的 svn.exe 文件路径，如下图：\r\n        </p>\r\n        <p><img src=\"https://images0.cnblogs.com/blog2015/490166/201504/031049356077662.jpg\" alt=\"\"></p>\r\n        <p>&nbsp; &nbsp; &nbsp; &nbsp;需要注意输入框最右侧有个浏览的按钮，有可能显示不出来</p>\r\n        <p><img src=\"https://images0.cnblogs.com/blog2015/490166/201504/031052284518391.jpg\" alt=\"\"><img\r\n                src=\"https://images0.cnblogs.com/blog2015/490166/201504/031052418109109.jpg\" alt=\"\"></p>\r\n        <p>&nbsp;</p>\r\n        <h3>三、 SubVersion的简单使用</h3>\r\n        <p>&nbsp; &nbsp; &nbsp; &nbsp; 顶部菜单中 CVS项中有个 Import into Version Control，点击就可以使用SVN了</p>\r\n        <p><img src=\"https://images0.cnblogs.com/blog2015/490166/201504/031056442952831.jpg\" alt=\"\"></p>\r\n\r\n"
  },
  {
    "title": "DataBinding中如何使用resource IDs(在ViewModule中)",
    "ctime": "2019-12-16 14:15:11",
    "type": "1",
    "label": "1",
    "content": "\r\n        <h4>最近项目中使用了MVVM架构，遇到了一个需要在ViewModule中变换背景或颜色值，在布局文件.xml中引用的问题</h4>\r\n        <p>问题描述：使用databinding时，当一个控件有可变背景时，常规的用法是：</p>\r\n    <pre><div style=\"background:#DCDCDC;padding: 10px;\">\r\n    <code>\r\n&lt;Button <br>\r\nandroid:layout_width=\"120dp\"<br>\r\nandroid:layout_height=\"wrap_content\"<br>\r\nandroid:layout_gravity=\"center\" <br>\r\nandroid:layout_margin=\"30dp\" <br>\r\nandroid:background= <span style=\"background:#FF6347\">\"@{viewModel.isBtnEnabled ? @drawable/btn_grey_green : @drawable/btn_grey_shape}\"</span>  <br>\r\nandroid:text=\"下一步\" <br>\r\nandroid:textSize=\"16sp\"&gt;\r\n    </code>\r\n    </div></pre>\r\n        <p>背景的设置引申出其他情况，比如：</p>\r\n        <ol>\r\n            <li>判断控件颜色的逻辑比较复杂，不是简单的一个isBtnEnabled变量能判断的；</li>\r\n            <li>控件的颜色值有三种或多于三种，listview或recycleview一般情况下比较复杂5、6种很正常</li>\r\n        </ol>\r\n        <p>这时候如何处理呢？</p>\r\n        <p>对于第一种情况还比较好办，可以新建变量，初始化viewmodule时添加判断逻辑，为变量赋值。但有时候viewmodule中变量已经很多了，我推荐定义判断方法，布局.xml中也可以调用</p>\r\n        <p>第二种情况，思路无非是在viewmodule中定义对应背景的变量，布局.xml中直接赋值给对应控件，逻辑判断放在vm中，问题是资源文件在安卓中比较特殊，在java中定义的资源，.xml能否直接使用？</p>\r\n        <p>于是各种搜索，还真有解决方案，比如在VM定义了背景的变量</p>\r\n        <pre style=\"background:#DCDCDC;padding: 5px;\">public ObservableInt btnBackGroud = new ObservableInt(R.drawable.btn_normal);</pre>\r\n        <p>在布局中使用时需注意</p>\r\n        <pre style=\"background:#DCDCDC;padding: 5px;\">android:background=\"@{<span style=\"background:#FF6347\">ContextCompat.getDrawable(context,viewModel.checkedBackGroud)}</span>\"</pre>\r\n        <p>还是有点不明白？咱们来总结下需要注意的点</p>\r\n        <ol>\r\n            <li>代表背景的变量btnBackGroud必须是Int类型的；</li>\r\n            <li>变量的值必须是android构建的id，也就是说只能是<span style=\"background:#FF6347\">R.drawable</span> 或 <span style=\"background:lightcoral\">R.color</span>，如果使用其他的比如<span style=\"background:lightcoral\">Color.parse(\"\")</span>，编译不报错，但xml最终找不到资源</li>\r\n            <li>ContextCompat的使用，drawable资源ContextCompat.getDrawable(),Color的话使用ContextCompat.getColor()</li>\r\n            <li>如果是color资源的话，定义对应变量时好像要加注解@ColorRes（未测试）</li>\r\n        </ol>\r\n        <p>参考资料：<a href=\"https://zdominguez.com/2016/07/19/using-resource-ids-in-data-binding.html\">Using resource IDs in data binding layouts</a></p>\r\n    \r\n        <font style=\"color:#FF6347\">tetsssss</font>\r\n    "
  },
  {
    "title": "The specified Gradle distribution 'https",
    "ctime": "2019-12-16 14:15:11",
    "type": "1",
    "label": "1",
    "content": "\r\n    <p>Gradle sync failed: The specified Gradle distribution\r\n        'https://services.gradle.org/distributions/gradle-4.6-all.zip' does not appear to contain a Gradle distribution.\r\n        Consult IDE log for more details (Help | Show Log) (40 ms)</p>\r\n    <p>可能是本地找不到对应Gradle版本，自动下载失败的原因。    </p>\r\n    <p>如果对Gradle没有兼容要求的话，项目根目录gradle-->wrapper-->gradle-wrapper.properties,一般最底一行是gradle版本控制</p>\r\n    <p>distributionUrl=https\\://services.gradle.org/distributions/gradle-4.6-all.zip</p>\r\n\r\n"
  },
  {
    "title": "This computer does not support Intel Virtualization Technology (VT-x) or it is being exclusively used by Hyper-V",
    "ctime": "2019-12-16 14:15:11",
    "type": "1",
    "label": "1",
    "content": "TYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <!-- <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> -->\r\n    <!-- <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\"> -->\r\n    <title>Failed to install Intel HAXM</title>\r\n</head>\r\n<style>\r\n    /* li{\r\n   list-style: none; \r\n} */\r\n</style>\r\n<body style=\"padding-left:20px;padding-right:20px;\">\r\n    <h4>问题描述</h4>\r\n\r\n    <p>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp平时开发中一直是真机调试的，最近虽然刚出Android\r\n        9.0，但能早适配就不要等到明天动手，真机是碰不到只能先在模拟器上跑下，so点开Android Studio的SDK Manager各种下载，好不容易\r\n        创建好了模拟器，奈何运行时，闪一下就消失了。提示安装intel haxm，但是安装的时候总是失败，一直提示\r\n    </p>\r\n\r\n    <div style=\"background-color:gainsboro; padding: 10px;\">\r\n        <ul>\r\n            <li>Failed to install Intel HAXM. For details, please check the installation log:\r\n                \"C:\\Users\\dell\\AppData\\Local\\Temp\\haxm_log1.txt\"</li>\r\n            <li>HAXM installation failed. To install HAXM follow the instructions found at:\r\n                https://software.intel.com/android/articles/installation-instructions-for-intel-hardware-accelerated-execution-manager-windows</li>\r\n            <li>Installer log is located at C:\\Users\\dell\\AppData\\Local\\Temp\\haxm_log1.txt</li>\r\n            <li>Installer log contents:</li>\r\n            <li>=== Logging started: 2019-01-03 15:03:31 ===</li>\r\n            <li>This computer does not support Intel Virtualization Technology (VT-x) or it is being exclusively used\r\n                by Hyper-V. HAXM cannot be installed.</li>\r\n            <li>Please ensure Hyper-V is disabled in Windows Features, or refer to the Intel HAXM documentation for\r\n                more information.</li>\r\n            <li>=== Logging stopped: 2019-01-03 15:03:31 ===</li>\r\n        </ul>\r\n    </div>\r\n    <p style=\"padding-left:0px\">然后各种搜索，思路都是:</p>\r\n    <div style=\"background-color:gainsboro; padding: 10px;\">\r\n        <ul>\r\n            <li style=\"list-style:square\">启动时今BLOS开始虚拟选项</li>\r\n            <li style=\"list-style:square\">进入计算机管理，关闭Hyper服务</li>\r\n            <li style=\"list-style:square\">打开启用和关闭windows功能取消选中Hyper</li>\r\n        </ul>\r\n    </div>\r\n    <br>\r\n    <img style=\"width: 360px; align-self: center;\" src=\"https://i.postimg.cc/sgtGV6sX/20190103114801.jpg\">\r\n    <img style=\"width: 360px; align-self: center;\" src=\"https://i.postimg.cc/sgtGV6sX/20190103114801.jpg\">\r\n    <img style=\"width: 360px; align-self: center;\" src=\"https://i.postimg.cc/sgtGV6sX/20190103114801.jpg\">\r\n\r\n    <p>大部分到此就没有下文了，可能在win7、win8上没问题，或早期版本win10也没问题，可在我的win10怎么试都不行，终于找了篇国外的文章，多了一步，命令行</p>\r\n    <div style=\"background-color:gainsboro; padding: 10px;\">\r\n        <ul>\r\n            <li style=\"list-style:square\">Disable-WindowsOptionalFeature -Online -FeatureName Microsoft-Hyper-V-All</li>\r\n        </ul>\r\n    </div>\r\n\r\n    <img src=\"\" alt=\"\">\r\n    <img src=\"\" alt=\"\">\r\n    <img src=\"\" alt=\"\">\r\n\r\n\r\n    <p>\r\n    </p>\r\n\r\n    <a href=\"https://www.isunshare.com/blog/how-to-disable-or-turn-off-hyper-v-in-windows-10-four-options/\"></a>\r\n\r\n"
  },
  {
    "title": "Kotlin An Annotation argument must be a compile time constant",
    "ctime": "2019-12-26 11:25:09",
    "type": "1",
    "label": "1",
    "content": "\r\n<h4>Kotlin An Annotation argument must be a compile time constant</h4>\r\n<h4>问题描述：在kotlin中使用EasyPermissions遇到的问题，直接上代码</h4>\r\n\r\n<pre><div style=\"background:#DCDCDC;padding: 10px;\">\r\n    <code>\r\n    val RC_PERMISSION_PERM : Int = 125\r\n\r\n    ......\r\n\r\n  @AfterPermissionGranted(<strong>RC_PERMISSION_PERM</strong>)\r\n    internal fun doScanBycheckPermission() {\r\n        val perms = arrayOf(Manifest.permission.CAMERA, Manifest.permission.READ_EXTERNAL_STORAGE, Manifest.permission.WRITE_EXTERNAL_STORAGE)\r\n        if (EasyPermissions.hasPermissions(this, *perms)) {\r\n            val intent = Intent(this@LoginActivity, ScanActivity::class.java)\r\n            startActivityForResult(intent, Constants.PERMISSION_REQUEST_CODE)\r\n        } else {\r\n            EasyPermissions.requestPermissions(this, \"App需要相关权限\", Constants.RC_PERMISSION_PERM, *perms)\r\n        }\r\n\r\n    }\r\n    </code>\r\n    </div></pre>\r\n\r\n<p>@AfterPermissionGranted(<strong>RC_PERMISSION_PERM</strong>) 变量<strong>RC_PERMISSION_PERM</strong>报错，提示An Annotation argument must be a compile time constant</p>\r\n<h4>解决思路：</h4>\r\n<p>检查val是不可变常量，搜索const val才是真正对应java中的static final，于是添加const关键字，又报错const只能修饰顶级属性即：<strong>Top-level</strong></p>\r\n\r\n<pre><div style=\"background:#DCDCDC;padding: 10px;\">\r\n    <code>\r\n  const val RC_PERMISSION_PERM : Int = 125\r\n\r\n</code>\r\n</div></pre>\r\n\r\n<p>知识点： <strong>Top-level</strong>属性或者方法，就是和class同级的，比如上面的就可以写成</p>\r\n\r\n<pre><div style=\"background:#DCDCDC;padding: 10px;\">\r\n    <code>\r\n  const val RC_PERMISSION_PERM : Int = 125\r\nclass LoginActivity : Activity(), EasyPermissions.PermissionCallbacks {\r\n        ......\r\n\r\n</code>\r\n</div></pre>\r\n\r\n<p>即变量RC_PERMISSION_PERM和LoginActivity同级，这样在编译成class的时候，会把Top-level的属性和函数创建到以类名+Kt为名的class文件中，Top-level调用的时候类似于调用扩展函数那样，直接调用属性或者函数。</p>\r\n\r\n<h4>总结：</h4>\r\n<p>kotlin中想要实现java中static final，除了需要val关键字外，还需要关键字<strong>const</strong>标识一个常量</p>\r\n<p>const修饰的val变量相当于java中static final，并且有两点需要注意</p>\r\n<ol>\r\n    <li>const只能修饰val常量（不能修饰var）</li>\r\n    <li>const只能修饰顶级属性</li>\r\n</ol>\r\n\r\n\r\n\r\n"
  },
  {
    "title": "2014-10-10Android Dependencies小差号引起的问题",
    "ctime": "2019-12-16 14:15:11",
    "type": "1",
    "label": "1",
    "content": "\r\n        <div id=\"cnblogs_post_body\" class=\"blogpost-body\"><p>&nbsp; &nbsp; &nbsp;问题是由于Android Dependencies小差号引起的，下午一搞Android的哥们在群里说最近导入的几个工程每个都是Android Dependencies报错，小差号，我先说解决方法：</p>\r\n            <p>&nbsp; &nbsp; &nbsp;方法一：自己新建工程，将整个工程重新建一遍。（事倍功半）</p>\r\n            <p>&nbsp; &nbsp; &nbsp;方法二：将Android Dependencies项直接remove掉，未作测试，有的说可以，有的说下次启动仍然报错。</p>\r\n            <p>&nbsp; &nbsp; &nbsp;方法三：引用你本地的 appcompat_v7<span style=\"color: #ff0000;\">_x</span> &nbsp;Library工程,<span style=\"color: #ff0000;\">_x<span style=\"color: #000000;\">是默认生成的代号随便一个都行，如图：<br></span></span></p>\r\n            <p><span style=\"color: #ff0000;\"><span style=\"color: #000000;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<img src=\"https://images0.cnblogs.com/blog/490166/201410/101522491085911.png\" alt=\"\"></span></span></p>\r\n            <p><span style=\"color: #ff0000;\">&nbsp; &nbsp; &nbsp; <strong>注意将原工程中引用的appcompat_v7_x &nbsp;Remove掉</strong></span></p>\r\n            <p>&nbsp;</p>\r\n            <p><span style=\"color: #ff0000;\"><span style=\"color: #000000;\">&nbsp; &nbsp; &nbsp; 下面是对此问题的缘由介绍：</span></span></p>\r\n            <p>&nbsp; &nbsp; &nbsp; &nbsp;记得是ADT至22.6.0版本之后，<strong><span style=\"color: #ff0000;\">创建新的Android项目，会出现appcompat_v7的工程。而且是创建一个工程新的工程就会出现</span></strong>，特别腻歪。查资料说appcompat_v7是Google自己的一个兼容包，就是一个支持库，能让android2.1以上全使用android4.0版本的界面。（本来挺好的事，但每次生成个新工程这对开发者来说也太腻歪了，本来就捉襟见肘的工作目录）</p>\r\n            <p>&nbsp; &nbsp; &nbsp; &nbsp;相信看到这里也就不难理解为什么会出现上面的问题，大家在上传或者相互拷贝工程的时候直接把工程拷了过去，都不习惯再把<span style=\"color: #ff0000;\"><strong>appcompat_v7</strong></span>也拷贝过去，新导入工程时就会报错。相信这个对于新手或不太注意的程序猿来说很是腻歪的一件事。</p>\r\n            <p>&nbsp; &nbsp; &nbsp;&nbsp;</p>\r\n            <p>&nbsp; &nbsp; &nbsp; 说到这里再多说点相关的东西。</p>\r\n            <p>&nbsp; &nbsp; &nbsp; Android Dependencies 是什么？</p>\r\n            <p>&nbsp;&nbsp; &nbsp; &nbsp;官方的解释是：Android Dependencies is a virtual folder where Eclipse shows what JAR files the project depends on. It's not a physical folder; you won't find it on your hard disk. And the folder is not checked in into Subversion.Do not delete that folder. You will destroy your project.<em id=\"__mceDel\">To fix it, just revert to an older Subversion revision and check it in again.</em></p>\r\n            <p><em style=\"line-height: 1.5;\"><em><em>&nbsp; &nbsp; &nbsp; </em></em></em>就这么简单几句话，不清不楚的，简单说：从ADT16开始，Android项目中多了一个名为“Android Dependencies” 的库应用文件夹，这是ADT的第三方库新的引用方式。当你需要引用第三方库时，只需在项目中新建一个名为\"libs\"的文件夹，然后将所有第三方包拷贝到该目录下。当eclipse启动时，ADT就会自动帮你完成库的引用，而不需要像以前一样自己Build Path，也不再需要Referenced Libraries了。</p>\r\n            <p>&nbsp; &nbsp; &nbsp; 这里又提到了<strong>libs</strong> ，<strong><span style=\"color: #ff0000;\"> Referenced Libraries</span></strong> ，我们还可以想到<strong><span style=\"color: #ff0000;\">Android Private Libraries<span style=\"color: #000000;\">，</span></span></strong><span style=\"color: #ff0000;\"><span style=\"color: #000000;\">想下</span></span><span style=\"color: #ff0000;\"><span style=\"color: #000000;\">下引用library的方法就不难理解</span></span></p>\r\n            <p>&nbsp; &nbsp; &nbsp;&nbsp;1.被引用的项目在“Android”选项里设置“Is Library”打钩</p>\r\n            <p>&nbsp; &nbsp; &nbsp;&nbsp;2.引用项在“Android”选项里设置“add\"被引用项</p>\r\n            <p>&nbsp; &nbsp; &nbsp;&nbsp;3.android Dependencies会显示引用项目，依赖项目</p>\r\n            <p>&nbsp; &nbsp; &nbsp;&nbsp;Android Private Libraries:表示放在libs里面的jar包引用，视为私有引用</p>\r\n            <p>&nbsp; &nbsp; &nbsp;&nbsp;Referenced Libraries:表示引用的外部jar包。</p>\r\n            <p>&nbsp; &nbsp; &nbsp; 另：&nbsp;</p>\r\n            <p>&nbsp; &nbsp; &nbsp; &nbsp;如果引用项目和被引用项目用到同一个jar包，版本需要保持一致。</p>\r\n            <p>&nbsp; &nbsp; &nbsp; &nbsp;Android Private Libraries和Referenced Libraries不能重复引用同一个jar包，两个都有时去掉一个。</p>\r\n            <p>&nbsp; &nbsp; &nbsp; &nbsp;最近发现&nbsp;&nbsp;Android Private Libraries和Referenced Libraries可以重复引用同一个jar包，不知该当何解，以后有时间再研究,继续coding.....</p>\r\n            <p>&nbsp; &nbsp; &nbsp;</p>\r\n            <p>&nbsp;</p></div>\r\n\r\n    \r\n"
  },
  {
    "title": "2014-09-25Android软键盘弹出时布局问题",
    "ctime": "2019-12-16 14:15:11",
    "type": "1",
    "label": "1",
    "content": "\r\n        <div id=\"cnblogs_post_body\" class=\"blogpost-body\"><p>&nbsp; &nbsp; &nbsp; &nbsp; 最近项目需要做一个类似聊天室的模块，基于Socket实现的，这部分稍后一段时间再做总结，功能上的相关点都实现了小例子也做出来了，最后发现一个比较腻歪的问题就是软键盘弹出时总是会把标题“挤出”屏幕，（无论标题是写在布局中还是仿照theme的方式添加到style中），输入时有失观赏如下图：</p>\r\n            <p><img src=\"https://images0.cnblogs.com/blog/490166/201409/250939418571876.png\" alt=\"\" width=\"405\" height=\"721\">&nbsp; &nbsp;&nbsp;<img src=\"https://images0.cnblogs.com/blog/490166/201409/250940091853325.png\" alt=\"\" width=\"406\" height=\"722\"></p>\r\n            <p>&nbsp;</p>\r\n            <p>&nbsp; &nbsp; &nbsp; &nbsp; 隐隐感觉之前项目一直有类似问题，只不过一般只在登陆界面，无伤大雅，用户输入后一掠而过，可以忽略，但这个页面这么处理确实不太美观。</p>\r\n            <p>&nbsp; &nbsp; &nbsp; &nbsp; 查了下此类问题大致两种思路解决：</p>\r\n            <p><strong>&nbsp; &nbsp; &nbsp; &nbsp; 一、调整布局在底层使用ScrollView组件，将需要固定的布局（标题）写在Scrollview之外。</strong></p>\r\n            <p><strong>&nbsp; &nbsp; &nbsp; &nbsp; 二、在manifest配置文件中设置Activity属性。</strong></p>\r\n            <p>&nbsp; &nbsp; &nbsp;<span style=\"background-color: #ffffff;\"> &nbsp; <span style=\"color: #ff0000;\">第一种方法未做尝试，可行性有待定论，<span style=\"color: #000000;\">下面主要说下第二种：</span></span></span></p>\r\n            <p>&nbsp;</p>\r\n            <p>&nbsp;</p>\r\n            <p>&nbsp; &nbsp; &nbsp;&nbsp;&nbsp;activity主窗口与软键盘的交互模式，可以用来避免输入法面板遮挡问题，有个属性设置android:windowSoftInputMode，这个属性能影响两件事情：</p>\r\n            <p>&nbsp; &nbsp; &nbsp;&nbsp;&nbsp;1、当有焦点产生时，软键盘是隐藏还是显示</p>\r\n            <p>&nbsp; &nbsp; &nbsp;&nbsp;&nbsp;2、是否减少活动主窗口大小以便腾出空间放软键盘</p>\r\n            <p>&nbsp;&nbsp; &nbsp; &nbsp;&nbsp;&nbsp;它的设置必须是下面列表中的一个值，或一个”state…”值加一个”adjust…”值的组合。在任一组设置多个值——多个”state…”values，例如＆mdash有未定义的结果。各个值之间用|分开。例如:</p>\r\n            <p><span style=\"color: #ff0000;\">&nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&lt;activity android:windowSoftInputMode=\"stateVisible|adjustResize\". . . &gt;</span></p>\r\n            <p align=\"LEFT\">&nbsp; &nbsp; &nbsp;&nbsp;&nbsp;在这设置的值(除\"stateUnspecified\"和\"adjustUnspecified\"以外)将覆盖在主题中设置的值</p>\r\n            <p>&nbsp;</p>\r\n            <p><strong>&nbsp; &nbsp; &nbsp;&nbsp;&nbsp;各值的含义：</strong></p>\r\n            <p>&nbsp; &nbsp; &nbsp;&nbsp;&nbsp;stateUnspecified：软键盘的状态并没有指定，系统将选择一个合适的状态或依赖于主题的设置</p>\r\n            <p>&nbsp; &nbsp; &nbsp;&nbsp;&nbsp;stateUnchanged：当这个activity出现时，软键盘将一直保持在上一个activity里的状态，无论是隐藏还是显示</p>\r\n            <p>&nbsp; &nbsp; &nbsp;&nbsp;&nbsp;stateHidden：用户选择activity时，软键盘总是被隐藏</p>\r\n            <p>&nbsp; &nbsp; &nbsp;&nbsp;&nbsp;stateAlwaysHidden：当该Activity主窗口获取焦点时，软键盘也总是被隐藏的</p>\r\n            <p>&nbsp; &nbsp; &nbsp;&nbsp;&nbsp;stateVisible：软键盘通常是可见的</p>\r\n            <p>&nbsp; &nbsp; &nbsp;&nbsp;&nbsp;stateAlwaysVisible：用户选择activity时，软键盘总是显示的状态</p>\r\n            <p>&nbsp; &nbsp; &nbsp;&nbsp;&nbsp;adjustUnspecified：默认设置，通常由系统自行决定是隐藏还是显示</p>\r\n            <p>&nbsp; &nbsp; &nbsp;&nbsp;&nbsp;adjustResize：该Activity总是调整屏幕的大小以便留出软键盘的空间<span style=\"color: #ff0000;\"><strong>（可以显示全部屏幕）</strong></span></p>\r\n            <p>&nbsp; &nbsp; &nbsp;&nbsp;&nbsp;adjustPan：当前窗口的内容将自动移动以便当前焦点从不被键盘覆盖和用户能总是看到输入内容的部分<span style=\"color: #ff0000;\"><strong>（软键盘会遮挡屏幕）</strong></span></p>\r\n            <p><span style=\"color: #000000;\"><strong>&nbsp; &nbsp; &nbsp; &nbsp;下面是其中两个属性的效果图：<br></strong></span></p>\r\n            <p><span style=\"color: #ff0000;\"><strong>&nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: #000000;\">1.adjustResize这种也是想要达到的效果</span></strong></span></p>\r\n            <p><span style=\"color: #ff0000;\"><strong><span style=\"color: #000000;\"><img src=\"https://images0.cnblogs.com/blog/490166/201409/250952590763099.png\" alt=\"\"></span></strong></span></p>\r\n            <p><span style=\"color: #ff0000;\"><strong><span style=\"color: #000000;\"><strong>&nbsp; 2.adjustPan，这个属性偏于以软键盘为重点</strong></span></strong></span></p>\r\n            <p><span style=\"color: #ff0000;\"><strong><span style=\"color: #000000;\"><strong><img src=\"https://images0.cnblogs.com/blog/490166/201409/250954307959152.png\" alt=\"\"></strong></span></strong></span></p>\r\n            <p>&nbsp;</p></div>\r\n"
  }
]